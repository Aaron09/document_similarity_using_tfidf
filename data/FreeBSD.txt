
FreeBSD





FreeBSD 10 bootloader with ASCII art logo



Developer
The FreeBSD Project


OS family
Unix-like (BSD)


Working state
Active


Source model
Open source


Initial release
1 November 1993; 24 years ago (1993-11-01)


Latest release
11.1 (26 July 2017; 5 months ago (2017-07-26)) [±][1]


Marketing target
Desktop, Workstation, Server, Embedded systems


Package manager
pkg


Platforms
IA-32, x86-64, 64-bit SPARC, PowerPC, ARM, MIPS


Kernel type
Monolithic with dynamically loadable modules


Userland
BSD


Default user interface
Command-line interface


License
FreeBSD license, FreeBSD Documentation License


Official website
www.freebsd.org


FreeBSD is a free and open-source Unix-like operating system descended from Research Unix via the Berkeley Software Distribution (BSD). Although for legal reasons FreeBSD cannot use the Unix trademark, it is a direct descendant of BSD, which was historically also called "BSD Unix" or "Berkeley Unix". The first version of FreeBSD was released in 1993, and as of 2005 FreeBSD was the most widely used open-source BSD distribution, accounting for more than three-quarters of all installed systems running open-source BSD derivatives.[2]
FreeBSD has similarities with Linux, with two major differences in scope and licensing: FreeBSD maintains a complete operating system, i.e. the project delivers kernel, device drivers, userland utilities and documentation, as opposed to Linux delivering a kernel and drivers only and relying on third-parties for system software;[3] and FreeBSD source code is generally released under a permissive BSD license as opposed to the copyleft GPL used by Linux.
The FreeBSD project includes a security team overseeing all software shipped in the base distribution. A wide range of additional third-party applications may be installed using the pkgng package management system or the FreeBSD Ports, or by directly compiling source code. Due to its permissive licensing terms, much of FreeBSD's code base has become an integral part of other operating systems, such as Juniper JUNOS, Apple's Darwin (which is the base for macOS, iOS, watchOS, and tvOS operating systems by Apple), pfSense, the Nintendo Switch system software,[4][5][6] and the operating systems running on Sony's PlayStation 3[7] and PlayStation 4.[8]



Contents


1 History

1.1 Background
1.2 Birth of FreeBSD
1.3 Lawsuit


2 Features

2.1 Uses
2.2 Networking
2.3 Storage
2.4 Security
2.5 Portability
2.6 Third-party software
2.7 Jails
2.8 Virtualization
2.9 OS compatibility layers
2.10 Kernel
2.11 Documentation and support
2.12 Installers


3 Development

3.1 Governance structure
3.2 Branches
3.3 Foundation


4 License
5 Logo
6 Derivatives
7 Version history
8 See also
9 References

9.1 Citations
9.2 Sources


10 External links



History[edit]
Main article: History of FreeBSD
Background[edit]
FreeBSD's roots go back to the University of California, Berkeley. The university acquired a UNIX source license from AT&T. Students of the university started to modify and improve the AT&T Unix and called this modified version "Berkeley Unix" or "BSD", implementing features such as TCP/IP, virtual memory and the Unix File System. The BSD project was founded in 1976 by Bill Joy. But since BSD contained code from AT&T, Unix, all recipients had to get a license from AT&T first in order to use BSD.[9]
In June 1989, "Networking Release 1" or simply Net-1 – the first public version of BSD – was released. After releasing Net-1, Keith Bostic, a developer of BSD, suggested replacing all AT&T code with freely-redistributable code under the original BSD license. Work on replacing AT&T code began and, after 18 months, much of the AT&T code was replaced. However, six files containing AT&T code remained in the kernel. The BSD developers decided to release the "Networking Release 2" (Net-2) without those six files. Net-2 was released in 1991.[9]
Birth of FreeBSD[edit]
In 1992, several months after the release of Net-2, William Jolitz and Lynne Jolitz wrote replacements for those six missing files, ported BSD to the Intel 80386-based microprocessors, and called their new operating system 386BSD. They released 386BSD via an anonymous FTP server.[9] The development flow of 386BSD was slow and after a period of neglect, a group of 386BSD users decided to branch out on their own and create FreeBSD so that they could keep the operating system up to date. On 19 June 1993, the name FreeBSD was chosen for the project.[10] The first version of FreeBSD was released on November 1993.[11][9]
In the early days of the project's inception, a company named Walnut Creek CDROM, upon the suggestion of the two FreeBSD developers, agreed to release the operating system on CD-ROM. In addition to that, the company employed Jordan Hubbard and David Greenman, ran FreeBSD on its servers, sponsored FreeBSD conferences and published FreeBSD-related books, including The Complete FreeBSD by Greg Lehey. By 1997, FreeBSD was Walnut Creek's "most successful product". The company itself later renamed to The FreeBSD Mall and later iXsystems.[12][13][14]
Today, FreeBSD is used by many IT companies such as IBM, Nokia, Juniper Networks, and NetApp to build their product.[15][16] Certain parts of Apple's Mac OS X operating system are based on FreeBSD.[17] The PlayStation 3 operating system also borrows certain components from FreeBSD,[18] while the PlayStation 4 operating system is derived from FreeBSD 9.[19] Netflix,[20] WhatsApp,[21] and FlightAware[22] are also examples of big, successful and heavily network-oriented companies which are running FreeBSD.
Lawsuit[edit]
386BSD and FreeBSD were both derived from 1992's BSD release.[15] In January 1992, BSDi started to release BSD/386, later called BSD/OS, an operating system similar to FreeBSD and based on 1992's BSD release. AT&T filed a lawsuit against BSDi and alleged distribution of AT&T source code in violation of license agreements. The lawsuit was settled out of court and the exact terms were not all disclosed. The only one that became public was that BSDi would migrate their source base to the newer 4.4BSD-Lite sources. Although not involved in the litigation, it was suggested to FreeBSD that they should also move to 4.4BSD-Lite.[23] FreeBSD 2.0, which was released on November 1994, was the first version of FreeBSD without any code from AT&T.[24]
Features[edit]




FreeBSD 9.1 startup with console login prompt


Uses[edit]
As a general purpose operating system, FreeBSD is used in various scenarios:[25]

Servers
FreeBSD contains a significant collection of server-related software in the base system and the ports collection, it is possible to configure and use FreeBSD as a mail server, web server, Firewall, FTP server, DNS server and a router, among other applications.


Desktop
The X Window System is not installed by default, but is available in the FreeBSD ports collection. A number of Desktop environments such as GNOME, KDE and Xfce, and lightweight window managers such as Openbox, Fluxbox and dwm are also available to FreeBSD.[26]


Embedded systems
Although it explicitly focuses on the IA-32 and x86-64 platforms, FreeBSD also supports others such as ARM, PowerPC and MIPS to a lesser degree.

Networking[edit]
FreeBSD's TCP/IP stack is based on the 4.2BSD implementation of TCP/IP which greatly contributed to the widespread adoption of these protocols.[27] FreeBSD also supports IPv6,[28] SCTP, IPSec, and wireless networking (Wi-Fi).[29] The IPv6 and IPSec stacks were taken from the KAME project.[30] Also, FreeBSD supports IPX and AppleTalk protocols, but they are considered old and it is planned to drop support of them in the upcoming FreeBSD 11.0.[31]
As of FreeBSD 5.4, support for the Common Address Redundancy Protocol (CARP) was imported from the OpenBSD project. CARP allows multiple nodes to share a set of IP addresses. So if one of the nodes goes down, other nodes still can serve the requests.[32]
Storage[edit]
FreeBSD has several unique features related to storage. Soft updates can protect the consistency of the UFS filesystem (widely used on the BSDs) in the event of a system crash.[33] Filesystem snapshots allow an image of a UFS filesystem at an instant in time to be efficiently created.[34] Snapshots allow reliable backup of a live filesystem. GEOM is a modular framework that provides RAID (levels 0, 1, 3 currently), full disk encryption, journaling, concatenation, caching, and access to network-backed storage. GEOM allows building of complex storage solutions combining ("chaining") these mechanisms.[35] FreeBSD provides two frameworks for data encryption: GBDE and Geli. Both GBDE and Geli operate at the disk level. GBDE was written by Poul-Henning Kamp and is distributed under the two-clause BSD license. Geli is an alternative to GBDE that was written by Pawel Jakub Dawidek and first appeared in FreeBSD 6.0.[36][37]
From 7.0 onward, FreeBSD supports the ZFS filesystem. ZFS was previously an open source filesystem that was first developed by Sun Microsystems, but when Oracle acquired Sun, ZFS became a proprietary product. However, the FreeBSD project is still developing and improving its ZFS implementation via the OpenZFS project.[38]
Security[edit]
FreeBSD provides several security-related features including access control lists (ACLs),[39] security event auditing, extended file system attributes, mandatory access controls (MAC)[40] and fine-grained capabilities.[41] These security enhancements were developed by the TrustedBSD project. The project was founded by Robert Watson with the goal of implementing concepts from the Common Criteria for Information Technology Security Evaluation and the Orange Book. This project is ongoing and many of its extensions have been integrated into FreeBSD.[42] The project is supported by a variety of organizations, including the DARPA, NSA, Network Associates Laboratories, Safeport Network Services, the University of Pennsylvania, Yahoo!, McAfee Research, SPARTA, Apple Computer, nCircle Network Security, Google, the University of Cambridge Computer Laboratory, and others.[43]
The project has also ported the NSA's FLASK/TE implementation from SELinux to FreeBSD. Other work includes the development of OpenBSM, an open source implementation of Sun's Basic Security Module (BSM) API and audit log file format, which supports an extensive security audit system. This was shipped as part of FreeBSD 6.2. Other infrastructure work in FreeBSD performed as part of the TrustedBSD Project has included GEOM and OpenPAM.[41]
Most components of the TrustedBSD project are eventually folded into the main sources for FreeBSD. In addition, many features, once fully matured, find their way into other operating systems. For example, OpenPAM has been adopted by NetBSD.[44] Moreover, the TrustedBSD MAC Framework has been adopted by Apple for macOS.[45]
FreeBSD ships with three different firewall packages: IPFW, pf and IPFilter. IPFW is FreeBSD's native firewall. pf was taken from OpenBSD and IPFilter was ported to FreeBSD by Darren Reed.[46]
Taken from OpenBSD, the OpenSSH program was included in default install. OpenSSH is a Free implementation of the SSH protocol and is a replacement for telnet. Unlike telnet, OpenSSH encrypts all information (including username and password).[47]
In November 2012, The FreeBSD Security Team announced that hackers gained unauthorized access on two of the project's servers. These servers were turned off immediately. More research demonstrated that the first unauthorized access by hackers occurred on 19 September. Apparently hackers gained access to these servers by stealing SSH keys from one of the developers, not by exploiting a bug in the operating system itself. These two hacked servers were part of the infrastructure used to build third-party software packages. The FreeBSD Security Team checked the integrity of the binary packages and announced that no unauthorized change was made to the binary packages, but they stated that they can't guarantee the integrity of packages that were downloaded between 19 September and 11 November.[48][49][50]
Portability[edit]
FreeBSD has been ported to a variety of instruction set architectures. The FreeBSD project organizes architectures into tiers that characterize the level of support provided. Tier 1 architectures are mature and fully supported. Tier 2 architectures are undergoing major development. Tier 3 architectures are experimental or are no longer under active development and Tier 4 architectures have no support at all.
As of March 2016[update], FreeBSD has been ported to the following architectures:[51]


Architecture
Support level[52]
Notes


x86 (IA-32)
Tier 1
referred to as "i386"


x86-64
Tier 1
referred to as "amd64"


NEC PC-9801
Tier 2
referred to as "pc98", support removed in 12-CURRENT[53]


Sun SPARC
Tier 2
only 64-bit (V9) architecture


PowerPC and PowerPC/64
Tier 2



ARM
Tier 2



IA-64
Tier 3
unsupported as of 11.0


MIPS
Tier 3



RISC-V
Tier 3



IBM ESA/390
Tier 4
referred to as "S/390"


DEC Alpha
Tier 4
support discontinued in 7.0


The ARM and MIPS support is mostly aimed at embedded systems, however FreeBSD/ARM runs on a number of single-board computers, including the BeagleBone Black, Raspberry Pi[54][55] and Wandboard.[56]
Third-party software[edit]
For more details on this topic, see FreeBSD Ports.




Screenshot of FreeBSD 11.0


FreeBSD has a software repository of over 26,000 applications that are developed by third parties. Examples include: windowing systems, web browsers, email clients, office suites and so forth. In general, the project itself does not develop this software, only the framework to allow these programs to be installed, which is known as the Ports collection. Applications may either be compiled from source ("ports"), provided their licensing terms allow this, or downloaded as pre-compiled binaries ("packages").[57] The Ports collection supports the current and stable branches of FreeBSD. Older releases are not supported and may or may not work correctly with an up-to-date Ports collection.[58]
Ports use Makefile to automatically fetch the desired application's source code, either from a local or remote repository, unpack it on the system, apply patches to it and compile it.[3][59] Depending on the size of the source code, compiling can take a long time, but it gives the user more control over the process and its result. Most ports also have package counterparts (i.e. pre-compiled binaries), giving the user a choice. Although this method is faster, the user has fewer customisation options.[57]
FreeBSD version 10.0 introduced the package manager pkg as a replacement for the previously used package tools.[60] It is functionally similar to apt and yum in Linux distributions. It allows for installation, upgrading and removal of both ports and packages. In addition to pkg, PackageKit can also be used to access the Ports collection.
Jails[edit]
Main article: FreeBSD jail
First introduced in FreeBSD version 4, jails is a security mechanism and an implementation of operating-system-level virtualization that enables the user to run multiple instances of a guest operating system on top of a FreeBSD host. It is an enhanced version of the traditional chroot mechanism. A process that runs within such a jail is unable to access the resources outside of it. Every jail has its own hostname and IP address. It is possible to run multiple jails at the same time, but the kernel is shared among all of them. Hence only software supported by the FreeBSD kernel can be run within a jail.[61]
Virtualization[edit]
Main article: bhyve
bhyve, a new virtualization solution was introduced in FreeBSD 10.0. bhyve allows a user to run a number of guest operating systems (FreeBSD, OpenBSD, Linux, and Microsoft Windows[62]) simultaneously. Other operating systems such as Illumos are planned. bhyve was written by Neel Natu and Peter Grehan and was announced in the 2011 BSDCan conference for the first time. The main difference between bhyve and FreeBSD jails is that jails are an operating system-level virtualization and therefore limited to only FreeBSD guests; but bhyve is a type 2 hypervisor and is not limited to only FreeBSD guests.[63][64][65] For comparison, bhyve is a similar technology to KVM whereas jails are closer to LXC containers or Solaris Zones.
VirtualBox and QEMU are available on FreeBSD.
OS compatibility layers[edit]
Most software that runs on Linux can run on FreeBSD using an optional built-in compatibility layer. Hence, most Linux binaries can be run on FreeBSD, including some proprietary applications distributed only in binary form. This compatibility layer is not an emulation; Linux's system call interface is implemented in the FreeBSD's kernel and hence, Linux executable images and shared libraries are treated the same as FreeBSD's native executable images and shared libraries.[66] Additionally, FreeBSD provides compatibility layers for several other Unix-like operating systems, in addition to Linux, such as BSD/OS and SVR4,[66] however, it is more common for users to compile those programs directly on FreeBSD.[67]
No noticeable performance penalty over native FreeBSD programs has been noted when running Linux binaries, and, in some cases, these may even perform more smoothly than on Linux.[68][69] However, the layer is not altogether seamless, and some Linux binaries are unusable or only partially usable on FreeBSD. There is support for system calls up to version 2.6.18, available since FreeBSD 7.0. As of release 10.3, FreeBSD can run 64-bit Linux binaries.[70]
FreeBSD has implemented a number of Microsoft Windows native NDIS kernel interfaces to allow FreeBSD to run Windows-only network drivers.[71][72]
Kernel[edit]
FreeBSD's kernel provides support for some essential tasks such as managing processes, communication, booting and filesystems. FreeBSD has a monolithic kernel,[73] with modular design. Different parts of the kernel, such as drivers, are designed as modules. The user can load and unload these modules at any time.[74] ULE is the default scheduler in FreeBSD since version 7.1, it supports SMP and SMT.[75] The FreeBSD kernel has also a scalable event notification interface, named kqueue. It has been ported to other BSD-derivatives such as OpenBSD, NetBSD.[76] Kernel threading was introduced in FreeBSD 5.0, using an M:N threading model. This model works well in theory,[77][78] but it is hard to implement and few operating systems support it. Although FreeBSD's implementation of this model worked, it did not perform well, so from version 7.0 onward, FreeBSD started using a 1:1 threading model, called libthr.[78]
Documentation and support[edit]
FreeBSD's documentation consists of its handbooks, manual pages, mailing list archives, FAQs and a variety of articles, mainly maintained by The FreeBSD Documentation Project. FreeBSD's documentation is translated into several languages.[79] All official documentation is released under the FreeBSD Documentation License, "a permissive non-copyleft free documentation license that is compatible with the GNU FDL".[80] FreeBSD's documentation is described as "high-quality".[81][82]
The FreeBSD project maintains a variety of mailing lists.[83] Among the most popular mailing lists are FreeBSD-questions (general questions) and FreeBSD-hackers (a place for asking more technical questions).[84]
Since 2004, the New York City BSD Users Group database provides dmesg information from a collection of computers (laptops, workstations, single-board computers, embedded systems, virtual machines, etc.) running FreeBSD.[85]
Installers[edit]
From version 2.0 to 9.0, FreeBSD used the sysinstall program as its main installer. It was written in C by Jordan Hubbard. It uses a text user interface, and is divided into a number of menus and screens that can be used to configure and control the installation process. It can also be used to install Ports and Packages as an alternative to the command-line interface.[86]
The sysinstall utility is now considered deprecated in favor of bsdinstall, a new installer which was introduced in FreeBSD 9.0. bsdinstall is "a lightweight replacement for sysinstall" that was written in sh. According to OSNews, "It has lost some features while gaining others, but it is a much more flexible design, and will ultimately be significant improvement".[61][87]
Development[edit]
FreeBSD is developed by a volunteer team located around the world. The developers use the Internet for all communication and many have not met each other in person. In addition to local user groups sponsored and attended by users, an annual conference, called BSDcon, is held by USENIX. BSDcon is not FreeBSD-specific so it deals with the technical aspects of all BSD operating systems, including OpenBSD and NetBSD.[88] In addition to BSDcon, three other annual conferences, EuroBSDCon, AsiaBSDCon and BSDCan take place in Europe, Japan and Canada respectively.[89][90][91]
Governance structure[edit]
Main article: FreeBSD Core Team
The FreeBSD Project is run by around 500 committers, or developers who have commit access to the master source code repositories and can develop, debug or enhance any part of the system. Most of the developers are volunteers and few developers are paid by some companies.[15] There are several kinds of committers, including source committers (base operating system), doc committers (documentation and web site authors) and ports (third party application porting and infrastructure). Every two years the FreeBSD committers select a 9-member FreeBSD Core Team who are responsible for overall project direction, setting and enforcing project rules and approving new commiters, or the granting of SVN commit access. A number of responsibilities are officially assigned to other development teams by the FreeBSD Core Team, for example, responsibility for managing the ports collection is delegated to the Ports Management Team.[92]
In addition to developers, FreeBSD has thousands of "contributors". Contributors are also volunteers outside of the FreeBSD project who submit patches for consideration by committers, as they don't have direct access to FreeBSD's source code repository. Committers then evaluate contributors submissions and decide what to accept and what to reject. A contributor who submits high-quality patches is often asked to become a committer.[92]
Branches[edit]
FreeBSD developers maintain at least two branches of simultaneous development. The -CURRENT branch always represents the "bleeding edge" of FreeBSD development. A -STABLE branch of FreeBSD is created for each major version number, from which -RELEASE are cut about once every 4–6 months. If a feature is sufficiently stable and mature it will likely be backported (MFC or Merge from CURRENT in FreeBSD developer slang) to the -STABLE branch.[93][3]
Foundation[edit]


"Last week, I donated one million dollars to the FreeBSD Foundation, which supports the open source operating system that has helped millions of programmers pursue their passions and bring their ideas to life.
I’m actually one of those people. I started using FreeBSD in the late 90s, when I didn’t have much money and was living in government housing. In a way, FreeBSD helped lift me out of poverty – one of the main reasons I got a job at Yahoo! is because they were using FreeBSD, and it was my operating system of choice. Years later, when Brian and I set out to build WhatsApp, we used FreeBSD to keep our servers running. We still do.
I’m announcing this donation to shine a light on the good work being done by the FreeBSD Foundation, with the hope that others will also help move this project forward. We’ll all benefit if FreeBSD can continue to give people the same opportunity it gave me – if it can lift more immigrant kids out of poverty, and help more startups build something successful, and even transformative."

Jan Koum
Main article: FreeBSD Foundation
FreeBSD development is supported in part by the FreeBSD Foundation. The foundation is a non-profit organization that accepts donations to fund FreeBSD development. Such funding has been used to sponsor developers for specific activities, purchase hardware and network infrastructure, provide travel grants to developer summits, and provide legal support to the FreeBSD project.[94]
In November 2014, the FreeBSD Foundation received 1 million USD donation from Jan Koum, Co-Founder and CEO of WhatsApp, - the largest single donation to the Foundation since its inception. In December 2016, Jan Koum donated another 500 thousand dollars.[95] Jan Koum himself is a FreeBSD user since the late 1990s and WhatsApp uses FreeBSD on its servers.[96]
License[edit]
FreeBSD is released under a variety of open source licenses. The kernel code and most newly created code is released under the two-clause BSD license which allows everyone to use and redistribute FreeBSD as they wish. This license was approved by Free Software Foundation[97] and Open Source Initiative[98] as a Free Software and Open Source license respectively. Free Software Foundation described this license as "a lax, permissive non-copyleft free software license, compatible with the GNU GPL". There are parts released under three- and four-clause BSD licenses, as well as Beerware license. Some device drivers include a binary blob,[99] such as the Atheros HAL of FreeBSD versions before 7.2.[100] Some of the code contributed by other projects is licensed under GPL, LGPL, CDDL[101] and ISC. All the code licensed under GPL and CDDL is clearly separated from the code under liberal licenses, to make it easy for users such as embedded device manufacturers to use only permissive free software licenses. ClangBSD aims to replace some GPL dependencies in the FreeBSD base system by replacing the GNU compiler collection with the BSD-licensed LLVM/Clang compiler. ClangBSD became self-hosting on 16 April 2010.[102]
Logo[edit]




FreeBSD's mascot is the generic BSD Daemon, also known as Beastie.


For many years FreeBSD's logo was the generic BSD daemon, also called Beastie, a distorted pronunciation of BSD. First appearing in 1976 on Unix T-shirts purchased by Bell Labs, the more popular versions of the BSD daemon were drawn by animation director John Lasseter beginning in 1984.[103][104] Several FreeBSD-specific versions were later drawn by Tatsumi Hosokawa.[105]
However, Beastie was not unique to FreeBSD. In lithographic terms, the Lasseter graphic is not line art and often requires a screened, four color photo offset printing process for faithful reproduction on physical surfaces such as paper. Also, the BSD daemon was thought to be too graphically detailed for smooth size scaling and aesthetically over-dependent on multiple color gradations, making it hard to reliably reproduce as a simple, standardized logo in only two or three colors, much less in monochrome. Because of these worries, a competition was held and a new logo designed by Anton K. Gural, still echoing the BSD daemon, was released on 8 October 2005.[106][107][108] However, it was announced by Robert Watson that, the FreeBSD project is "seeking a new logo, but not a new mascot" and that the FreeBSD project will continue to use Beastie as its mascot.[106]
The name "FreeBSD" was coined by David Greenman on 19 June 1993, other suggested names were "BSDFree86" and "Free86BSD".[109] FreeBSD's slogan, "The Power to Serve", is a trademark of The FreeBSD Foundation.[110]
Derivatives[edit]
For more details on this topic, see List of products based on FreeBSD.




PC-BSD version 7; the operating system is now known as TrueOS.


There are a number of software distributions based on FreeBSD including:

OpenServer 10 (server)
TrueOS, previously known as PC-BSD (aimed at home users and workstations, but with a FreeNAS-like server version and TrueOS pico for ARM 32 bit embedded devices)
DesktopBSD (desktop-oriented operating system, originally based on KDE)
GhostBSD (MATE-based distribution, which also offers other desktop environments)
FreeSBIE (live CD)
Frenzy (live CD)
HardenedBSD (exploit mitigation and hardening development)
m0n0wall (firewall)
OPNsense (firewall)
pfSense (firewall)
FreeNAS (for Network-attached storage devices)
NAS4Free (for Network-attached storage devices)
AuthServ/Zilux - (for network servers & storage)

All these distributions have no or only minor changes when compared with the original FreeBSD base system. The main difference to the original FreeBSD is that they come with pre-installed and pre-configured software for specific use cases. This can be compared with Linux distributions, which are all binary compatible because they use the same kernel and also use the same basic tools, compilers and libraries, while coming with different applications, configurations and branding.
Besides these distributions, there are some independent operating systems based on FreeBSD. DragonFly BSD is a fork from FreeBSD 4.8 aiming for a different multiprocessor synchronization strategy than the one chosen for FreeBSD 5 and development of some microkernel features.[111] It does not aim to stay compatible with FreeBSD and has huge differences in the kernel and basic userland. MidnightBSD is a fork of FreeBSD 6.1 borrowing heavily from NeXTSTEP, particularly in the user interface department.
Darwin, the core of Apple macOS, includes a virtual file system and network stack derived from the FreeBSD virtual file system and network stack, and components of its userspace are also FreeBSD-derived.[17][112]
Some subscription services that are directly based on FreeBSD are:

WhatsApp[113] - processes 2 million concurrent TCP connections per server.[113]

Embedded devices and embedded device operating systems based on FreeBSD include:

EMC Isilon's OneFS operating system.
NetApp's Data ONTAP 8.x and the now superseded ONTAP GX (only as a loader for proprietary kernel-space module)
Netflix's Open Connect Appliance[114][115] to handle content delivery.
The PlayStation 4 ("Orbis OS")[19][116][117]
Panasas' PanFS parallel file system[118]

Parts of FreeBSD were also used in PlayStation 3.[119]
Version history[edit]
Main article: History of FreeBSD


Legend:
Old version
Older version, still supported
Current stable version
Latest preview version
Future release




Version
Release date
Supported until
Significant changes


Old version, no longer supported: 1.0
November 1993



The first official release.
The Ports Collection




Old version, no longer supported: 1.1
May 1994



fix some outstanding bugs from import of 386BSD
addition of some ported applications (XFree86, XView, InterViews, elm, nntp)




Old version, no longer supported: 2.0
22 November 1994



replace code base with BSD-Lite 4.4 (to satisfy terms of the USL v. BSDi lawsuit settlement)
new installer and new boot manager
loadable filesystems support for more filesystems (MS-DOS, unionfs, kernfs)
imported loadable kernel modules from NetBSD




Old version, no longer supported: 2.1.5
16 July 1996




Old version, no longer supported: 2.1.7
17 February 1997




Old version, no longer supported: 2.2
March 1997



replaced BSD malloc with phkmalloc
full Linux emulation with ELF




Old version, no longer supported: 2.2.8
29 November 1998



Dummynet traffic shaping




Old version, no longer supported: 3.0
16 October 1998



symmetric multiprocessing (SMP)
CAM (Common Access Method) SCSI system
VESA video modes




Old version, no longer supported: 3.1
15 February 1999



initial USB device support
Pluggable Authentication Modules (PAM)




Old version, no longer supported: 3.2
17 May 1999




Old version, no longer supported: 3.3
15 September 1999




Old version, no longer supported: 3.4
20 December 1999



Netgraph
RAID-5 support in vinum




Old version, no longer supported: 3.5
25 June 2000




Old version, no longer supported: 3.5.1
27 July 2000




Old version, no longer supported: 4.0
14 March 2000



IPv6 support and IPsec with KAME (applications were also updated to support IPv6)
OpenSSH integrated into the base system
emulator for SVR4 binary files




Old version, no longer supported: 4.1
27 July 2000



Kqueue




Old version, no longer supported: 4.1.1
7 November 2000




Old version, no longer supported: 4.2
21 November 2000




Old version, no longer supported: 4.3





Old version, no longer supported: 4.4





Old version, no longer supported: 4.5





Old version, no longer supported: 4.6





Old version, no longer supported: 4.7





Old version, no longer supported: 4.8
3 April 2003
31 March 2004


basic Firewire
basic HyperThreading support
in-kernel cryptographic framework imported from OpenBSD




Old version, no longer supported: 4.9





Old version, no longer supported: 4.10
27 May 2004
May 2006


USB2 support
added ports/CHANGES and ports/UPDATING to FreeBSD Ports




Old version, no longer supported: 4.11
25 January 2005
31 January 2007



Old version, no longer supported: 5.0
14 January 2003
30 June 2003


support for UltraSPARC and IA-64 processors
SMP support via changes to kernel locking (release most of kernel from the Giant lock)
GEOM
Kernel Scheduled Entities
Mandatory Access Control imported from TrustedBSD
Bluetooth
ACPI




Old version, no longer supported: 5.1
9 June 2003
February 2004


experimental support for AMD64
experimental 1:1 and M:N thread libraries for multithreaded processing
experimental ULE scheduler




Old version, no longer supported: 5.3
6 November 2004
31 October 2006


ALTQ
addition of new debugging framework KDB
import pf from OpenBSD
binary compatibility interface for native execution of NDIS drivers
replace XFree86 with X.Org 6.7
cryptography enabled by default in base




Old version, no longer supported: 5.4
9 May 2005
31 October 2006


import Common Address Redundancy Protocol from OpenBSD




Old version, no longer supported: 6.0
1 November 2005



Performance monitoring counters support
New WiFi stack
GELI
Network bridging
NanoBSD utility
NDIS driver support




Old version, no longer supported: 6.1
8 May 2006



Keyboard multiplexer
UFS filesystem stability
Bluetooth autoconfiguration
Additional Ethernet and RAID drivers




Old version, no longer supported: 6.2
15 January 2007
31 May 2008


support for Xbox architecture
OpenBSM audit subsystem
freebsd-update (binary updates for security fixes and errata patches)




Old version, no longer supported: 7.0
27 February 2008
30 April 2009


ZFS
GPT
reference implementation of SCTP
add support for ARM architecture
support for Intel High Definition Audio (HDA)
replacing phkmalloc with jemalloc
drop support for DEC Alpha
tmpfs




Old version, no longer supported: 7.1
4 January 2009
28 February 2011


DTrace
ULE scheduler made default scheduler for i386 and AMD64 platforms




Old version, no longer supported: 8.0
26 November 2009



SATA NCQ support




Old version, no longer supported: 8.1
23 July 2010
31 July 2012


Xen guest support
High Availability Storage
Native NFSv4 ACL support




Old version, no longer supported: 8.2
24 February 2011



USB 3.0 support




Old version, no longer supported: 8.3
9 April 2012
30 April 2014



Old version, no longer supported: 8.4
9 June 2013
1 August 2015



Old version, no longer supported: 9.0
12 January 2012
31 March 2013


Capsicum capability-based security mechanism
UFS SoftUpdates+Journal
ZFS updated to version 28
bsdinstall, the new system installation program
RCTL, a flexible resource limits mechanism
GRAID, flexible software RAID implementation
virtio drivers




Old version, no longer supported: 9.1
30 December 2012
31 December 2014


pkgng
CTL, kernel SCSI target layer subsystem




Old version, no longer supported: 9.2
30 September 2013
31 December 2014


bsdconfig, system configuration utility




Old version, no longer supported: 9.3
16 July 2014
31 December 2016


vt, the new virtual terminal implementation




Old version, no longer supported: 10.0
20 January 2014
28 February 2015


BHyVe hypervisor
Clang replaced GCC on supported architectures
New iSCSI stack
NAND framework
BIND replaced with LDNS and Unbound in base system
ZFS on Root File system
Added support for Raspberry Pi




Old version, no longer supported: 10.1
14 November 2014
31 December 2016[120]


Virtualization improvements (FreeBSD/i386 guests in bhyve, boot from ZFS)
UEFI boot for amd64
Support for UDP Lite protocol (RFC 3828)
ZFS performance improvements
SMP support for armv6
New autofs-based automounter




Old version, no longer supported: 10.2
13 August 2015
31 December 2016[120]


Linux compatibility version updated to support CentOS 6 ports
DRM code updated to match Linux 3.8.13, allowing multiple simultaneous X servers
ZFS reliability and performance improvements
GNOME, KDE, resolvconf, and ntp versions updated
Several enhancements to FreeBSD/arm support




Older version, yet still supported: 10.3
4 April 2016
30 April 2018[120]


Support for 64-bit Linux binaries through the compatibility layer
ZFS booting via UEFI
Automatic root-on-ZFS UEFI installations
GNOME, X.Org Server, TeX Live, and xz versions updated




Current stable version: 10.4
3 October 2017[121]
31 October 2018[122]


Support for eMMC storage and Intel Kaby Lake devices
em(4) driver capable of WOL with Intel i217, i218 and i219 chips
OpenSSH, GNOME, and Xorg-Server has been updated
fsck_ffs(8) utility finds alternate superblocks




Old version, no longer supported: 11.0
10 October 2016[123]
30 November 2017


New version of NetMap[124]




Current stable version: 11.1
26 July 2017[125]




Version
Release date
Supported until
Significant changes


See also[edit]


Free software portal



BAPP, a set of commonly used software with FreeBSD
BSD descendants
Comparison of BSD operating systems
Comparison of operating system kernels
Comparison of operating systems
Computer Systems Research Group
How does one patch KDE2 under FreeBSD?
Marshall Kirk McKusick
Sakura HyperMedia Desktop
Security-focused operating system
Usage share of operating systems

References[edit]
Citations[edit]


^ "FreeBSD 11.1-RELEASE Announcement". FreeBSD.org. 26 July 2017. Retrieved 26 July 2017. 
^ "BSD Usage Survey Report" (PDF). The BSD Certification Group. 31 October 2005. Retrieved 5 December 2010. 
^ a b c Chisnall, David (20 January 2006). "BSD: The Other Free UNIX Family". informit.com. Retrieved 13 December 2013. 
^ "What hackers know of the Nintendo Switch so far". Wololo.net. 9 March 2017. Retrieved 13 March 2017. 
^ Marc Sauter, Andreas Sebayang, Michael Wieczorek (1 March 2017). "Nintendo Switch im Test: Klack und los, egal wie und wo" [Nintendo Switch review: Click and go, no matter how and where] (in German). Golem Media GmbH. p. 7. Archived from the original on 1 March 2017. Retrieved 2 March 2017. The most interesting thing is that the operating system is not based on a classic Linux or Android, but on FreeBSD. The latter also takes Sony as the basis for the system of the Playstation. This avoids Nintendo’s licensing requirements for the Linux kernel, but can easily use Nvidia’s proprietary graphics driver. CS1 maint: Multiple names: authors list (link)
^ Bhartiya, Swapnil. "Nintendo Switch introduces a new concept for consoles". 
^ http://doc.dl.playstation.net/doc/ps3-oss/
^ http://doc.dl.playstation.net/doc/ps4-oss/
^ a b c d "Open Sources: Voices from the Open Source Revolution". O'Reilly Media. Archived from the original on 15 December 2013. Retrieved 10 September 2014. 
^ "June 19 is National FreeBSD Day!". FreeBSD Foundation. Retrieved 13 November 2017. 
^ Lucas 2007, pp. 4-5.
^ "A Brief History of FreeBSD". FreeBSD.org. Retrieved 31 January 2009. 
^ Bruce, Bob. "Company History". FreeBSD Mall. Retrieved 6 August 2014. 
^ Johnson, Dwight. "Report from Comdex--Walnut Creek CDROM, FreeBSD and Slackware". Linux Today. Retrieved 6 August 2014. 
^ a b c Lucas 2007, p. 5.
^ Pohlmann, Frank (19 July 2005). "Why FreeBSD". IBM DeveloperWorks. Archived from the original on 11 September 2013. 
^ a b "Kernel Programming Guide: BSD Overview". Apple Inc. 
^ "Licenses of software used on PlayStation®3 console". Retrieved 11 August 2010. 
^ a b Michael Larabel (23 June 2013). "Sony's PlayStation 4 Is Running Modified FreeBSD 9". Phoronix. Retrieved 17 August 2013. 
^ https://lists.freebsd.org/pipermail/freebsd-stable/2012-June/068129.html
^ https://www.freebsdfoundation.org/press/2013Jul-newsletter#whatsapp
^ http://flightaware.com/about/code/freebsd.rvt
^ Lehey 2003, p. 8.
^ "Release Information". The FreeBSD Project. Retrieved 11 September 2014. 
^ "Welcome to FreeBSD!". The FreeBSD Project. Retrieved 9 September 2014. 
^ "A Penguin tries FreeBSD as a desktop operating system!". osEmotions. Retrieved 14 March 2017. 
^ McKusick, Marshall (2005). "Section 2.13". The Design and Implementation of the FreeBSD Operating System. ISBN 0-201-70245-2. 
^ Farrokhi, Babak. "Network Configuration—IPv6 with FreeBSD". Packt. Archived from the original on 26 December 2013. Retrieved 26 December 2013. 
^ Sam Leffler. "FreeBSD Wireless Netwokring Support" (PDF). BSDCan. Archived from the original (PDF) on 26 December 2013. Retrieved 26 December 2013. 
^ "Overview of the KAME Project". KAME project. Retrieved 11 August 2014. 
^ Smirnoff, Gleb (28 October 2013). "[heads up] axing AppleTalk and IPX/SPX". freebsd-stable (Mailing list). Retrieved 12 August 2014. 
^ "CARP(4)". The FreeBSD documentation Project. Retrieved 25 October 2013. 
^ McKusick, Marshall; V. Neville-Neil, George (2005). "8.6. Soft Updates". The Design and Implementation of the FreeBSD Operating System. ISBN 0-201-70245-2. 
^ Lucas 2007, p. 220.
^ Lucas 2007, 18. DISK TRICKS WITH GEOM.
^ "geli(8)". The FreeBSD Project. Retrieved 12 August 2014. 
^ Kamp, Poul-Henning. "GBDE—GEOM Based Disk Encryption" (PDF). USENIX. Archived from the original (PDF) on 15 December 2013. Retrieved 12 August 2014. 
^ Sean Michael Kerner (25 February 2011). "FreeBSD 8.2 Expands ZFS Support -- Without Oracle". Datamation. Archived from the original on 15 December 2013. Retrieved 15 December 2013. 
^ "FreeBSD Access Control Lists". ONLamp. Retrieved 15 December 2013. 
^ "The TrustedBSD MAC Framework: Extensible Kernel Access Control for FreeBSD 5.0". USENIX. Retrieved 12 September 2014. 
^ a b "TrustedBSD: Adding Trusted Operating System Features to FreeBSD" (PDF). Retrieved 12 September 2014. 
^ "TrustedBSD: Adding Trusted Operating System Features to FreeBSD". USENIX. Retrieved 12 September 2014. 
^ "TrustedBSD Project". TrustedBSD Project. Retrieved 9 August 2014. 
^ "OPENPAM(3)". The NetBSD Project. Retrieved 12 September 2014. 
^ "Authentication, Authorization, and Permissions Guide". developer.apple.com. Apple Inc. Retrieved 13 September 2014. 
^ Lucas 2007, p. 273.
^ Lucas 2007, p. 440.
^ "Hackers obtained access to FreeBSD servers". H-Online. Retrieved 9 August 2014. 
^ "Hackers break into two FreeBSD Project servers using stolen SSH keys". Computer World. Retrieved 9 August 2014. 
^ "FreeBSD servers hacked". Techeye. Retrieved 9 August 2014. 
^ "FreeBSD/Supported Platforms". FreeBSD.org. Retrieved 1 March 2016. 
^ "Committer's Guide". The FreeBSD Documentation Project. 
^ Yoshihiro, Takahashi (27 January 2017). "FreeBSD/pc98" (in Japanese). Retrieved 29 January 2017. 
^ "FreeBSD – Raspberry Pi". , see also Raspbian#Software build
^ "Raspberry Pi Software Is Rapidly Maturing". OSNews. 
^ "FreeBSD/arm". Retrieved 30 November 2014. 
^ a b Lucas, p. 317.
^ "Chapter 4 Installing Applications: Packages and Ports". FreeBSD.org. Retrieved 30 January 2009. 
^ Asami, Satoshi. "The FreeBSD Ports Collection" (PDF). USENIX. Retrieved 13 December 2013. 
^ Larabel, Michael. "FreeBSD Still Working On Next-Gen Package Manager". Phoronix. Retrieved 9 August 2014. 
^ a b "The BSD family, pt. 1: FreeBSD 9.1". OSNews. Retrieved 9 August 2014. 
^ "What's new for FreeBSD 11". wiki.freebsd.org. Retrieved 28 September 2015. 
^ Schenkeveld, Paul. "The BSD Hypervisor" (PDF). FOSDEM. Retrieved 9 August 2014. 
^ Larabel, Michael. "The State Of FreeBSD's Bhyve Virtualization". Phoronix. Retrieved 9 August 2014. 
^ Grehan, Peter. "Introduction to bhyve" (PDF). Retrieved 9 August 2014. 
^ a b McEwen, Gordon. "Setting up Linux compatibility on FreeBSD 6". Archived from the original on 14 November 2006. Retrieved 15 December 2013. 
^ Lehey 2003, p. 162.
^ Tiemann, Brian (2006). "How FreeBSD Compares to Other Operating Systems". FreeBSD 6 Unleashed. ISBN 0-672-32875-5. 
^ Michael, Larabel. "FreeBSD: A Faster Platform For Linux Gaming Than Linux?". Phoronix. Retrieved 5 August 2014. 
^ "FreeBSD 10.3-RELEASE Announcement". The FreeBSD Project. 4 April 2016. Retrieved 5 April 2016. 
^ Bill Paul (24 January 2004). "Project Evil: The Evil Continues". freebsd-current (Mailing list). 
^ Chisnall, David (15 July 2005). "Project Evil: Windows network drivers on FreeBSD". Ping Wales. Archived from the original on 4 November 2005. Retrieved 23 October 2013. 
^ McKusick & Neville-Neil 2004, Chapter 2. Design Overview of FreeBSD.
^ Michael Lucas 2007, p. 118.
^ Roberson, Jeff. "ULE: A Modern Scheduler for FreeBSD" (PDF). USENIX. Retrieved 5 August 2014. 
^ Lemon, Jonathan. "KQueue–A Generic and Scalable Event Notification Facility" (PDF). USENIX. Retrieved 5 August 2014. 
^ "Thread models semantics: Solaris and Linux M:N to 1:1 thread model" (PDF). Department of computer Science and Engineering, Air University Multan Pakistan. Retrieved 16 September 2014. 
^ a b Lucas 2007, p. 359.
^ Lucas 2007, p. 25.
^ "Various Licenses and Comments about Them". GNU Project. Retrieved 12 August 2014. 
^ Lehey 2003, p. 16.
^ "BSD: The Other Free UNIX Family". InformIT. Retrieved 12 August 2014. 
^ "lists.freebsd.org Mailing Lists". Retrieved 11 September 2014. 
^ Lehey 2003, p. 17.
^ "dmesgd". dmesgd.nycbug.org. NYC*BUG. Retrieved 16 December 2015. 
^ "SYSINSTALL(8)". FreeBSD Man Pages. Retrieved 11 September 2014. 
^ "2012: a BSD year in retrospective". OSNews. Retrieved 9 August 2014. 
^ Lehey 2003, p. 20.
^ "EuroBSDcon 2014". EuroBSDcon. Retrieved 9 August 2014. 
^ "AsiaBSDCon 2014". AsiaBSDCon. Retrieved 9 August 2014. 
^ "BSDCan - The BSD Conference". BSDCan. Retrieved 19 February 2015. 
^ a b Lucas 2007, p. 6.
^ Lucas 2007, pp. 372-375.
^ "Overview". The FreeBSD Foundation. Retrieved 20 May 2016. 
^ "Foundation Announces New Uranium Donor". FreeBSD Foundation. Retrieved 29 December 2016. 
^ "Updated! - FreeBSD Foundation Announces Generous Donation and Fundraising Milestone". FreeBSD Foundation. Retrieved 20 November 2014. 
^ "Various Licenses and Comments about Them". The GNU Project. Retrieved 9 August 2014. 
^ "The BSD 2-Clause License". Open Source Initiative. Retrieved 9 August 2014. 
^ Watson, Robert (22 October 2006). "binary blobs in freebsd". freebsd-questions (Mailing list). Retrieved 20 October 2013. 
^ "FreeBSD Copyright and Legal Information". FreeBSD.org. Retrieved 23 April 2013. 
^ "Contents of /stable/9/cddl/contrib/opensolaris/OPENSOLARIS.LICENSE". The FreeBSD Project. Retrieved 28 August 2014. 
^ "ClangBSD Is Selfhosting, We Need Testers Now". osnews.com. 17 April 2010. Retrieved 23 April 2013. 
^ "Usenix". mckusick.com. Retrieved 15 December 2007. 
^ "Saving UNIX from /dev/null". minnie.tuhs.org. Retrieved 15 December 2007. 
^ "The BSD Daemon". FreeBSD.org. Retrieved 15 December 2007. 
^ a b "FreeBSD logo design competition". OSNews. Retrieved 1 November 2013. 
^ Kuriyama, Jun (22 February 2005). "FreeBSD logo design competition". FreeBSD-Announce (Mailing list). Retrieved 1 November 2013. 
^ "Final result for the FreeBSD logo design competition". FreeBSD.org. 2005. Archived from the original on 16 October 2012. Retrieved 1 March 2007. 
^ Greenman, David. "FreeBSD Archives". The FreeBSD Project. Retrieved 6 August 2014. 
^ "FreeBSD Logo". The FreeBSD Project. Retrieved 6 August 2014. 
^ Dillon, Matthew (16 July 2003). "Announcing DragonFly BSD!". freebsd-current (Mailing list). Retrieved 26 July 2007. 
^ "Porting UNIX/Linux Applications to OS X: Overview of OS X". Apple Inc. 
^ a b "1 million is so 2011". WhatsApp Blog. Retrieved 27 August 2014. 
^ Netflix (29 May 2012). "Open Connect Appliance Deployment Guide" (PDF). 
^ Long, Scott (5 June 2012). "Netflix's New Peering Appliance Uses FreeBSD". freebsd-stable (Mailing list). Retrieved 5 June 2012. 
^ Matthew Humphries (24 June 2013). "PS4 runs modified version of the FreeBSD 9.0 operating system". Retrieved 19 October 2013. 
^ Clark, Jack. "Sony's new PlayStation 4 and open source FreeBSD: The TRUTH". theregister.co.uk. Retrieved 16 November 2013. 
^ Smith, Lyle (2017-11-08). "Panasas Announces Next-Gen ActiveStor Scale-out NAS Solution". Storage Reviews. 
^ Alex, Rosenberg (17 December 2013). "FreeBSD Handbook and PS3". Retrieved 22 January 2016. 
^ a b c "FreeBSD Security Information - End of Life". The FreeBSD Project. Retrieved 10 October 2016. 
^ "FreeBSD 10.4-RELEASE Announcement". The FreeBSD Project. Retrieved 3 October 2017. 
^ "FreeBSD Security Information — End of Life". The FreeBSD Project. Retrieved 3 October 2017. 
^ "FreeBSD 11.0-RELEASE Announcement". The FreeBSD Project. Retrieved 10 October 2016. 
^ "What's new for FreeBSD 11". The FreeBSD Project. Retrieved 24 March 2015. 
^ "FreeBSD 11.1-RELEASE Announcement". The FreeBSD Project. Retrieved 26 July 2017. 


Sources[edit]


Negus, Christopher; Caen, Francois (5 May 2008), BSD UNIX Toolbox: 1000+ Commands for FreeBSD, OpenBSD and NetBSD (First ed.), Wiley, p. 309, ISBN 0-470-37603-1 
Lavigne, Dru (24 May 2004), BSD Hacks (First ed.), O'Reilly Media, p. 448, ISBN 0-596-00679-9 
Lucas, Michael W. (14 November 2007), Absolute FreeBSD (Second ed.), No Starch Press, p. 744, ISBN 1-59327-151-4 
Lavigne, Dru; Lehey, Greg; Reed, Jeremy C. (20 December 2007), The Best of FreeBSD Basics (First ed.), Reed Media Services, p. 596, ISBN 0-9790342-2-1 
Hong, Bryan J. (1 April 2008), Building a Server with FreeBSD 7 (First ed.), No Starch Press, p. 288, ISBN 978-1-59327-145-9 
Tiemann, Brian; Urban, Michael (15 June 2006), FreeBSD 6 Unleashed (First ed.), Sams, p. 912, ISBN 0-672-32875-5 
Korff, Yanek; Hope, Paco; Potter, Bruce (March 2005), Mastering FreeBSD and OpenBSD Security (First ed.), O'Reilly Media, p. 464, ISBN 0-596-00626-8 
Lehey, Greg (April 2003), The Complete FreeBSD (Fourth ed.), O'Reilly Media, p. 720, ISBN 0-596-00516-4 
McKusick, Marshall K.; Neville-Neil, George V. (2 August 2004), The Design and Implementation of the FreeBSD Operating System (First ed.), Addison–Wesley, p. 720, ISBN 0-201-70245-2 
Mittelstaedt, Ted (15 December 2000), The FreeBSD Corporate Networker's Guide (First ed.), Addison–Wesley, p. 432, ISBN 0-201-70481-1 
Stokely, Murray; Lee, Chern (1 March 2004), The FreeBSD Handbook, Volume 1: User Guide (Third ed.), FreeBSD Mall, p. 408, ISBN 1-57176-327-9 
Stokely, Murray (1 September 2004), The FreeBSD Handbook, Volume 2: Admin Guide (Third ed.), FreeBSD Mall, p. 537, ISBN 1-57176-328-7 


External links[edit]



Wikimedia Commons has media related to FreeBSD.



Official website
FreeBSD at DistroWatch







v
t
e


The FreeBSD Project



FreeBSD



FreeBSD Core Team
FreeBSD Documentation License
FreeBSD Foundation
FreeBSD Ports
History





Subsystems



busdma
GEOM
ipfw
FreeBSD jail
Netgraph
OpenPAM
OpenBSM
pf
Soft updates
ULE scheduler
bhyve
Highly Available STorage
portsnap
kqueue
geom raid5
geli
moused
Vinum volume manager





People



Jordan Hubbard
Poul-Henning Kamp
Mike Karels
Ben Laurie
Sam Leffler
Marshall Kirk McKusick
Diomidis Spinellis
Robert Watson
Dru Lavigne





Derivatives




open-source



XNU

Darwin


DesktopBSD
DragonFly BSD
FreeNAS
FreeSBIE
GhostBSD
Kylin
MidnightBSD
m0n0wall

OPNsense
pfSense


TrueOS
GNU/kFreeBSD
Gentoo/FreeBSD





proprietary



Junos
macOS, iOS, tvOS, and watchOS
Nintendo Switch OS
PlayStation 3 OS
PlayStation 4 OS
PlayStation Vita OS















v
t
e


Berkeley Software Distribution



People



Bob Fabry
Keith Bostic
Marshall Kirk McKusick
Michael J. Karels
Bill Joy
Samuel Leffler
Jordan Hubbard
Theo de Raadt
Poul-Henning Kamp
Lynne and William Jolitz





Derivatives




Active



FreeBSD
OpenBSD
NetBSD
DragonFly BSD
TrueOS
Junos OS
Darwin
PS3/PS4/PSP/PS Vita operating system
Nintendo Switch operating system
Full list





Discontinued



386BSD
BSD/OS
SunOS
Ultrix








Companies



Sleepycat Software
Walnut Creek CDROM
Berkeley Software Design
iXsystems





Other topics



Comparison
History
Licensing
BSD Daemon
Computer Systems Research Group












v
t
e


Unix and Unix-like operating systems






BSD

386BSD

FreeBSD
NetBSD
OpenBSD
DragonFly BSD


NeXTSTEP
Darwin

macOS
iOS


SunOS
Ultrix


Coherent
GNU
Linux

Android
Chrome OS


LynxOS
MINIX
QNX

BlackBerry 10


Research Unix
System V

A/UX
AIX
HP-UX
illumos
IRIX
OpenServer
Solaris
Tru64 UNIX
UnixWare


Xenix
more...








 Category
 Commons
 Book











						Retrieved from "https://en.wikipedia.org/w/index.php?title=FreeBSD&oldid=817714597"					Categories: FreeBSD1993 softwareARM operating systemsComputing platformsLightweight Unix-like systemsPowerPC operating systemsSoftware using the BSD licenseHidden categories: CS1 maint: Multiple names: authors listCS1 German-language sources (de)CS1 Japanese-language sources (ja)Good articlesUse dmy dates from September 2017Articles containing potentially dated statements from March 2016All articles containing potentially dated statementsPages using RFC magic links