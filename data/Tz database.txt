



The tz database partitions the world into regions where local clocks have all been the same since 1970. This map, taken from the 2012c edition of the database, is of all the regions outside Antarctica.[1]


The tz database is a collaborative compilation of information about the world's time zones, primarily intended for use with computer programs and operating systems.[2] Paul Eggert is its current editor and maintainer,[3] with the organizational backing of ICANN.[4] The tz database is also known as tzdata, the zoneinfo database or IANA time zone database, and occasionally as the Olson database, referring to the founding contributor, Arthur David Olson.[5]
Its uniform naming convention for time zones, such as America/New_York and Europe/Paris, was designed by Paul Eggert.[6] The database attempts to record historical time zones and all civil changes since 1970, the Unix time epoch.[7] It also includes transitions such as daylight saving time, and also records leap seconds.[8]
The database, as well as some reference source code, is in the public domain.[9] New editions of the database and code are published as changes warrant, usually several times per year.[10]



Contents


1 Data structure

1.1 File formats
1.2 Definition of a time zone
1.3 Daylight saving time (DST) rules
1.4 Names of time zones

1.4.1 Area
1.4.2 Location
1.4.3 Examples


1.5 Example zone and rule lines
1.6 Data stored for each zone

1.6.1 Zone.tab
1.6.2 Data before 1970




2 Coverage

2.1 Zones covering multiple post-1970 countries


3 Maintenance
4 Unix-like systems
5 Usage and extensions

5.1 Boundaries of time zones
5.2 Use in other standards
5.3 Use in software systems


6 History

6.1 2011 lawsuit
6.2 Move to ICANN


7 See also
8 References
9 External links

9.1 General
9.2 Official IANA sources
9.3 Man pages





Data structure[edit]
File formats[edit]
The tz database is published as a set of text files which list the rules and zone transitions in a human-readable format. For use, these text files are compiled into a set of platform-independent binary files—one per time zone. The reference source code includes such a compiler called zic (zone information compiler), as well as code to read those files and use them in standard application programming interfaces such as localtime() and mktime().
Definition of a time zone[edit]
Within the tz database, a time zone is any national region where local clocks have all agreed since 1970.[11] This definition concerns itself first with geographic areas which have had consistent local clocks. This is different from other definitions which concern themselves with consistent offsets from a prime meridian. Therefore, each of the time zones defined by the tz database may document multiple offsets from UTC, typically including both standard time and daylight saving time.
In the time zone text files, each time zone has one or more "zone lines" in one of the time zone text files. The first zone line for a time zone gives the name of the time zone; any subsequent zone lines for that time zone leave the name blank, indicating that they apply to the same zone as the previous line. Each zone line for a zone specifies, for a range of date and time, the offset to UTC for standard time, the name of the set of rules that govern daylight saving time (or a hyphen if standard time always applies), the format for time zone abbreviations, and, for all but the last zone line, the date and time at which the range of date and time governed by that line ends.
Daylight saving time (DST) rules[edit]
The rules for daylight saving time are specified in named rule sets. Each rule set has one or more rule lines in the time zone text files. A rule line contains the name of the rule set to which it belongs, the first year in which the rule applies, the last year in which the rule applies (or "only" if it applies only in one year or "max" if it is the rule currently in effect), the type of year to which the rule applies ("-" if it applies to all years in the specified range, which is almost always the case, otherwise a name used as an argument to a script that indicates whether the year is of the specified type), the month in which the rule takes effect, the day on which the rule takes effect (which could either be a specific day or a specification such as "the last Sunday of the month"), the time of day at which the rule takes effect, the amount of time to add to the offset to UTC when the rule is in effect, and the letter or letters to use in the time zone abbreviation (for example, "S" if the rule governs standard time and "D" if it governs daylight saving time).
Names of time zones[edit]
The time zones have unique names in the form "Area/Location", e.g. "America/New_York". A choice was also made to use English names or equivalents, and to omit punctuation and common suffixes. The underscore character is used in place of spaces. Hyphens are used where they appear in the name of a location. The names have a maximum length of 14 characters.[12]
Area[edit]
Area is the name of a continent, an ocean, or "Etc". The continents and oceans currently used are Africa, America, Antarctica, Arctic, Asia, Atlantic, Australia, Europe, Indian, and Pacific.
The oceans are included since some islands are hard to connect to a certain continent. Some are geographically connected to one continent and politically to another. See also Boundaries between continents.
The special area of "Etc" is used for some administrative zones, particularly for "Etc/UTC" which represents Coordinated Universal Time. In order to conform with the POSIX style, those zone names beginning with "Etc/GMT" have their sign reversed from the standard ISO 8601 convention. In the "Etc" area, zones west of GMT have a positive sign and those east have a negative sign in their name (e.g "Etc/GMT-14" is 14 hours ahead of GMT.)
Location[edit]
Location is the name of a specific location within the area – usually a city or small island.
Country names are not used in this scheme, primarily because they would not be robust due to frequent political and boundary changes. The names of large cities tend to be more permanent. However, the database maintainers attempt to include at least one zone for every ISO 3166-1 alpha-2 country code, and a number of user interfaces to the database take advantage of this. Additionally there is a desire to keep locations geographically compact so that any future time zone changes do not split locations into different time zones.[citation needed]
Usually the most populous city in a region is chosen to represent the entire time zone, although other cities may be selected if they are more widely known or result in a less ambiguous name.[citation needed] In the event that the name of a city changes, the convention is to create an alias[citation needed] in future editions so that both the old and new names refer to the same database entry.
In some cases the Location is itself represented as a compound name, for example the time zone "America/Indiana/Indianapolis". Three-level names include those under "America/Argentina/...", "America/Kentucky/...", "America/Indiana/...", and "America/North_Dakota/...".
The location selected is representative for the entire area.
Examples[edit]


America/Costa_Rica
name of country used because the name of the largest city (and capital city) San José is ambiguous


America/New_York
Space replaced with underscore


Asia/Kolkata
name of city of Kolkata used, because it was the most populous city in the zone at the time the zone was set up, though this is no longer true[13]


Asia/Sakhalin
name of island used, because largest city, Yuzhno-Sakhalinsk, has more than 14 characters


America/Bahia_Banderas
name of largest city altered, "de" removed from Bahia de Banderas, because correct name has more than 14 characters


Antarctica/DumontDUrville
the apostrophe is removed. The space would normally be replaced with "_", but the name would then exceed 14 characters.


Example zone and rule lines[edit]
These are rule lines for the standard United States daylight saving time rules, rule lines for the daylight saving time rules in effect in the US Eastern Time Zone (called "NYC" as New York City is the city representing that zone) in some years, and zone lines for the America/New_York time zone, as of release version tzdata2011n of the time zone database. The zone and rule lines reflect the history of DST in the United States.


# Rule  NAME    FROM    TO      TYPE    IN      ON      AT      SAVE    LETTER/S
Rule    US      1918    1919    -       Mar     lastSun 2:00    1:00    D
Rule    US      1918    1919    -       Oct     lastSun 2:00    0       S
Rule    US      1942    only    -       Feb     9       2:00    1:00    W # War
Rule    US      1945    only    -       Aug     14      23:00u  1:00    P # Peace
Rule    US      1945    only    -       Sep     30      2:00    0       S
Rule    US      1967    2006    -       Oct     lastSun 2:00    0       S
Rule    US      1967    1973    -       Apr     lastSun 2:00    1:00    D
Rule    US      1974    only    -       Jan     6       2:00    1:00    D
Rule    US      1975    only    -       Feb     23      2:00    1:00    D
Rule    US      1976    1986    -       Apr     lastSun 2:00    1:00    D
Rule    US      1987    2006    -       Apr     Sun>=1  2:00    1:00    D
Rule    US      2007    max     -       Mar     Sun>=8  2:00    1:00    D
Rule    US      2007    max     -       Nov     Sun>=1  2:00    0       S
....
# Rule  NAME    FROM    TO      TYPE    IN      ON      AT      SAVE    LETTER
Rule    NYC     1920    only    -       Mar     lastSun 2:00    1:00    D
Rule    NYC     1920    only    -       Oct     lastSun 2:00    0       S
Rule    NYC     1921    1966    -       Apr     lastSun 2:00    1:00    D
Rule    NYC     1921    1954    -       Sep     lastSun 2:00    0       S
Rule    NYC     1955    1966    -       Oct     lastSun 2:00    0       S
# Zone  NAME            GMTOFF  RULES   FORMAT  [UNTIL]
Zone America/New_York   -4:56:02 -      LMT     1883 Nov 18 12:03:58
                        -5:00   US      E%sT    1920
                        -5:00   NYC     E%sT    1942
                        -5:00   US      E%sT    1946
                        -5:00   NYC     E%sT    1967
                        -5:00   US      E%sT

Data stored for each zone[edit]
For each time zone that has multiple offsets (usually due to daylight saving time), the tz database records the exact moment of transition. The format can accommodate changes in the dates and times of transitions as well. Zones may have historical rule changes going back many decades (as shown in the example above).
Zone.tab[edit]
The file zone.tab is in the public domain and lists the zones. Columns and row sorting are described in the comments of the file, as follows:

# This file contains a table with the following columns:
# 1.  ISO 3166 2-character country code.  See the file `iso3166.tab'.
# 2.  Latitude and longitude of the zone's principal location
#     in ISO 6709 sign-degrees-minutes-seconds format,
#     either +-DDMM+-DDDMM or +-DDMMSS+-DDDMMSS,
#     first latitude (+ is north), then longitude (+ is east).
# 3.  Zone name used in value of TZ environment variable.
# 4.  Comments; present if and only if the country has multiple rows.
#
 # Columns are separated by a single tab.
# The table is sorted first by country, then an order within the country that
# (1) makes some geographical sense, and
# (2) puts the most populous zones first, where that does not contradict (1).

Data before 1970[edit]
Data before 1970 aims to be correct for the city identifying the region, but is not necessarily correct for the entire region. This is because new regions are created only as required to distinguish clocks since 1970.
For example, between 1963-10-23 and 1963-12-09 in Brazil only the states of Minas Gerais, Espirito Santo, Rio de Janeiro, and São Paulo had summer time. However, a requested split from America/Sao_Paulo was rejected in 2010 with the reasoning that, since 1970, the clocks were the same in the whole region.[14]
Time in Germany, which is represented by Europe/Berlin, is not correct for the year 1945 when the Trizone used different daylight saving time rules than Berlin.[15]
Coverage[edit]
Zones covering multiple post-1970 countries[edit]
There are two zones that cover an area that was covered by two countries after 1970. The database follows the definitions of countries as per ISO 3166-1, whose predecessor, ISO 3166, was first published in 1974.

Asia/Aden – two countries until 1990: North Yemen (Aden, People's Republic, ISO 3166-1: YE) and South Yemen (Sanaa, ISO 3166-1: YD, ISO 3166-3: YDYE).
Europe/Berlin – two countries until 1990: East Germany (ISO 3166-1: DD, ISO 3166-3: DDDE) and West Germany (ISO 3166-1: DE)

Maintenance[edit]
The tz reference code and database is maintained by a group of volunteers. Arthur David Olson makes most of the changes to the code, and Paul Eggert to the database. Proposed changes are sent to the tz mailing list, which is gatewayed to the comp.time.tz Usenet newsgroup. Source files are distributed via the IANA FTP server. Typically, these files are taken by a software distributor like Debian, compiled, and then the source and binaries are packaged as part of that distribution. End users can either rely on their software distribution's update procedures, which may entail some delay, or obtain the source directly and build the binary files themselves. The IETF has published RFC 6557, "Procedures for Maintaining the Time Zone Database" documenting best practices based on similar principles.
Unix-like systems[edit]
The standard path for the timezone database is /usr/share/zoneinfo/ in Linux distributions, macOS, and some other Unix-like systems.
Usage and extensions[edit]
Boundaries of time zones[edit]
Geographical boundaries in the form of coordinate sets are not part of the tz database, but boundaries are published by Eric Muller[1] in the form of vector polygons. Using these vector polygons, one can determine, for each place on the globe, the tz database zone in which it is located.
Use in other standards[edit]
The Unicode Common Locale Data Repository (CLDR) refers to zones in the tz database. However, as the name for a zone can change from one tz database release to another, the CLDR assigns the UN/LOCODE for the city used in the name for the zone, or an internally-assigned code if there is no such city for the zone, to a tzdb zone.[16][17]
Use in software systems[edit]
The tz database is used for time zone processing and conversions in many computer software systems, including:

BSD-derived systems, including FreeBSD, NetBSD, OpenBSD, DragonFly BSD, and macOS (they also use the reference TZ database processing code as their TZ POSIX API implementation);
the GNU C Library and systems that use it, including GNU, most Linux distributions, BeOS, Haiku, Nexenta OS, and Cygwin;
System V Release 4-derived systems, such as Solaris and UnixWare;
AIX 6.1 and later[18][19] (earlier versions of AIX, starting with AIX 5.2, include zoneinfo,[20] for support of third-party applications such as MySQL,[21] but do not use it themselves[20][22]);
several other Unix systems, including Tru64, and UNICOS/mp (also IRIX, still maintained but no longer shipped);
OpenVMS;
the Java Runtime Environment since release 1.4 (2002);
the Java library Joda-Time;
the Perl modules DateTime::TimeZone and DateTime::LeapSecond since 2003;
PHP releases since 5.1.0 (2005);
the Ruby Gem TZInfo;
the Python module pytz;
the JavaScript libraries timezone-js, BigEasy/TimeZone, WallTime-js and moment-timezone;
the Pandas (Python) module [1];
the .NET Framework libraries NodaTime, TZ4Net and zoneinfo;
the Haskell libraries timezone-series and timezone-olson;
the Erlang module ezic;
The Go standard library time package;
The Squeak Smalltalk time package;
The C++ libraries Boost and Qt;
The Delphi library TZDB;[23]
The Free Pascal library PascalTZ;
Oracle releases since 10g (2004);[24]
PostgreSQL since release 8.0 (2005);
the Microsoft SQL Server library SQL Server Time Zone Support
MongoDB since release 3.6;
embedded software such as the firmware used in IP clocks.

The Olson timezone IDs are also used by the Unicode Common Locale Data Repository (CLDR) and International Components for Unicode (ICU). For example, the CLDR Windows–Tzid table maps Microsoft Windows time zone IDs to the standard Olson names.[25]
History[edit]
The project's origins go back to 1986 or earlier.[26]
2011 lawsuit[edit]
On September 30, 2011, a lawsuit, Astrolabe, Inc. v. Olson et al., was filed concerning copyright in the database.[27][28] As a result, on October 6, 2011, the database's mailing list and FTP site were shut down.[29] The case revolved around the database maintainers' use of The American Atlas, by Thomas G. Shanks, and The International Atlas, by Thomas G. Shanks and Rique Pottenger. It complained of unauthorised reproduction of atlas data in the timezone mailing list archive and in some auxiliary link collections maintained with the database, though it did not actually point at the database itself. The complaint related only to the compilation of historical timezone data, and did not cover current tzdata world timezone tables.[28][30][31]
This lawsuit was resolved on February 22, 2012 after the involvement of the Electronic Frontier Foundation, when Astrolabe voluntarily moved to dismiss the lawsuit without having ever served the defendants and agreed to a covenant not to sue in the future.[32]
Move to ICANN[edit]
ICANN took responsibility for the maintenance of the database on October 14, 2011.[4] The full database and a description of current and future plans for its maintenance are available online from IANA.[33]
See also[edit]

List of tz database time zones
Time zone
Daylight saving time

References[edit]


^ a b Muller, Eric (2012-10-08). "A shapefile of the TZ timezones of the world". 
^ Eggert, Paul; Olson, Arthur David (2007-11-29). "Sources for time zone and daylight saving time data". Retrieved 2007-12-03. 
^ Eggert, Paul (2005-01-17). "Re: FW: IANA time zone registration – proposal". tz (Mailing list). 
^ a b "ICANN to Manage Time Zone Database" (news alert). ICANN. 2011-10-15. Retrieved 2011-12-30. 
^ Olson, Arthur David (1986-12-16). "Resolved timezone issue? Other issues. New ctime manual page". tz (Mailing list).  Missing or empty |url= (help)
^ Eggert, Paul (1993-10-20). "proposal for time zone names". tz (Mailing list). 
^ Olson, Arthur David (1987-03-18). "Re: ist of issues". tz (Mailing list).  Missing or empty |url= (help)
^ Devine, Bob (1988-06-02). "leap seconds; [0-60] is ok". tz (Mailing list). 
^ Eggert, Paul (1995-11-11). "questions and comments on http://tycho.usno.navy.mil/tzones.html". tz (Mailing list).  Missing or empty |url= (help)
^ "zoneinfo tzcode and tzdata archives (FTP)". Retrieved 2007-10-30. 
^ Theory (text file), contained in the "tzcode" distribution. Version tzcode2007h.tar.gz 2007-10-01 referenced.
^ Olson, Arthur David (2010-05-01). "proposed time zone package changes (Bahia de Banderas; version naming)". gmane.comp.time.tz. 
^ Paul Eggert (December 21, 2012). "Re: zoneinfo : ist : error". tz (Mailing list). 
^ Olson, Arthur David (2010-01-06). "RE: little nuance in brazil 1963". tz (Mailing list). 
^ DST and midsummer DST in Germany until 1979, Physikalisch-Technische Bundesanstalt. (2010)
^ "Unicode Locale Extension ('u') for BCP 47". CLDR - Unicode Common Locale Data Repository. 
^ "Unicode Locale Data Markup Language (LDML), Part 4: Dates". section 5, Time Zone Names. 
^ "Olson time zone support and setup". AIX 7.1 information. IBM. Retrieved 2011-03-12. 
^ "Managing the Time Zone Variable". IBM. 2007-02-02. Retrieved 2011-03-11. 
^ a b "AIX O/S updated to support 2007 Daylight Saving Time change". IBM. 2007-10-18. Retrieved 2011-03-12. 
^ "2007 daylight savings [sic] time changes for Unix". Academic Computing and Communications Center, University of Illinois at Chicago. 2007-02-25. Retrieved 2008-03-18. )
^ Wickremasinghe, Christopher (2009-03-30). "Introduction of daylight saving time in Western Australia 2006". AIX Wiki. IBM. Retrieved 2011-03-11. 
^ "TZDB library moved to GitHub on April 23, 2014". Retrieved 21 October 2015. 
^ Oracle Database Globalization Support Guide 10g Release 1 (10.1): Chapter 4, Section "Choosing a Time Zone File". Oracle Corporation. June 2004. pp. 4–14. Part No. B10749-02. Retrieved 2007-10-30. 
^ "Windows → Tzid". Unicode Consortium. 2007-11-12. Retrieved 2008-02-17. 
^ Olson, Arthur David (1986-11-24). "seismo!elsie!tz ; new versions of time zone stuff". tz (Mailing list). 
^ "Astrolabe, Inc. v. Olson et al". 2011-10-06. Retrieved 2011-10-06. 
^ a b "ASTROLABE, INC., Plaintiff, v. ARTHUR DAVID OLSON and PAUL EGGERT, Defendants" (PDF). 2011-09-30. Retrieved 2011-10-07. 
^ Olson, Arthur David (2011-10-06). "Civil suit; ftp shutdown; mailing list shutdown". Retrieved 2011-10-06. 
^ "Time zone database shut down". The Daily Parker. 2011-10-06. Retrieved 2011-10-06. 
^ "Time-zone database – Astrolabe's opinion". Stephen Colebourne's blog. 13 October 2011. Retrieved 26 October 2011. 
^ "EFF Wins Protection for Time Zone Database". Electronic Frontier Foundation. 22 February 2012. Retrieved 22 February 2012. 
^ "Time Zone Database". IANA. 


External links[edit]
General[edit]

Legal time (PDF), ITU, 2015 .
The tz database home page, UCLA  (deprecated, see Official IANA sources below)
The tz mailing list archive, Gmane .
tz (archive) (mailing list) .
tz mailing list at ICANN
“A literary appreciation of the Olson/Zoneinfo/tz database” by Jon Udell

Official IANA sources[edit]

Home page
FTP
rsync, at rsync://rsync.iana.org/tz

Man pages[edit]

zic(8) – Linux Administration and Privileged Commands Manual (gives the syntax of source files for the tz database)
tzfile(5) – Linux File Formats Manual (gives the format of compiled tz database files)







v
t
e


Coordinated Universal Time (UTC)



UTC offset for standard time and
Daylight saving time (DST)
Italics: historical or unofficial




180° to < 90°W



−12:00
−11:00
−10:30
−10:00
−09:30
−09:00
−08:30
−08:00
−07:00





90°W to < 0°



−06:00
−05:00
−04:30
−04:00
−03:30
−03:00
−02:30
−02:00
−01:00
−00:44
−00:25:21





0° to < 90°E



±00:00
+00:20
+00:30
+01:00
+01:24
+01:30
+02:00
+02:30
+03:00
+03:30
+04:00
+04:30
+04:51
+05:00
+05:30
+05:40
+05:45





90°E to < 180°



+06:00
+06:30
+07:00
+07:20
+07:30
+08:00
+08:30
+08:45
+09:00
+09:30
+09:45
+10:00
+10:30
+11:00
+11:30





(180° to < 90°W)



+12:00
+12:45
+13:00
+13:45
+14:00








Time zone data sources

tz database



Lists of time zones



Time zones by country
Time zones by UTC offset
tz database time zones
Military time zones
Time zone abbreviations
Daylight saving time by country











						Retrieved from "https://en.wikipedia.org/w/index.php?title=Tz_database&oldid=816913144"					Categories: Time zonesTz databaseHidden categories: Pages using web citations with no URLAll articles with unsourced statementsArticles with unsourced statements from March 2010Articles with unsourced statements from April 2010