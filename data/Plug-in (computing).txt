



Mozilla Firefox displaying a list of installed plug-ins





Look up plug-in or add-on in Wiktionary, the free dictionary.


In computing, a plug-in (or plugin, add-in, addin, add-on, addon, or extension) is a software component that adds a specific feature to an existing computer program. When a program supports plug-ins, it enables customization. The common examples are the plug-ins used in web browsers to add new features such as search-engines, virus scanners, or the ability to use a new file type such as a new video format. Well-known browser plug-ins include the Adobe Flash Player, the QuickTime Player, and the Java plug-in, which can launch a user-activated Java applet on a web page to its execution on a local Java virtual machine.
A theme or skin is a preset package containing additional or changed graphical appearance details, achieved by the use of a graphical user interface (GUI) that can be applied to specific software and websites to suit the purpose, topic, or tastes of different users to customize the look and feel of a piece of computer software or an operating system front-end GUI (and window managers).



Contents


1 Purpose and examples
2 Mechanism
3 Mozilla definition
4 History
5 See also
6 References



Purpose and examples[edit]
Applications support plug-ins for many reasons. Some of the main reasons include:

to enable third-party developers to create abilities which extend an application
to support easily adding new features
to reduce the size of an application
to separate source code from an application because of incompatible software licenses.

Types of applications and why they use plug-ins:

Audio editors use plug-ins to generate, process or analyse sound. Ardour and Audacity are examples of such editors.
Email clients use plug-ins to decrypt and encrypt email. Pretty Good Privacy is an example of such plug-ins.
Video game console emulators often use plug-ins to modularize the separate subsystems of the devices they seek to emulate.[1][2][3][4][5][6][7][8][9][10] For example, the PCSX2 emulator makes use of video, audio, optical, etc. plug-ins for those respective components of the PlayStation 2.
Graphics software use plug-ins to support file formats and process images. (c.f. Photoshop plugin)
Media players use plug-ins to support file formats and apply filters. foobar2000, GStreamer, Quintessential, VST, Winamp, XMMS are examples of such media players.
Packet sniffers use plug-ins to decode packet formats. OmniPeek is an example of such packet sniffers.
Remote sensing applications use plug-ins to process data from different sensor types; e.g., Opticks.
Text editors and Integrated development environments use plug-ins to support programming languages or enhance development process e.g., Visual Studio, RAD Studio, Eclipse, IntelliJ IDEA, jEdit and MonoDevelop support plug-ins. Visual Studio itself can be plugged into other applications via Visual Studio Tools for Office and Visual Studio Tools for Applications.
Web browsers use browser extensions to expand their functionality. Examples include Adobe Flash Player, Java SE, QuickTime, Microsoft Silverlight and Unity.

Mechanism[edit]




Example Plug-In Framework


The host application provides services which the plug-in can use, including a way for plug-ins to register themselves with the host application and a protocol for the exchange of data with plug-ins. Plug-ins depend on the services provided by the host application and do not usually work by themselves. Conversely, the host application operates independently of the plug-ins, making it possible for end-users to add and update plug-ins dynamically without needing to make changes to the host application.[11][12]
Programmers typically implement plug-in functionality using shared libraries, which get dynamically loaded at run time, installed in a place prescribed by the host application. HyperCard supported a similar facility, but more commonly included the plug-in code in the HyperCard documents (called stacks) themselves. Thus the HyperCard stack became a self-contained application in its own right, distributable as a single entity that end-users could run without the need for additional installation-steps. Programs may also implement plugins by loading a directory of simple script files written in a scripting language like Python or Lua.
Mozilla definition[edit]
Main article: Add-on (Mozilla)
In Mozilla Foundation definitions, the words "add-on", "extension" and "plug-in" are not synonyms. "Add-on" can refer to anything that extends the functions of a Mozilla application. Extensions comprise a subtype, albeit the most common and the most powerful one. Mozilla applications come with integrated add-on managers that, similar to package managers, install, update and manage extensions. The term, "Plug-in", however, strictly refers to NPAPI-based web content renderers. Plug-ins are being deprecated.[13]
History[edit]
Plug-ins appeared as early as the mid 1970s, when the EDT text editor running on the Unisys VS/9 operating system using the UNIVAC Series 90 mainframe computers provided the ability to run a program from the editor and to allow such a program to access the editor buffer, thus allowing an external program to access an edit session in memory.[14] The plug-in program could make calls to the editor to have it perform text-editing services upon the buffer that the editor shared with the plug-in. The Waterloo Fortran compiler used this feature to allow interactive compilation of Fortran programs edited by EDT.
Very early PC software applications to incorporate plug-in functionality included HyperCard and QuarkXPress on the Macintosh, both released in 1987. In 1988, Silicon Beach Software included plug-in functionality in Digital Darkroom and SuperPaint, and Ed Bomke coined the term plug-in.[citation needed]
See also[edit]

Applet
Shared library

References[edit]



^ https://pcsx2.net/download/category/41-win-plugins.html
^ http://www.pbernert.com/html/gpu.htm
^ http://demul.emulation64.com/downloads/
^ https://wiki.jenkins.io/display/JENKINS/Android+Emulator+Plugin
^ https://github.com/KDE/dolphin-plugins
^ https://www.oneangrygamer.net/2017/07/cemu-plugin-loader-makes-it-easy-to-load-in-dll-plugins/35026/
^ https://github.com/OpenEmu/SNES9x-Core
^ http://emulation-general.wikia.com/wiki/Recommended_N64_Plugins
^ http://www.emulator-zone.com/doc.php/psx/psxplugins-tools.html
^ http://www.psx-place.com/categories/ps3-homebrew-apps-plugins-emulators.50/
^ Mozilla Firefox plugins – Description of the difference between Mozilla Firefox plugins and extensions under the general term add-on.
^ Wordpress Plug-in API – Description of the Wordpress Plug-in architecture.
^ Paul, Ian. "Firefox will stop supporting plugins by end of 2016, following Chrome's lead". PCWorld. IDG. Retrieved 20 October 2016. 
^ EDT Text Editor Reference Manual, Cinnaminson, New Jersey: Unisys Corporation, 1975









v
t
e


Web browsers






Comparison

lightweight


History
List

for Unix


Timeline
Usage share









Features



Ad filtering
Augmented browsing
Bookmarks

Bookmarklet
Live bookmark
Smart Bookmarks


Browser extension
Browser security
Browser synchronizer

comparison


Cookies
Download manager
Favicon
Incremental search
Plug-in
Privacy mode
Tabs
Universal Edit Button





Web standards



Acid tests
Cascading Style Sheets
HTML
HTML5
JavaScript
MathML
SVG
WebGL
XHTML





Protocols



HTTP
HTTPS
OCSP
SPDY
SSL/TLS
WebSocket
WPAD





Related topics



BrowserChoice.eu
CRL
iLoo
Internet suite
Man-in-the-browser
Mobile Web
Offline reader
PAC
Pwn2Own
Rich Internet application
Site-specific browser
Widget
World Wide Web
XML













Desktop







Blink-based



Chromium

Brave
Chrome
Dragon
Opera
QupZilla
Sleipnir
Slimjet
SRWare Iron
UC Browser
Vivaldi
Yandex Browser
Sputnik
SafeZone







Gecko-based



AT&T Pogo
Avant
Camino
Firefox

Conkeror
GNU IceCat
IceDragon
Swiftfox
Swiftweasel
TenFourFox
Timberwolf
Tor Browser
Waterfox
xB Browser


Galeon
Ghostzilla
K-Meleon
Kazehakase
Kirix Strata
Lotus Symphony
Lunascape
Mozilla

Beonex Communicator
Classilla
Netscape
SeaMonkey







Trident-based



AOL Explorer
Avant
Deepnet Explorer
GreenBrowser
Internet Explorer
Lunascape
Maxthon
MediaBrowser
MenuBox
NeoPlanet
NetCaptor
SlimBrowser
SpaceTime
UltraBrowser
WebbIE
ZAC Browser





WebKit-based



Arora
Avant
Dooble
Epic
Flock
Fluid
iCab
Konqueror
Lunascape
Maxthon
Midori
OmniWeb
Origyn Web Browser
Otter Browser
QtWeb
rekonq
Safari
Shiira
SlimBoat
surf
Torch
Uzbl
Epiphany
WebPositive
xombrero





Text-based



ELinks
Emacs/W3
Line Mode Browser
Links
Lynx
w3m





Other



Basilisk
abaco
Amaya
Arachne
Arena
Charon
Dillo
eww
Gazelle
HotJava
IBM Home Page Reader
IBrowse
KidZui
Microsoft Edge
Mosaic
Mothra
NetPositive
NetSurf
Pale Moon
Qihoo 360 Secure Browser
















Mobile







Blink-based



Android Browser
Chromium

Brave
Chrome for Android
Opera Mobile
Silk


Firefox Focus for Android
Opera Mini on Android





Gecko-based



Firefox for Android
MicroB
Minimo
Waterfox





Presto-based



Opera Mini (on Extreme/Mini modes)





Trident-based



Maxthon





WebKit-based



BOLT
Dolphin Browser
Chrome for iOS
Coast (web browser)
Firefox for iOS
Firefox Focus for iOS
Opera Mini (Turbo/Normal modes on iOS)
Maxthon
Mercury Browser
Nokia Browser for Symbian
Rockmelt
Safari
Steel





Other



Blazer
CM Browser
Deepfish
ibisBrowser
Internet Explorer Mobile
Iris Browser
Konqueror Embedded
Microsoft Edge
NetFront
Skweezer
Skyfire
Teashark
ThunderHawk
UC Browser
Vision
WinWAP
















Television and video game console







Gecko-based



Kylo





Presto-based



Internet Channel





WebKit-based



Google TV
Nintendo 3DS Internet Browser
Nintendo DS & DSi Browser
NetFront
Steam Overlay
Wii U Internet Browser





Other



MSN TV














Software no longer in development shown in italics


 Category
 Commons
 Internet portal
 Software portal











						Retrieved from "https://en.wikipedia.org/w/index.php?title=Plug-in_(computing)&oldid=813512340"					Categories: Application programming interfacesSoftware add-onsTechnology neologismsHidden categories: All articles with unsourced statementsArticles with unsourced statements from September 2014