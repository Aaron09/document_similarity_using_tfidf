This article is about sets of vertices connected by edges. For graphs of mathematical functions, see Graph of a function. For other uses, see Graph (disambiguation).




A drawing of a graph


In mathematics, graph theory is the study of graphs, which are mathematical structures used to model pairwise relations between objects. A graph in this context is made up of vertices, nodes, or points which are connected by edges, arcs, or lines. A graph may be undirected, meaning that there is no distinction between the two vertices associated with each edge, or its edges may be directed from one vertex to another; see Graph (discrete mathematics) for more detailed definitions and for other variations in the types of graph that are commonly considered. Graphs are one of the prime objects of study in discrete mathematics.
Refer to the glossary of graph theory for basic definitions in graph theory.



Contents


1 Definitions

1.1 Graph


2 Applications
3 History
4 Graph drawing
5 Graph-theoretic data structures
6 Problems

6.1 Enumeration
6.2 Subgraphs, induced subgraphs, and minors
6.3 Graph coloring
6.4 Subsumption and unification
6.5 Route problems
6.6 Network flow
6.7 Visibility problems
6.8 Covering problems
6.9 Decomposition problems
6.10 Graph classes


7 See also

7.1 Related topics
7.2 Algorithms
7.3 Subareas
7.4 Related areas of mathematics
7.5 Generalizations
7.6 Prominent graph theorists


8 Notes
9 References
10 External links

10.1 Online textbooks





Definitions[edit]
Definitions in graph theory vary. The following are some of the more basic ways of defining graphs and related mathematical structures.
Graph[edit]
In the most common sense of the term,[1] a graph is an ordered pair G = (V, E) comprising a set V of vertices or nodes or points together with a set E of edges or arcs or lines, which are 2-element subsets of V (i.e. an edge is associated with two vertices, and that association takes the form of the unordered pair comprising those two vertices). To avoid ambiguity, this type of graph may be described precisely as undirected and simple.
Other senses of graph stem from different conceptions of the edge set. In one more generalized notion,[2] V is a set together with a relation of incidence that associates with each edge two vertices. In another generalized notion, E is a multiset of unordered pairs of (not necessarily distinct) vertices. Many authors call this type of object a multigraph or pseudograph.
All of these variants and others are described more fully below.
The vertices belonging to an edge are called the ends or end vertices of the edge. A vertex may exist in a graph and not belong to an edge.
V and E are usually taken to be finite, and many of the well-known results are not true (or are rather different) for infinite graphs because many of the arguments fail in the infinite case. The order of a graph is |V|, its number of vertices. The size of a graph is |E|, its number of edges. The degree or valency of a vertex is the number of edges that connect to it, where an edge that connects a vertex to itself (a loop) is counted twice.
For an edge {x, y}, graph theorists usually use the somewhat shorter notation xy.
Applications[edit]




The network graph formed by Wikipedia editors (edges) contributing to different Wikipedia language versions (vertices) during one month in summer 2013[3]


Graphs can be used to model many types of relations and processes in physical, biological,[4] social and information systems. Many practical problems can be represented by graphs. Emphasizing their application to real-world systems, the term network is sometimes defined to mean a graph in which attributes (e.g. names) are associated with the nodes and/or edges.
In computer science, graphs are used to represent networks of communication, data organization, computational devices, the flow of computation, etc. For instance, the link structure of a website can be represented by a directed graph, in which the vertices represent web pages and directed edges represent links from one page to another. A similar approach can be taken to problems in social media,[5] travel, biology, computer chip design, mapping the progression of neuro-degenerative diseases[6][7], and many other fields. The development of algorithms to handle graphs is therefore of major interest in computer science. The transformation of graphs is often formalized and represented by graph rewrite systems. Complementary to graph transformation systems focusing on rule-based in-memory manipulation of graphs are graph databases geared towards transaction-safe, persistent storing and querying of graph-structured data.
Graph-theoretic methods, in various forms, have proven particularly useful in linguistics, since natural language often lends itself well to discrete structure. Traditionally, syntax and compositional semantics follow tree-based structures, whose expressive power lies in the principle of compositionality, modeled in a hierarchical graph. More contemporary approaches such as head-driven phrase structure grammar model the syntax of natural language using typed feature structures, which are directed acyclic graphs. Within lexical semantics, especially as applied to computers, modeling word meaning is easier when a given word is understood in terms of related words; semantic networks are therefore important in computational linguistics. Still, other methods in phonology (e.g. optimality theory, which uses lattice graphs) and morphology (e.g. finite-state morphology, using finite-state transducers) are common in the analysis of language as a graph. Indeed, the usefulness of this area of mathematics to linguistics has borne organizations such as TextGraphs, as well as various 'Net' projects, such as WordNet, VerbNet, and others.
Graph theory is also used to study molecules in chemistry and physics. In condensed matter physics, the three-dimensional structure of complicated simulated atomic structures can be studied quantitatively by gathering statistics on graph-theoretic properties related to the topology of the atoms. In chemistry a graph makes a natural model for a molecule, where vertices represent atoms and edges bonds. This approach is especially used in computer processing of molecular structures, ranging from chemical editors to database searching. In statistical physics, graphs can represent local connections between interacting parts of a system, as well as the dynamics of a physical process on such systems. Similarly, in computational neuroscience graphs can be used to represent functional connections between brain areas that interact to give rise to various cognitive processes, where the vertices represent different areas of the brain and the edges represent the connections between those areas. Graph theory plays an important role in electrical modeling of electrical networks, here, weights are associated with resistance of the wire segments to obtain electrical properties of network structures.[8] Graphs are also used to represent the micro-scale channels of porous media, in which the vertices represent the pores and the edges represent the smaller channels connecting the pores.




Graph theory in sociology: Moreno Sociogram (1953)[9]


Graph theory is also widely used in sociology as a way, for example, to measure actors' prestige or to explore rumor spreading, notably through the use of social network analysis software. Under the umbrella of social networks are many different types of graphs.[10] Acquaintanceship and friendship graphs describe whether people know each other. Influence graphs model whether certain people can influence the behavior of others. Finally, collaboration graphs model whether two people work together in a particular way, such as acting in a movie together.
Likewise, graph theory is useful in biology and conservation efforts where a vertex can represent regions where certain species exist (or inhabit) and the edges represent migration paths or movement between the regions. This information is important when looking at breeding patterns or tracking the spread of disease, parasites or how changes to the movement can affect other species.
In mathematics, graphs are useful in geometry and certain parts of topology such as knot theory. Algebraic graph theory has close links with group theory.
A graph structure can be extended by assigning a weight to each edge of the graph. Graphs with weights, or weighted graphs, are used to represent structures in which pairwise connections have some numerical values. For example, if a graph represents a road network, the weights could represent the length of each road. There may be several weights associated with each edge, including distance (as in the previous example), travel time, or monetary cost. Such weighted graphs are commonly used to program GPS's, and travel-planning search engines that compare flight times and costs.
History[edit]




The Königsberg Bridge problem


The paper written by Leonhard Euler on the Seven Bridges of Königsberg and published in 1736 is regarded as the first paper in the history of graph theory.[11] This paper, as well as the one written by Vandermonde on the knight problem, carried on with the analysis situs initiated by Leibniz. Euler's formula relating the number of edges, vertices, and faces of a convex polyhedron was studied and generalized by Cauchy[12] and L'Huilier,[13] and represents the beginning of the branch of mathematics known as topology.
More than one century after Euler's paper on the bridges of Königsberg and while Listing was introducing the concept of topology, Cayley was led by an interest in particular analytical forms arising from differential calculus to study a particular class of graphs, the trees.[14] This study had many implications for theoretical chemistry. The techniques he used mainly concern the enumeration of graphs with particular properties. Enumerative graph theory then arose from the results of Cayley and the fundamental results published by Pólya between 1935 and 1937. These were generalized by De Bruijn in 1959. Cayley linked his results on trees with contemporary studies of chemical composition.[15] The fusion of ideas from mathematics with those from chemistry began what has become part of the standard terminology of graph theory.
In particular, the term "graph" was introduced by Sylvester in a paper published in 1878 in Nature, where he draws an analogy between "quantic invariants" and "co-variants" of algebra and molecular diagrams:[16]

"[…] Every invariant and co-variant thus becomes expressible by a graph precisely identical with a Kekuléan diagram or chemicograph. […] I give a rule for the geometrical multiplication of graphs, i.e. for constructing a graph to the product of in- or co-variants whose separate graphs are given. […]" (italics as in the original).

The first textbook on graph theory was written by Dénes Kőnig, and published in 1936.[17] Another book by Frank Harary, published in 1969, was "considered the world over to be the definitive textbook on the subject",[18] and enabled mathematicians, chemists, electrical engineers and social scientists to talk to each other. Harary donated all of the royalties to fund the Pólya Prize.[19]
One of the most famous and stimulating problems in graph theory is the four color problem: "Is it true that any map drawn in the plane may have its regions colored with four colors, in such a way that any two regions having a common border have different colors?" This problem was first posed by Francis Guthrie in 1852 and its first written record is in a letter of De Morgan addressed to Hamilton the same year. Many incorrect proofs have been proposed, including those by Cayley, Kempe, and others. The study and the generalization of this problem by Tait, Heawood, Ramsey and Hadwiger led to the study of the colorings of the graphs embedded on surfaces with arbitrary genus. Tait's reformulation generated a new class of problems, the factorization problems, particularly studied by Petersen and Kőnig. The works of Ramsey on colorations and more specially the results obtained by Turán in 1941 was at the origin of another branch of graph theory, extremal graph theory.
The four color problem remained unsolved for more than a century. In 1969 Heinrich Heesch published a method for solving the problem using computers.[20] A computer-aided proof produced in 1976 by Kenneth Appel and Wolfgang Haken makes fundamental use of the notion of "discharging" developed by Heesch.[21][22] The proof involved checking the properties of 1,936 configurations by computer, and was not fully accepted at the time due to its complexity. A simpler proof considering only 633 configurations was given twenty years later by Robertson, Seymour, Sanders and Thomas.[23]
The autonomous development of topology from 1860 and 1930 fertilized graph theory back through the works of Jordan, Kuratowski and Whitney. Another important factor of common development of graph theory and topology came from the use of the techniques of modern algebra. The first example of such a use comes from the work of the physicist Gustav Kirchhoff, who published in 1845 his Kirchhoff's circuit laws for calculating the voltage and current in electric circuits.
The introduction of probabilistic methods in graph theory, especially in the study of Erdős and Rényi of the asymptotic probability of graph connectivity, gave rise to yet another branch, known as random graph theory, which has been a fruitful source of graph-theoretic results.
Graph drawing[edit]
Main article: Graph drawing
Graphs are represented visually by drawing a dot or circle for every vertex, and drawing an arc between two vertices if they are connected by an edge. If the graph is directed, the direction is indicated by drawing an arrow.
A graph drawing should not be confused with the graph itself (the abstract, non-visual structure) as there are several ways to structure the graph drawing. All that matters is which vertices are connected to which others by how many edges and not the exact layout. In practice, it is often difficult to decide if two drawings represent the same graph. Depending on the problem domain some layouts may be better suited and easier to understand than others.
The pioneering work of W. T. Tutte was very influential on the subject of graph drawing. Among other achievements, he introduced the use of linear algebraic methods to obtain graph drawings.
Graph drawing also can be said to encompass problems that deal with the crossing number and its various generalizations. The crossing number of a graph is the minimum number of intersections between edges that a drawing of the graph in the plane must contain. For a planar graph, the crossing number is zero by definition.
Drawings on surfaces other than the plane are also studied.
Graph-theoretic data structures[edit]
Main article: Graph (abstract data type)
There are different ways to store graphs in a computer system. The data structure used depends on both the graph structure and the algorithm used for manipulating the graph. Theoretically one can distinguish between list and matrix structures but in concrete applications the best structure is often a combination of both. List structures are often preferred for sparse graphs as they have smaller memory requirements. Matrix structures on the other hand provide faster access for some applications but can consume huge amounts of memory.
List structures include the incidence list, an array of pairs of vertices, and the adjacency list, which separately lists the neighbors of each vertex: Much like the incidence list, each vertex has a list of which vertices it is adjacent to.
Matrix structures include the incidence matrix, a matrix of 0's and 1's whose rows represent vertices and whose columns represent edges, and the adjacency matrix, in which both the rows and columns are indexed by vertices. In both cases a 1 indicates two adjacent objects and a 0 indicates two non-adjacent objects. The Laplacian matrix is a modified form of the adjacency matrix that incorporates information about the degrees of the vertices, and is useful in some calculations such as Kirchhoff's theorem on the number of spanning trees of a graph. The distance matrix, like the adjacency matrix, has both its rows and columns indexed by vertices, but rather than containing a 0 or a 1 in each cell it contains the length of a shortest path between two vertices.
Problems[edit]
Enumeration[edit]
There is a large literature on graphical enumeration: the problem of counting graphs meeting specified conditions. Some of this work is found in Harary and Palmer (1973).
Subgraphs, induced subgraphs, and minors[edit]
A common problem, called the subgraph isomorphism problem, is finding a fixed graph as a subgraph in a given graph. One reason to be interested in such a question is that many graph properties are hereditary for subgraphs, which means that a graph has the property if and only if all subgraphs have it too. Unfortunately, finding maximal subgraphs of a certain kind is often an NP-complete problem. For example:

Finding the largest complete subgraph is called the clique problem (NP-complete).

A similar problem is finding induced subgraphs in a given graph. Again, some important graph properties are hereditary with respect to induced subgraphs, which means that a graph has a property if and only if all induced subgraphs also have it. Finding maximal induced subgraphs of a certain kind is also often NP-complete. For example:

Finding the largest edgeless induced subgraph or independent set is called the independent set problem (NP-complete).

Still another such problem, the minor containment problem, is to find a fixed graph as a minor of a given graph. A minor or subcontraction of a graph is any graph obtained by taking a subgraph and contracting some (or no) edges. Many graph properties are hereditary for minors, which means that a graph has a property if and only if all minors have it too. For example, Wagner's Theorem states:

A graph is planar if it contains as a minor neither the complete bipartite graph K3,3 (see the Three-cottage problem) nor the complete graph K5.

A similar problem, the subdivision containment problem, is to find a fixed graph as a subdivision of a given graph. A subdivision or homeomorphism of a graph is any graph obtained by subdividing some (or no) edges. Subdivision containment is related to graph properties such as planarity. For example, Kuratowski's Theorem states:

A graph is planar if it contains as a subdivision neither the complete bipartite graph K3,3 nor the complete graph K5.

Another problem in subdivision containment is Kelmans–Seymour conjecture:

Every 5-vertex-connected graph that is not planar contains a subdivision of the 5-vertex complete graph K5.

Another class of problems has to do with the extent to which various species and generalizations of graphs are determined by their point-deleted subgraphs. For example:

The reconstruction conjecture

Graph coloring[edit]
Main article: Graph coloring
Many problems and theorems in graph theory have to do with various ways of coloring graphs. Typically, one is interested in coloring a graph so that no two adjacent vertices have the same color, or with other similar restrictions. One may also consider coloring edges (possibly so that no two coincident edges are the same color), or other variations. Among the famous results and conjectures concerning graph coloring are the following:

Four-color theorem
Strong perfect graph theorem
Erdős–Faber–Lovász conjecture (unsolved)
Total coloring conjecture, also called Behzad's conjecture (unsolved)
List coloring conjecture (unsolved)
Hadwiger conjecture (graph theory) (unsolved)

Subsumption and unification[edit]
Constraint modeling theories concern families of directed graphs related by a partial order. In these applications, graphs are ordered by specificity, meaning that more constrained graphs—which are more specific and thus contain a greater amount of information—are subsumed by those that are more general. Operations between graphs include evaluating the direction of a subsumption relationship between two graphs, if any, and computing graph unification. The unification of two argument graphs is defined as the most general graph (or the computation thereof) that is consistent with (i.e. contains all of the information in) the inputs, if such a graph exists; efficient unification algorithms are known.
For constraint frameworks which are strictly compositional, graph unification is the sufficient satisfiability and combination function. Well-known applications include automatic theorem proving and modeling the elaboration of linguistic structure.
Route problems[edit]

Hamiltonian path problem
Minimum spanning tree
Route inspection problem (also called the "Chinese postman problem")
Seven bridges of Königsberg
Shortest path problem
Steiner tree
Three-cottage problem
Traveling salesman problem (NP-hard)

Network flow[edit]
There are numerous problems arising especially from applications that have to do with various notions of flows in networks, for example:

Max flow min cut theorem

Visibility problems[edit]

Museum guard problem

Covering problems[edit]
Covering problems in graphs are specific instances of subgraph-finding problems, and they tend to be closely related to the clique problem or the independent set problem.

Set cover problem
Vertex cover problem

Decomposition problems[edit]
Decomposition, defined as partitioning the edge set of a graph (with as many vertices as necessary accompanying the edges of each part of the partition), has a wide variety of question. Often, it is required to decompose a graph into subgraphs isomorphic to a fixed graph; for instance, decomposing a complete graph into Hamiltonian cycles. Other problems specify a family of graphs into which a given graph should be decomposed, for instance, a family of cycles, or decomposing a complete graph Kn into n − 1 specified trees having, respectively, 1, 2, 3, …, n − 1 edges.
Some specific decomposition problems that have been studied include:

Arboricity, a decomposition into as few forests as possible
Cycle double cover, a decomposition into a collection of cycles covering each edge exactly twice
Edge coloring, a decomposition into as few matchings as possible
Graph factorization, a decomposition of a regular graph into regular subgraphs of given degrees

Graph classes[edit]
Many problems involve characterizing the members of various classes of graphs. Some examples of such questions are below:

Enumerating the members of a class
Characterizing a class in terms of forbidden substructures
Ascertaining relationships among classes (e.g. does one property of graphs imply another)
Finding efficient algorithms to decide membership in a class
Finding representations for members of a class

See also[edit]


Gallery of named graphs
Glossary of graph theory
List of graph theory topics
List of unsolved problems in graph theory
Publications in graph theory

Related topics

Algebraic graph theory
Citation graph
Conceptual graph
Data structure
Disjoint-set data structure
Dual-phase evolution
Entitative graph
Existential graph
Graph algebra
Graph automorphism
Graph coloring
Graph database
Graph data structure
Graph drawing
Graph equation
Graph rewriting
Graph sandwich problem
Graph property
Intersection graph
Logical graph
Loop
Network theory
Null graph
Pebble motion problems
Percolation
Perfect graph
Quantum graph
Random regular graphs
Semantic networks
Spectral graph theory
Strongly regular graphs
Symmetric graphs
Transitive reduction
Tree data structure

Algorithms

Bellman–Ford algorithm
Dijkstra's algorithm
Ford–Fulkerson algorithm
Kruskal's algorithm
Nearest neighbour algorithm
Prim's algorithm
Depth-first search
Breadth-first search

Subareas

Algebraic graph theory
Geometric graph theory
Extremal graph theory
Probabilistic graph theory
Topological graph theory

Related areas of mathematics

Combinatorics
Group theory
Knot theory
Ramsey theory

Generalizations

Hypergraph
Abstract simplicial complex

Prominent graph theorists

Alon, Noga
Berge, Claude
Bollobás, Béla
Bondy, Adrian John
Brightwell, Graham
Chudnovsky, Maria
Chung, Fan
Dirac, Gabriel Andrew
Erdős, Paul
Euler, Leonhard
Faudree, Ralph
Golumbic, Martin
Graham, Ronald
Harary, Frank
Heawood, Percy John
Kotzig, Anton
Kőnig, Dénes
Lovász, László
Murty, U. S. R.
Nešetřil, Jaroslav
Rényi, Alfréd
Ringel, Gerhard
Robertson, Neil
Seymour, Paul
Sudakov, Benny
Szemerédi, Endre
Thomas, Robin
Thomassen, Carsten
Turán, Pál
Tutte, W. T.
Whitney, Hassler


Notes[edit]


^ See, for instance, Iyanaga and Kawada, 69 J, p. 234 or Biggs, p. 4.
^ See, for instance, Graham et al., p. 5.
^ Hale, Scott A. (2013). "Multilinguals and Wikipedia Editing". Proceedings of the 2014 ACM conference on Web science - WebSci '14. arXiv:1312.0976  [cs.CY]. doi:10.1145/2615569.2615684. 
^ Mashaghi, A.; et al. (2004). "Investigation of a protein complex network". European Physical Journal B. 41 (1): 113–121. doi:10.1140/epjb/e2004-00301-0. 
^ Grandjean, Martin (2016). "A social network analysis of Twitter: Mapping the digital humanities community". Cogent Arts & Humanities. 3 (1): 1171458. doi:10.1080/23311983.2016.1171458. 
^ Vecchio, F (2017). ""Small World" architecture in brain connectivity and hippocampal volume in Alzheimer's disease: a study via graph theory from EEG data". Brain imaging and behavior. 11 (2): 473–485. 
^ Vecchio, F (2013). "Brain network connectivity assessed using graph theory in frontotemporal dementia". Neurology. 81 (2): 134–143. 
^ Kumar, Ankush; Kulkarni, G. U. (2016-01-04). "Evaluating conducting network based transparent electrodes from geometrical considerations". Journal of Applied Physics. 119 (1): 015102. doi:10.1063/1.4939280. ISSN 0021-8979. 
^ Grandjean, Martin (2015). "Social network analysis and visualization: Moreno’s Sociograms revisited". Redesigned network strictly based on Moreno (1934), Who Shall Survive.
^ Rosen, Kenneth H. Discrete mathematics and its applications (7th ed.). New York: McGraw-Hill. ISBN 978-0-07-338309-5. 
^ Biggs, N.; Lloyd, E.; Wilson, R. (1986), Graph Theory, 1736-1936, Oxford University Press 
^ Cauchy, A. L. (1813), "Recherche sur les polyèdres - premier mémoire", [[:fr:Journal de l'École polytechnique|]], 9 (Cahier 16): 66–86. 
^ L'Huillier, S.-A.-J. (1812–1813), "Mémoire sur la polyèdrométrie", Annales de Mathématiques, 3: 169–189. 
^ Cayley, A. (1857), "On the theory of the analytical forms called trees", Philosophical Magazine, Series IV, 13 (85): 172–176, doi:10.1017/CBO9780511703690.046 
^ Cayley, A. (1875), "Ueber die Analytischen Figuren, welche in der Mathematik Bäume genannt werden und ihre Anwendung auf die Theorie chemischer Verbindungen", Berichte der Deutschen Chemischen Gesellschaft, 8 (2): 1056–1059, doi:10.1002/cber.18750080252. 
^ Sylvester, James Joseph (1878). "Chemistry and Algebra". Nature. 17: 284. doi:10.1038/017284a0. 
^ Tutte, W.T. (2001), Graph Theory, Cambridge University Press, p. 30, ISBN 978-0-521-79489-3, retrieved 2016-03-14 
^ Gardner, Martin (1992), Fractal Music, Hypercards, and more…Mathematical Recreations from Scientific American, W. H. Freeman and Company, p. 203 
^ Society for Industrial and Applied Mathematics (2002), "The George Polya Prize", Looking Back, Looking Ahead: A SIAM History (PDF), p. 26, retrieved 2016-03-14 
^ Heinrich Heesch: Untersuchungen zum Vierfarbenproblem. Mannheim: Bibliographisches Institut 1969.
^ Appel, K.; Haken, W. (1977), "Every planar map is four colorable. Part I. Discharging", Illinois J. Math., 21: 429–490. 
^ Appel, K.; Haken, W. (1977), "Every planar map is four colorable. Part II. Reducibility", Illinois J. Math., 21: 491–567. 
^ Robertson, N.; Sanders, D.; Seymour, P.; Thomas, R. (1997), "The four color theorem", Journal of Combinatorial Theory, Series B, 70: 2–44, doi:10.1006/jctb.1997.1750. 


References[edit]

Berge, Claude (1958), Théorie des graphes et ses applications, Collection Universitaire de Mathématiques, II, Paris: Dunod . English edition, Wiley 1961; Methuen & Co, New York 1962; Russian, Moscow 1961; Spanish, Mexico 1962; Roumanian, Bucharest 1969; Chinese, Shanghai 1963; Second printing of the 1962 first English edition, Dover, New York 2001.
Biggs, N.; Lloyd, E.; Wilson, R. (1986), Graph Theory, 1736–1936, Oxford University Press .
Bondy, J.A.; Murty, U.S.R. (2008), Graph Theory, Springer, ISBN 978-1-84628-969-9 .
Bollobás, Béla; Riordan, O.M (2003), Mathematical results on scale-free random graphs in "Handbook of Graphs and Networks" (S. Bornholdt and H.G. Schuster (eds)), Wiley VCH, Weinheim, 1st ed. .
Chartrand, Gary (1985), Introductory Graph Theory, Dover, ISBN 0-486-24775-9 .
Gibbons, Alan (1985), Algorithmic Graph Theory, Cambridge University Press .
Reuven Cohen, Shlomo Havlin (2010), Complex Networks: Structure, Robustness and Function, Cambridge University Press .
Golumbic, Martin (1980), Algorithmic Graph Theory and Perfect Graphs, Academic Press .
Harary, Frank (1969), Graph Theory, Reading, MA: Addison-Wesley .
Harary, Frank; Palmer, Edgar M. (1973), Graphical Enumeration, New York, NY: Academic Press .
Mahadev, N.V.R.; Peled, Uri N. (1995), Threshold Graphs and Related Topics, North-Holland .
Mark Newman (2010), Networks: An Introduction, Oxford University Press .

External links[edit]

Hazewinkel, Michiel, ed. (2001) [1994], "Graph theory", Encyclopedia of Mathematics, Springer Science+Business Media B.V. / Kluwer Academic Publishers, ISBN 978-1-55608-010-4 
Graph theory tutorial
A searchable database of small connected graphs
Image gallery: graphs at the Wayback Machine (archived February 6, 2006)
Concise, annotated list of graph theory resources for researchers
rocs — a graph theory IDE
The Social Life of Routers — non-technical paper discussing graphs of people and computers
Graph Theory Software — tools to teach and learn graph theory
Online books, and library resources in your library and in other libraries about graph theory
A list of graph algorithms with references and links to graph library implementations

Online textbooks[edit]

Phase Transitions in Combinatorial Optimization Problems, Section 3: Introduction to Graphs (2006) by Hartmann and Weigt
Digraphs: Theory Algorithms and Applications 2007 by Jorgen Bang-Jensen and Gregory Gutin
Graph Theory, by Reinhard Diestel







v
t
e


Areas of mathematics






outline
topic lists





Branches




Arithmetic



History of mathematics
Philosophy of mathematics
Philosophy of mathematics education
Information theory
Lie theory
Order theory
Representation theory
Set theory
Category theory
Control theory
Graph theory
Computation





Algebra



Number theory
Elementary
Linear
Multilinear
Abstract
Combinatorics
Group theory





Calculus



Analysis
Differential equations / Dynamical systems
Numerical analysis
Optimization
Functional analysis





Geometry



Discrete
Algebraic
Analytic
Differential
Finite
Topology
Trigonometry





Applied



Probability
Mathematical physics
Mathematical statistics
Statistics
Computer
Game theory
Recreational mathematics
Mathematics and art
Mathematics education
Mathematical logic








Divisions



Pure
Applied
Discrete
Computational








 Category
 Portal
Commons
WikiProject












v
t
e


Major fields of computer science




Note: This template roughly follows the 2012 ACM Computing Classification System.



Hardware



Printed circuit board
Peripheral
Integrated circuit
Very-large-scale integration
Energy consumption
Electronic design automation





Computer systems
organization



Computer architecture
Embedded system
Real-time computing
Dependability





Networks



Network architecture
Network protocol
Network components
Network scheduler
Network performance evaluation
Network service





Software organization



Interpreter
Middleware
Virtual machine
Operating system
Software quality





Software notations
and tools



Programming paradigm
Programming language
Compiler
Domain-specific language
Modeling language
Software framework
Integrated development environment
Software configuration management
Software library
Software repository





Software development



Software development process
Requirements analysis
Software design
Software construction
Software deployment
Software maintenance
Programming team
Open-source model





Theory of computation



Model of computation
Formal language
Automata theory
Computational complexity theory
Logic
Semantics





Algorithms



Algorithm design
Analysis of algorithms
Randomized algorithm
Computational geometry





Mathematics
of computing



Discrete mathematics
Probability
Statistics
Mathematical software
Information theory
Mathematical analysis
Numerical analysis





Information
systems



Database management system
Information storage systems
Enterprise information system
Social information systems
Geographic information system
Decision support system
Process control system
Multimedia information system
Data mining
Digital library
Computing platform
Digital marketing
World Wide Web
Information retrieval





Security



Cryptography
Formal methods
Security services
Intrusion detection system
Hardware security
Network security
Information security
Application security





Human–computer
interaction



Interaction design
Social computing
Ubiquitous computing
Visualization
Accessibility





Concurrency



Concurrent computing
Parallel computing
Distributed computing
Multithreading
Multiprocessing





Artificial
intelligence



Natural language processing
Knowledge representation and reasoning
Computer vision
Automated planning and scheduling
Search methodology
Control method
Philosophy of artificial intelligence
Distributed artificial intelligence





Machine learning



Supervised learning
Unsupervised learning
Reinforcement learning
Multi-task learning
Cross-validation





Graphics



Animation
Rendering
Image manipulation
Graphics processing unit
Mixed reality
Virtual reality
Image compression
Solid modeling





Applied
computing



E-commerce
Enterprise software
Computational mathematics
Computational physics
Computational chemistry
Computational biology
Computational social science
Computational engineering
Computational healthcare
Digital art
Electronic publishing
Cyberwarfare
Electronic voting
Video game
Word processing
Operations research
Educational technology
Document management








 Book
 Category
 Portal
WikiProject
 Commons












v
t
e


Graph analysis software



Free



Cytoscape
Graphviz
Gephi
iGraph
NetworkX
Tulip





Proprietary



Mathematica









Authority control



LCCN: sh85056471
GND: 4113782-6
NDL: 00562641











						Retrieved from "https://en.wikipedia.org/w/index.php?title=Graph_theory&oldid=817633636"					Categories: Graph theoryHidden categories: Pages using div col with small parameterWebarchive template wayback linksWikipedia articles with LCCN identifiersWikipedia articles with GND identifiers