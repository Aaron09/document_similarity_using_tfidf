Not to be confused with Open-source software movement, a related movement.




Richard Stallman circa 2002, founder of the GNU Project and the free software movement.


The free software movement (FSM) or free / open source software movement (FOSSM) or free / libre open source software (FLOSS) is a social movement[1] with the goal of obtaining and guaranteeing certain freedoms for software users, namely the freedom to run the software, to study and change the software, and to redistribute copies with or without changes. Although drawing on traditions and philosophies among members of the 1970s hacker culture and academia, Richard Stallman formally founded the movement in 1983 by launching the GNU Project.[2] Stallman later established the Free Software Foundation in 1985 to support the movement.



Contents


1 Philosophy
2 Actions

2.1 Writing and spreading free software
2.2 Building awareness
2.3 Ethical equality


3 Legislation
4 Subgroups and schisms

4.1 Open source
4.2 Stallman and Torvalds


5 Criticism and controversy

5.1 Should principles be compromised?
5.2 How will programmers get paid?
5.3 "Viral" licensing
5.4 License proliferation and compatibility


6 See also
7 References
8 Further reading
9 External links



Philosophy[edit]
The philosophy of the movement is that the use of computers should not lead to people being prevented from cooperating with each other. In practice, this means rejecting "proprietary software", which imposes such restrictions, and promoting free software,[3] with the ultimate goal of liberating everyone in cyberspace[4] – that is, every computer user. Stallman notes that this action will promote rather than hinder the progression of technology, since "it means that much wasteful duplication of system programming effort will be avoided. This effort can go instead into advancing the state of the art".[5]
Members of the free software movement believe that all users of software should have the freedoms listed in The Free Software Definition. Many of them hold that it is immoral to prohibit or prevent people from exercising these freedoms and that these freedoms are required to create a decent society where software users can help each other, and to have control over their computers.[6]
Some free software users and programmers do not believe that proprietary software is strictly immoral, citing an increased profitability in the business models available for proprietary software or technical features and convenience as their reasons.[7]
"While social change may occur as an unintended by-product of technological change, advocates of new technologies often have promoted them as instruments of positive social change." This quote by San Jose State professor Joel West explains much of the philosophy, or the reason that the free source movement is alive. If it is assumed that social change is not only affected, but in some points of view, directed by the advancement of technology, is it ethical to hold these technologies from certain people? If not to make a direct change, this movement is in place to raise awareness about the effects that take place because of the physical things around us. A computer, for instance, allows us so many more freedoms than we have without a computer, but should these technological mediums be implied freedoms, or selective privileges? The debate over the morality of both sides to the free software movement is a difficult topic to compromise respective opposition.[8]
The Free Software Foundation also believes all software needs free documentation, in particular because conscientious programmers should be able to update manuals to reflect modification that they made to the software, but deems the freedom to modify less important for other types of written works.[9] Within the free software movement, the FLOSS Manuals foundation specialises on the goal of providing such documentation. Members of the free software movement advocate that works which serve a practical purpose should also be free.[10]
Actions[edit]




GNU and Tux mascots around free software supporters at FISL 16


Writing and spreading free software[edit]
The core work of the free software movement focused on software development. The free software movement also rejects proprietary software, refusing to install software that does not give them the freedoms of free software. According to Stallman, "The only thing in the software field that is worse than an unauthorised copy of a proprietary program, is an authorised copy of the proprietary program because this does the same harm to its whole community of users, and in addition, usually the developer, the perpetrator of this evil, profits from it."[11]
Building awareness[edit]
Some supporters of the free software movement take up public speaking, or host a stall at software-related conferences to raise awareness of software freedom. This is seen as important since people who receive free software, but who are not aware that it is free software, will later accept a non-free replacement or will add software that is not free software.[12]
Ethical equality[edit]
Margaret S. Elliot, a researcher in the Institute for Software at the University of California Irvine, not only outlines many benefits that could come from a free software movement, she claims that it is inherently necessary to give every person equal opportunity to utilize the Internet, assuming that the computer is globally accessible. Since the world has become more based in the framework of technology and its advancement, creating a selective internet that allows only some to surf the web freely is nonsensical according to Elliot. If there is a desire to live in a more coexistent world that is benefited by communication and global assistance, then globally free software should be a position to strive for, according to many scholars who promote awareness about the free software movement. The ideas sparked by the GNU associates are an attempt to promote a "cooperative environment" that understands the benefits of having a local community and a global community.[13]
Legislation[edit]
A lot of lobbying work has been done against software patents and expansions of copyright law. Other lobbying focusses directly on use of free software by government agencies and government-funded projects.
The Venezuelan government implemented a free software law in January 2006. Decree No. 3,390 mandated all government agencies to migrate to free software over a two-year period.[14]
Congressmen Edgar David Villanueva and Jacques Rodrich Ackerman have been instrumental in introducing free software in Peru, with bill 1609 on "Free Software in Public Administration".[15] The incident invited the attention of Microsoft Inc, Peru, whose general manager wrote a letter to Villanueva. His response received worldwide attention and is seen as a classic piece of argumentation favouring use of free software in governments.[16]
In the United States, there have been efforts to pass legislation at the state level encouraging use of free software by state government agencies.[17]
Subgroups and schisms[edit]
Like many social movements, the free software movement has ongoing internal conflict between the many FOSS organizations (FSF, OSI, Debian, Mozilla Foundation, Apache Foundation etc.) and their personalities. For instance there is disagreement about the amount of compromises and pragmatism needed versus the need for strict adherence to values.[18]
Open source[edit]
Main article: Open-source software movement
Although commercial free software was not uncommon at the time (see Cygnus Solutions for example), in 1998 after an announcement that Netscape would liberate their popular Web browser, a strategy session was held to develop a stronger business case for free software which would focus on technology rather than politics.[19] After this, Eric Raymond and Bruce Perens founded the Open Source Initiative (OSI) to promote the term "open source software" as an alternative term for free software. OSI wanted to address the perceived shortcomings in ambiguous "free software" term,[20][21][22] and some members of OSI in addition didn't follow the free software movement's focus on non-free software as a social and ethical problem; but instead focused on the advantages of open source as superior model for software development.[23] The latter became the view of people like Eric Raymond and Linus Torvalds, while Bruce Perens argues that open source was simply meant to popularize free software under a new brand, and even called for a return to the basic ethical principles.[24]
Some free software advocates use the term free and open source software (FOSS) as an inclusive compromise, drawing on both philosophies to bring both free software advocates and open-source software advocates together to work on projects with more cohesion. Some users believe that a compromise term encompassing both aspects is ideal, to promote both the user's freedom with the software and also to promote the perceived superiority of an open-source-development model. This eclectic view is reinforced by the fact that the overwhelming majority of OSI-approved licenses and self-avowed open-source programs are also compatible with the free software formalisms and vice versa.[10]
While some people prefer to link the two ideas of "open-source software" and "free software" together, they offer two separate ideas and values. This ambiguity began in 1998 when people started to use the term "open-source software" rather than "free software". People in the community of free software used these separate terms as a way to differentiate what they did. Richard Stallman has called open source "a non-movement", because it "does not campaign for anything".[25] Open source addresses software being open as a practical question as opposed to an ethical dilemma. In other words, it focuses more on the development. The open-source movement ultimately determines that non-free software is not the solution of best interest but nonetheless a solution.[26][10]
On the other hand, the free software movement views free software as a moral imperative: that proprietary software should be rejected for selfish and social reasons, and that only free software should be developed and taught to cope with the task of making computing technology beneficial to humanity. It is argued that whatever economical or technical merits free software may have, those are byproducts stemming from the rights that free software developers and users must enjoy. An example of this would be the unlikelihood of free software being designed to mistreat or spy on users.[27] At the same time, the benefits purveyed by the open-source movement have been challenged both from inside and outside the free software movement. It is unclear whether free and open-source software actually leads to more performant and less vulnerable code, with researchers Robert Glass and Benjamin Mako Hill providing statistical insight that this is usually not the case.[28][29]
Regarding the meaning and misunderstandings of the word free, those who work within the free software camp have searched for less ambiguous terms and analogies like "free beer vs free speech" in efforts to convey the intended semantics, so that there is no confusion concerning the profitability of free software. The loan adjective libre has gained some traction in the English-speaking free software movement as unequivocally conveying the state of being in freedom that free software refers to. This is not considered schismatic; libre is seen as an alternative explanatory device. In fact, free software has always been unambiguously referred to as "libre software" (in translation) in languages where the word libre or a cognate is native. In India, where free software has gained a lot of ground,[30] the unambiguous term swatantra and its variants are widely instead of "free".[31][32]
The free software movement rebuts that while "free" may be prone to confuse novices because of the duplicity of meanings, at least one of the meanings is completely accurate, and that it is hard to get it wrong once the difference has been learned. It is also ironically noted that "open source" isn't exempt of poor semantics either, as a misunderstanding arise whereby people think source code disclosure is enough to meet the open-source criteria, when in fact it is not.[10]
The switch from the free software movement to the open-source movement has had negative effects on the progression of community, according to Christopher Kelty who dedicates a scholarly chapter to the free software movements in "Theorizing Media and Practice". The open-source movement denies that selectivity and the privatization of software is unethical. Although the open-source movement is working towards the same social benefits as the free software movement, Kelty claims that by disregarding this fundamental belief of the free software advocates, one is destroying the overall argument. If it can be claimed that it is ethical to limit the internet and other technology to only users who have the means to use this software, then there is no argument against the way things are at the moment; there is no need to complain if all morality is in effect.[33]
Although the movements have separate values and goals, people in both the open-source community and free software community collaborate when it comes to practical projects.[34] By 2005, Richard Glass considered the differences to be a "serious fracture" but "vitally important to those on both sides of the fracture" and "of little importance to anyone else studying the movement from a software engineering perspective" since they have had "little effect on the field".[35]
Stallman and Torvalds[edit]
The two most prominent people associated with the movement, Richard Stallman and Linus Torvalds, may be seen as representatives of the value based versus apolitical philosophies, as well as the GNU versus Linux coding styles. In the GNU/Linux naming controversy the FSF argues for the term GNU/Linux because GNU was a longstanding project to develop a free operating system, of which they assert the kernel was the last missing piece.[36]
Criticism and controversy[edit]
Should principles be compromised?[edit]
Eric Raymond criticises the speed at which the free software movement is progressing, suggesting that temporary compromises should be made for long-term gains. Raymond argues that this could raise awareness of the software and thus increase the free software movement's influence on relevant standards and legislation.[37]
Richard Stallman, on the other hand, sees the current level of compromise as a greater cause for worry.[18][38][39]
How will programmers get paid?[edit]
Main article: Business models for open-source software
Stallman said that this is where people get the misconception of "free": there is no wrong in programmers' requesting payment for a proposed project. Restricting and controlling the user's decisions on use is the actual violation of freedom. Stallman defends that in some cases, monetary incentive is not necessary for motivation since the pleasure in expressing creativity is a reward in itself.[5] On the other hand, Stallman admits that is not easy to raise money for FOSS software projects.[40]
"Viral" licensing[edit]
The free software movement champions copyleft licensing schema (often pejoratively called "viral licenses"). In its strongest form, copyleft mandates that any works derived from copyleft-licensed software must also carry a copyleft license, so the license spreads from work to work like a computer virus might spread from machine to machine. These licensing terms can only be enforced through asserting copyrights.[41] Critics of copyleft licensing challenge the idea that restricting modifications is in line with the free software movement's emphasis on various "freedoms," especially when alternatives like MIT, BSD, and Apache licenses are more permissive.[42][43] Proponents enjoy the assurance that copylefted work cannot usually be incorporated into non-free software projects.[44] They emphasize that copyleft licenses may not attach for all uses and that in any case, developers can simply choose not to use copyleft-licensed software.[45][46]
License proliferation and compatibility[edit]
Main article: Comparison of free and open-source software licenses
FOSS license proliferation is a serious concern in the FOSS domain due to increased complexity of license compatibility considerations which limits and complicates source code reuse between FOSS projects.[47] The OSI and the FSF maintain own lists of dozens of existing and acceptable FOSS licenses.[48] There is an agreement among most that the creation of new licenses should be minimized at all cost and these created should be made compatible with the major existing FOSS licenses. Therefore, there was a strong controversy around the update of the GPlv2 to the GPLv3 in 2007,[49][50] as the updated license is not compatible with the previous version.[51][52][53] Several projects (mostly of the open source faction[50] like the Linux kernel[54][55]) decided to not adopt the GPLv3 while the GNU projects adopted the GPLv3.
See also[edit]


Free software portal



GNU Manifesto
History of free software
Linux adoption
Open-source movement
Free-culture movement
Free Software Foundation
Open Source Initiative
Software Freedom Conservancy
Free Software Movement of India
Free Software Foundation of India
Free Software Foundation Europe
Free Software Movement Karnataka
Free Software Foundation Tamil Nadu
Swecha
Gift economy

References[edit]


^ Richard Stallman on the nature of the Free software movement in 2008 on emacs-devel mailing list.
^ "Announcement of the GNU project". 
^ "Use Free Software". gnu.org. 
^ "Stallman interviewed by Sean Daly". Groklaw. 2006-06-23. 
^ a b "The GNU Manifesto". gnu.org. 
^ "Why free software?". gnu.org. 
^ "Copyleft: Pragmatic Idealism". gnu.org. 
^ "The Effect of Computerization Movements Upon Organizational Adoption of Open Source" (PDF). San Jose State University. Archived from the original (PDF) on 2006-01-17. 
^ "Free Software and Free Manuals". gnu.org. 
^ a b c d Stallman, Richard. "Why Open Source Misses the Point of Free Software". GNU Operating System. Free Software Foundation. Retrieved 11 February 2013. 
^ "Transcript of Stallman on Free Software". FSFE. 2006-03-09. 
^ "Transcript of Stallman speaking at WSIS". Ciarán O'Riordan. 
^ "Mobilization of software developers" (PDF). Institute for Software Research. 
^ "Free software liberates Venezuela". Free Software Magazine n°10. 2006-02-08. 
^ "An English translation of the Free Software bill proposed in Peru". [dead link]
^ "Peruvian Congressman Edgar Villanueva writing to Microsoft about free software". Archived from the original on 2007-08-29. 
^ "Open source's new weapon: The law?". 
^ a b Pragmatism in the History of GNU, Linux and Free/Open Source Software Jun 9, 2015 Christopher Tozzi
^ "History of the OSI". opensource.org. 
^ Eric S. Raymond. "Goodbye, "free software"; hello, "open source"". The problem with it is twofold. First, ... the term "free" is very ambiguous ... Second, the term makes a lot of corporate types nervous. 
^ Kelty, Christpher M. (2008). "The Cultural Significance of free Software - Two Bits" (PDF). Duke University press - durham and london. p. 99. Prior to 1998, Free Software referred either to the Free Software Foundation (and the watchful, micromanaging eye of Stallman) or to one of thousands of different commercial, avocational, or university-research projects, processes, licenses, and ideologies that had a variety of names: sourceware, freeware, shareware, open software, public domain software, and so on. The term Open Source, by contrast, sought to encompass them all in one movement. 
^ Shea, Tom (1983-06-23). "Free software - Free software is a junkyard of software spare parts". InfoWorld. Retrieved 2016-02-10. "In contrast to commercial software is a large and growing body of free software that exists in the public domain. Public-domain software is written by microcomputer hobbyists (also known as "hackers") many of whom are professional programmers in their work life. [...] Since everybody has access to source code, many routines have not only been used but dramatically improved by other programmers." 
^ "Open Source misses the point". gnu.org. 
^ Bruce Perens (17 February 1999). "It's Time to Talk About Free Software Again". Archived from the original on 16 July 2014. Retrieved 2 April 2015. 
^ Gillin, Paul (2016-04-28). "GNU founder Stallman: 'Open source is not free software' - SiliconANGLE". SiliconANGLE. Retrieved 2017-10-17. 
^ Stallman, Richard. "Why 'Open Source' Misses the Point of Free Software | June 2009 | Communications of the ACM". cacm.acm.org. Retrieved 2017-10-17. 
^ Stallman, Richard. "Free Software Is Even More Important Now". www.gnu.org. Retrieved 2017-10-17. 
^ Glass, Robert L. (2003). Facts and Fallacies of Software Engineering. Addison-Wesley. p. 174. ISBN 0-321-11742-5.  ISBN 978-0321117427.
^ Benjamin Mako Hill (19 November 2010). "When Free Software Isn't (Practically) Better". Archived from the original on 3 January 2015. Retrieved 3 April 2015. 
^ Bohannon, Mark. "India adopts a comprehensive open source policy". opensource.com. Retrieved 27 August 2015. 
^ Truscello, Michael James Anthony (2005). The Technical Effect: Free and Open Source Software and the Programming of Everyday Life (Thesis). Waterloo, Ont., Canada, Canada: University of Waterloo. 
^ Truscello, Michael (2007). "Free as in Swatantra: Free Software and Nationhood in India" (PDF). Wilfrid Laurier University. 
^ theorizing media and practice. anthropology of media. 
^ "Why "Free Software" is better than "Open Source"". gnu.org. 
^ Richard Glass (2005), "Standing in Front of the Open Source Steamroller", in Joseph Feller; Brian Fitzgerald; Scott A. Hissam; Karim R. Lakahani, Perspectives on Free and Open Source Software, MIT Press, p. 89, ISBN 0262062461 
^ "Linux and GNU - GNU Project - Free Software Foundation (FSF)". Gnu.org. Retrieved 2012-08-13. 
^ Eric S. Raymond (2006-07-01). "ESR's "World Domination 201", on the need for more compromise by the free software movement". catb.org. Retrieved 2016-02-11. 
^ "RMS on the progress of the movement and his worry about compromise". 
^ "Richard Stallman on "World Domination 201"". I cannot agree to that compromise, and my experience teaches me that it won't be temporary. ... What our community needs most is more spine in rejection of non-free software. It has far too much willingness to compromise. ... To "argue" in favor of adding non-free software in GNU/Linux distros is almost superfluous, since that's what nearly all of them have already done. 
^ "Interview with Richard Stallman". GNU/LAS s20e10. Linux action show. 2012-03-11. Retrieved 2014-08-22. RMS: I’m not gone to claim that I got a way to make it easier to raise money to pay people who write free software. We all know, that to some extent there are ways to do that, but we all know that they are limited, they are not as broad as we would like. 
^ David McGowan (2005), "Legal Aspects of Free and Open Source Software", in Joseph Feller; Brian Fitzgerald; Scott A. Hissam; Karim R. Lakahani, Perspectives on Free and Open Source Software, MIT Press, p. 382, ISBN 0-262-06246-1 
^ "Open Source Licensing Guide". New Media Rights. Retrieved 13 February 2015. 
^ Newbart, Dave (2001-06-01). "Microsoft CEO takes launch break with the Sun-Times". Chicago Sun-Times. Archived from the original on 2001-06-15. (Internet archive link)
^ Kirk St.Amant & Brian Still (2008). "Examining Open Source Software Licenses through the Creative Commons Licensing Model". Handbook of Research on Open Source Software: Technological, Economic, and Social Perspectives. Information Science Reference. pp. 382 of 728. ISBN 1-59140-999-3. 
^ Byfield, Bruce (2006-08-29). "IT Manager's Journal: 10 Common Misunderstandings About the GPL". Retrieved 2008-08-23. 
^ Poynder, Richard (21 March 2006). "The Basement Interviews: Freeing the Code". Retrieved 5 February 2010. 
^ OSI and License Proliferation on fossbazar.com by Martin Michlmayr "Too many different licenses makes it difficult for licensors to choose: it's difficult to choose a good license for a project because there are so many. Some licenses do not play well together: some open source licenses do not inter-operate well with other open source licenses, making it hard to incorporate code from other projects. Too many licenses makes it difficult to understand what you are agreeing to in a multi-license distribution: since a FOSS application typically contains code with different licenses and people use many applications which each contain one or several licenses, it's difficult to see what your obligations are." (on August 21st, 2008)
^ license-list
^ Mark (2008-05-08). "The Curse of Open Source License Proliferation". socializedsoftware.com. Retrieved 2015-11-30. Currently the decision to move from GPL v2 to GPL v3 is being hotly debated by many open source projects. According to Palamida, a provider of IP compliance software, there have been roughly 2489 open source projects that have moved from GPL v2 to later versions. 
^ a b McDougall, Paul (2007-07-10). "Linux Creator Calls GPLv3 Authors 'Hypocrites' As Open Source Debate Turns Nasty". informationweek.com. Archived from the original on 2008-04-13. Retrieved 2015-02-12. [...]the latest sign of a growing schism in the open source community between business-minded developers like Torvalds and free software purists. 
^ "Frequently Asked Questions about the GNU Licenses – Is GPLv3 compatible with GPLv2?". gnu.org. Retrieved 3 June 2014. No. Some of the requirements in GPLv3, such as the requirement to provide Installation Information, do not exist in GPLv2. As a result, the licenses are not compatible: if you tried to combine code released under both these licenses, you would violate section 6 of GPLv2. However, if code is released under GPL “version 2 or later,” that is compatible with GPLv3 because GPLv3 is one of the options it permits. 
^ Larabel, Michael (24 January 2013). "FSF Wastes Away Another "High Priority" Project". Phoronix. Archived from the original on 9 November 2016. Retrieved 22 August 2013. Both LibreCAD and FreeCAD both want to use LibreDWG and have patches available for supporting the DWG file format library, but can't integrate them. The programs have dependencies on the popular GPLv2 license while the Free Software Foundation will only let LibreDWG be licensed for GPLv3 use, not GPLv2. 
^ Chisnall, David (2009-08-31). "The Failure of the GPL". informit.com. Retrieved 2016-01-24. 
^ Kerner, Sean Michael (2008-01-08). "Torvalds Still Keen On GPLv2". internetnews.com. Retrieved 2015-02-12. "In some ways, Linux was the project that really made the split clear between what the FSF is pushing which is very different from what open source and Linux has always been about, which is more of a technical superiority instead of a -- this religious belief in freedom," Torvalds told Zemlin. So, the GPL Version 3 reflects the FSF's goals and the GPL Version 2 pretty closely matches what I think a license should do and so right now, Version 2 is where the kernel is." 
^ corbet (2006-10-01). "Busy busy busybox". lwn.net. Retrieved 2015-11-21. Since BusyBox can be found in so many embedded systems, it finds itself at the core of the GPLv3 anti-DRM debate. [...]The real outcomes, however, are this: BusyBox will be GPLv2 only starting with the next release. It is generally accepted that stripping out the "or any later version" is legally defensible, and that the merging of other GPLv2-only code will force that issue in any case 


Further reading[edit]

David M. Berry, Copy, Rip, Burn: The Politics of Copyleft and Open Source, Pluto Press, 2008, ISBN 0-7453-2414-2
Johan Soderberg, Hacking Capitalism: The Free and Open Source Software Movement, Routledge, 2007, ISBN 0-415-95543-2

External links[edit]

What is Free Software? - Essay by Karl Fogel.
The Free Software Movement and the Future of Freedom, a 2006 lecture by Richard Stallman
Free Software Movement intro by FSF
The GNU Project Philosophy Directory, containing many defining documents of the free software movement
An interview with Stallman, "Free Software as a social movement"
Christian Imhorst, Anarchy and Source Code - What does the Free Software Movement have to do with Anarchism?, (licence: GFDL), 2005
An anti-DRM campaign - by Bill Xu and Richard Stallman
Stallman's Free Software Song







v
t
e


Free and open-source software



General



Alternative terms for free software
Comparison of open-source and closed-source software
Comparison of source code hosting facilities
Free software
Free software project directories
Gratis versus libre
Long-term support
Open-source software
Open-source software development
Outline





Software
packages



Audio
Bioinformatics
Codecs
Collaboration
Configuration management
Device drivers

Graphics
Wireless


Geophysics
Health
Mathematics
Operating systems
Programming languages
Routing
Statistics
Television
Video games
Web applications

Content management systems
E-commerce


Word processors
Android apps
iOS apps
Commercial
Trademarked
Formerly proprietary





Community



Free software movement
History
Open-source software movement
Organizations
Events





Licenses



AFL
Apache
APSL
Artistic
Beerware
Boost
BSD
CC0
CDDL
EPL
GNU GPL
GNU LGPL
ISC
MIT
MPL
Ms-PL/RL
Python
Python Software Foundation
Sleepycat
Unlicense
WTFPL
zlib





License types
and standards



Comparison of free and open-source software licenses
Contributor License Agreement
Copyfree
Copyleft
Debian Free Software Guidelines
Definition of Free Cultural Works
Free license
The Free Software Definition
The Open Source Definition
Open-source license
Permissive software licence
Public domain
Viral license





Challenges



Binary blob
Digital rights management
Hardware restrictions
License proliferation
Mozilla software rebranding
Proprietary software
SCO/Linux controversies
Secure boot
Software patents
Software security
Trusted Computing





Related topics



The Cathedral and the Bazaar
Forking
Microsoft Open Specification Promise
Revolution OS








 Book
 Category
 Commons
 Portal












v
t
e


Intellectual property activism



Issues



Copyright infringement
Digital rights management
Gripe site
Legal aspects of file sharing
Mashup

digital
music
videos


Monopolies of knowledge
Music piracy
Orphan works
Patents

biological
software
software patent debate
trolling


Public domain





Concepts



All rights reversed
Alternative compensation system
Anti-copyright notice
Business models for open-source software
Copyleft
Commercial use of copyleft works
Commons-based peer production
Free content
Free software license
Libertarian positions
Open content
Open design
Open Music Model
Open patent
Open-source hardware
Open-source software
Prize system

contests


Share-alike
Video on demand





Movements



Access to Knowledge movement
Anti-copyright
Cultural environmentalism
Free culture movement
Free software movement





Organizations



Copyright Alliance
Creative Commons

Electronic Frontier Foundation
Free Software Foundation
Open Rights Group
Organization for Transformative Works
The Pirate Bay
Piratbyrån
Pirate Party
Sci-Hub
Students for Free Culture





People



Alexandra Elbakyan
Rick Falkvinge
Lawrence Lessig
Richard Stallman
Peter Sunde
Peter Suber
Aaron Swartz





Documentaries



Steal This Film (2006, 2007)
Good Copy Bad Copy (2007)
RiP!: A Remix Manifesto (2008)
TPB AFK: The Pirate Bay Away From Keyboard (2013)
The Internet's Own Boy (2014)












v
t
e


Free culture and open movements



Concepts



Citizen journalism
Citizen science
Commons-based peer production
Knowledge commons
Open access
Open collaboration
Open content
Open communication
Open data
Open definition
Open design
Open education
Open gaming
Open government
Open innovation
Open knowledge
Open patent
Open research
Open science
Open-source architecture
Open-source software
Open-source governance
Open-source journalism
Open source hardware
Open standards
Open university

Open-door academic policy
Open admissions


Open Web
P2P economic system
Sharism





Tools



Free and open-source
Open Data Indicies
Open educational resources
Open Music Model
Open notebook science





Organizations



Creative Commons
DIYbio
Free Software Foundation
Open Architecture Network
Openmod initiative
Open Knowledge International
Open Rights Group
Open Source Initiative
P2P Foundation
Pirate Party
PLOS
SPARC





Activists



Tim Berners-Lee
Alexandra Elbakyan
Lawrence Lessig
Peter Murray-Rust
Douglas Rushkoff
Richard Stallman
Peter Suber
Peter Sunde
Aaron Swartz
John Wilbanks





Projects



Creative Commons license
Definition of Free Cultural Works
Free culture movement
Free software movement
Open Source Ecology
OpenCores
OpenWetWare
Sci-Hub











						Retrieved from "https://en.wikipedia.org/w/index.php?title=Free_software_movement&oldid=816306682"					Categories: Copyleft mediaFree software culture and documentsFree software movementHidden categories: All articles with dead external linksArticles with dead external links from June 2016