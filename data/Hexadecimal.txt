

Numeral systems





Hindu–Arabic numeral system





Western Arabic
Eastern Arabic


Bengali
Gurmukhi
Indian
Sinhala
Tamil


Balinese
Burmese
Dzongkha
Gujarati
Javanese
Khmer
Lao
Mongolian
Thai





East Asian




Chinese

Suzhou


Hokkien
Japanese
Korean
Vietnamese


Counting rods




Alphabetic




Abjad
Armenian
Āryabhaṭa
Cyrillic

Ge'ez
Georgian
Greek
Hebrew
Roman




Former




Aegean
Attic
Babylonian
Brahmi

Egyptian
Etruscan
Inuit
Kharosthi

Mayan
Muisca
Quipu


Prehistoric




Positional systems by base




2
3
4
5
6
8
10
12
16
20
60




Non-standard positional numeral systems




Bijective numeration (1)
Signed-digit representation (Balanced ternary)
factorial
negative
Complex-base system (2i)
Non-integer representation (φ)
mixed
Asymmetric numeral systems




List of numeral systems





v
t
e





In mathematics and computing, hexadecimal (also base 16, or hex) is a positional numeral system with a radix, or base, of 16. It uses sixteen distinct symbols, most often the symbols 0–9 to represent values zero to nine, and A, B, C, D, E, F (or alternatively a, b, c, d, e, f) to represent values ten to fifteen.
Hexadecimal numerals are widely used by computer system designers and programmers. As each hexadecimal digit represents four binary digits (bits), it allows a more human-friendly representation of binary-coded values. One hexadecimal digit represents a nibble (4 bits), which is half of an octet or byte (8 bits). For example, a single byte can have values ranging from 00000000 to 11111111 in binary form, but this may be more conveniently represented as 00 to FF in hexadecimal.
In a non-programming context, a subscript is typically used to give the radix, for example the decimal value 7004109950000000000♠10,995 would be expressed in hexadecimal as 2AF316. Several notations are used to support hexadecimal representation of constants in programming languages, usually involving a prefix or suffix. The prefix "0x" is used in C and related languages, where this value might be denoted as 0x2AF3.



Contents


1 Representation

1.1 Written representation

1.1.1 Using 0–9 and A–F


1.2 History of written representations
1.3 Verbal and digital representations
1.4 Signs
1.5 Hexadecimal exponential notation


2 Conversion

2.1 Binary conversion
2.2 Other simple conversions
2.3 Division-remainder in source base
2.4 Addition and multiplication
2.5 Tools for conversion


3 Real numbers

3.1 Rational numbers
3.2 Irrational numbers
3.3 Powers


4 Cultural

4.1 Etymology
4.2 Use in Chinese culture
4.3 Primary numeral system


5 Transfer encoding
6 See also
7 References



Representation[edit]
Written representation[edit]
Using 0–9 and A–F[edit]


0hex
=
0dec
=
0oct

0
0
0
0


1hex
=
1dec
=
1oct
0
0
0
1


2hex
=
2dec
=
2oct
0
0
1
0


3hex
=
3dec
=
3oct
0
0
1
1





4hex
=
4dec
=
4oct
0
1
0
0


5hex
=
5dec
=
5oct
0
1
0
1


6hex
=
6dec
=
6oct
0
1
1
0


7hex
=
7dec
=
7oct
0
1
1
1





8hex
=
8dec
=
10oct
1
0
0
0


9hex
=
9dec
=
11oct
1
0
0
1


Ahex
=
10dec
=
12oct
1
0
1
0


Bhex
=
11dec
=
13oct
1
0
1
1





Chex
=
12dec
=
14oct
1
1
0
0


Dhex
=
13dec
=
15oct
1
1
0
1


Ehex
=
14dec
=
16oct
1
1
1
0


Fhex
=
15dec
=
17oct
1
1
1
1


In contexts where the base is not clear, hexadecimal numbers can be ambiguous and confused with numbers expressed in other bases. There are several conventions for expressing values unambiguously. A numerical subscript (itself written in decimal) can give the base explicitly: 15910 is decimal 159; 15916 is hexadecimal 159, which is equal to 34510. Some authors prefer a text subscript, such as 159decimal and 159hex, or 159d and 159h.
In linear text systems, such as those used in most computer programming environments, a variety of methods have arisen:

In URIs (including URLs), character codes are written as hexadecimal pairs prefixed with %: http://www.example.com/name%20with%20spaces where %20 is the space (blank) character, ASCII code point 20 in hex, 32 in decimal.
In XML and XHTML, characters can be expressed as hexadecimal numeric character references using the notation &#xcode;, where the x denotes that code is a hex code point (of 1- to 6-digits) assigned to the character in the Unicode standard. Thus &#x2019; represents the right single quotation mark (’), Unicode code point number 2019 in hex, 8217 (thus &#8217; in decimal).[1]
In the Unicode standard, a character value is represented with U+ followed by the hex value, e.g. U+20AC is the Euro sign (€).
Color references in HTML, CSS and X Window can be expressed with six hexadecimal digits (two each for the red, green and blue components, in that order) prefixed with #: white, for example, is represented #FFFFFF .[2] CSS allows 3-hexdigit abbreviations with one hexdigit per component: #FA3 abbreviates #FFAA33 (a golden orange:     ).
*nix (Unix and related) shells, AT&T assembly language and likewise the C programming language, which was designed for Unix (and the syntactic descendants of C – including C++, C#, D, Java, JavaScript, Python and Windows PowerShell) use the prefix 0x for numeric constants represented in hex: 0x5A3. Character and string constants may express character codes in hexadecimal with the prefix \x followed by two hex digits: '\x1B' represents the Esc control character; "\x1B[0m\x1B[25;1H" is a string containing 11 characters (plus a trailing NUL to mark the end of the string) with two embedded Esc characters.[3] To output an integer as hexadecimal with the printf function family, the format conversion code %X or %x is used.
In MIME (e-mail extensions) quoted-printable encoding, characters that cannot be represented as literal ASCII characters are represented by their codes as two hexadecimal digits (in ASCII) prefixed by an equal to sign =, as in Espa=F1a to send "España" (Spain). (Hexadecimal F1, equal to decimal 241, is the code number for the lower case n with tilde in the ISO/IEC 8859-1 character set.)
In Intel-derived assembly languages and Modula-2,[4] hexadecimal is denoted with a suffixed H or h: FFh or 05A3H. Some implementations require a leading zero when the first hexadecimal digit character is not a decimal digit, so one would write 0FFh instead of FFh
Other assembly languages (6502, Motorola), Pascal, Delphi, some versions of BASIC (Commodore), Game Maker Language, Godot and Forth use $ as a prefix: $5A3.
Some assembly languages (Microchip) use the notation H'ABCD' (for ABCD16).
Ada and VHDL enclose hexadecimal numerals in based "numeric quotes": 16#5A3#. For bit vector constants VHDL uses the notation x"5A3".[5]
Verilog represents hexadecimal constants in the form 8'hFF, where 8 is the number of bits in the value and FF is the hexadecimal constant.
The Smalltalk language uses the prefix 16r: 16r5A3
PostScript and the Bourne shell and its derivatives denote hex with prefix 16#: 16#5A3. For PostScript, binary data (such as image pixels) can be expressed as unprefixed consecutive hexadecimal pairs: AA213FD51B3801043FBC...
Common Lisp uses the prefixes #x and #16r. Setting the variables *read-base*[6] and *print-base*[7] to 16 can also used to switch the reader and printer of a Common Lisp system to Hexadecimal number representation for reading and printing numbers. Thus Hexadecimal numbers can be represented without the #x or #16r prefix code, when the input or output base has been changed to 16.
MSX BASIC,[8] QuickBASIC, FreeBASIC and Visual Basic prefix hexadecimal numbers with &H: &H5A3
BBC BASIC and Locomotive BASIC use & for hex.[9]
TI-89 and 92 series uses a 0h prefix: 0h5A3
ALGOL 68 uses the prefix 16r to denote hexadecimal numbers: 16r5a3. Binary, quaternary (base-4) and octal numbers can be specified similarly.
The most common format for hexadecimal on IBM mainframes (zSeries) and midrange computers (IBM System i) running the traditional OS's (zOS, zVSE, zVM, TPF, IBM i) is X'5A3', and is used in Assembler, PL/I, COBOL, JCL, scripts, commands and other places. This format was common on other (and now obsolete) IBM systems as well. Occasionally quotation marks were used instead of apostrophes.
Donald Knuth introduced the use of a particular typeface to represent a particular radix in his book The TeXbook.[10] Hexadecimal representations are written there in a typewriter typeface: 5A3
Any IPv6 address can be written as eight groups of four hexadecimal digits (sometimes called hextets), where each group is separated by a colon (:). This, for example, is a valid IPv6 address: 2001:0db8:85a3:0000:0000:8a2e:0370:7334; this can be abbreviated as 2001:db8:85a3::8a2e:370:7334. By contrast, IPv4 addresses are usually written in decimal.
Globally unique identifiers are written as thirty-two hexadecimal digits, often in unequal hyphen-separated groupings, for example {3F2504E0-4F89-41D3-9A0C-0305E82C3301}.

There is no universal convention to use lowercase or uppercase for the letter digits, and each is prevalent or preferred in particular environments by community standards or convention.
History of written representations[edit]




Bruce Alan Martin's hexadecimal notation proposal[11]


The use of the letters A through F to represent the digits above 9 was not universal in the early history of computers.

During the 1950s, some installations[which?] favored using the digits 0 through 5 with an overline to denote the values 10–15 as 0, 1, 2, 3, 4 and 5.
The SWAC (1950) and Bendix G-15 (1956)[12] computers used the letters U through Z for values 10–15.
The ILLIAC I (1952) computer used the letters K, S, N, J, F and L for values 10–15.[13]
The Librascope LGP-30 (1956) used the letters F, G, J, K, Q and W for values 10–15.[14]
The NEC parametron computer NEAC 1103 (ja) (1960) used the letters D, G, H, J, K (and possibly V) for values 10–15.[15]
New numeric symbols and names were introduced in the Bibi-binary notation by Boby Lapointe in 1968. This notation did not become very popular.
Bruce Alan Martin of Brookhaven National Laboratory considered the choice of A–F "ridiculous". In a 1968 letter to the editor of the CACM, he proposed an entirely new set of symbols based on the bit locations, which did not gain much acceptance.[11]
Soviet programmable calculators Б3-34 (1980) and similar used the symbols "−", "L", "C", "Г", "E", " " (space) for values 10–15 on their displays.[citation needed]
Seven-segment display decoder chips used various schemes for outputting values above nine. The Texas Instruments 7446/7447/7448/7449 and 74246/74247/74248/74249 use truncated versions of "2", "3", "4", "5" and "6" for values 10–14. Value 15 (1111 binary) was blank.[16]

Verbal and digital representations[edit]
There are no traditional numerals to represent the quantities from ten to fifteen — letters are used as a substitute — and most European languages lack non-decimal names for the numerals above ten. Even though English has names for several non-decimal powers (pair for the first binary power, score for the first vigesimal power, dozen, gross and great gross for the first three duodecimal powers), no English name describes the hexadecimal powers (decimal 16, 256, 4096, 65536, ... ). Some people read hexadecimal numbers digit by digit like a phone number, or using the NATO phonetic alphabet, the Joint Army/Navy Phonetic Alphabet, or a similar ad hoc system.




Hexadecimal finger-counting scheme.


Systems of counting on digits have been devised for both binary and hexadecimal. Arthur C. Clarke suggested using each finger as an on/off bit, allowing finger counting from zero to 102310 on ten fingers.[citation needed] Another system for counting up to FF16 (25510) is illustrated on the right.
Signs[edit]
The hexadecimal system can express negative numbers the same way as in decimal: −2A to represent −4210 and so on.
Hexadecimal can also be used to express the exact bit patterns used in the processor, so a sequence of hexadecimal digits may represent a signed or even a floating point value. This way, the negative number −4210 can be written as FFFF FFD6 in a 32-bit CPU register (in two's-complement), as C228 0000 in a 32-bit FPU register or C045 0000 0000 0000 in a 64-bit FPU register (in the IEEE floating-point standard).
Hexadecimal exponential notation[edit]
Just as decimal numbers can be represented in exponential notation, so too can hexadecimal numbers. By convention, the letter P (or p, for "power") represents times two raised to the power of, whereas E (or e) serves a similar purpose in decimal as part of the E notation. The number after the P is decimal and represents the binary exponent.
Usually the number is normalised so that the leading hexadecimal digit is 1 (unless the value is exactly 0).
Example: 1.3DEp42 represents 1.3DE16 × 242.
Hexadecimal exponential notation is required by the IEEE 754-2008 binary floating-point standard. This notation can be used for floating-point literals in the C99 edition of the C programming language.[17][18] Using the %a or %A conversion specifiers, this notation can be produced by implementations of the printf family of functions following the C99 specification[19][18] and Single Unix Specification (IEEE Std 1003.1) POSIX standard.[20]
Conversion[edit]
Binary conversion[edit]
Most computers manipulate binary data, but it is difficult for humans to work with the large number of digits for even a relatively small binary number. Although most humans are familiar with the base 10 system, it is much easier to map binary to hexadecimal than to decimal because each hexadecimal digit maps to a whole number of bits (410). This example converts 11112 to base ten. Since each position in a binary numeral can contain either a 1 or a 0, its value may be easily determined by its position from the right:

00012 = 110
00102 = 210
01002 = 410
10002 = 810

Therefore:


11112
= 810 + 410 + 210 + 110


 
= 1510


With little practice, mapping 11112 to F16 in one step becomes easy: see table in Written representation. The advantage of using hexadecimal rather than decimal increases rapidly with the size of the number. When the number becomes large, conversion to decimal is very tedious. However, when mapping to hexadecimal, it is trivial to regard the binary string as 4-digit groups and map each to a single hexadecimal digit.
This example shows the conversion of a binary number to decimal, mapping each digit to the decimal value, and adding the results.


010111101011010100102
= 26214410 + 6553610 + 3276810 + 1638410 + 819210 + 204810 + 51210 + 25610 + 6410 + 1610 + 210


 
= 38792210


Compare this to the conversion to hexadecimal, where each group of four digits can be considered independently, and converted directly:


010111101011010100102
=
0101 
1110 
1011 
0101 
00102


 
=
5
E
B
5
216


 
=
5EB5216


The conversion from hexadecimal to binary is equally direct.
Other simple conversions[edit]
Although quaternary (base 4) is little used, it can easily be converted to and from hexadecimal or binary. Each hexadecimal digit corresponds to a pair of quaternary digits and each quaternary digit corresponds to a pair of binary digits. In the above example 5 E B 5 216 = 11 32 23 11 024.
The octal (base 8) system can also be converted with relative ease, although not quite as trivially as with bases 2 and 4. Each octal digit corresponds to three binary digits, rather than four. Therefore we can convert between octal and hexadecimal via an intermediate conversion to binary followed by regrouping the binary digits in groups of either three or four.
Division-remainder in source base[edit]
As with all bases there is a simple algorithm for converting a representation of a number to hexadecimal by doing integer division and remainder operations in the source base. In theory, this is possible from any base, but for most humans only decimal and for most computers only binary (which can be converted by far more efficient methods) can be easily handled with this method.
Let d be the number to represent in hexadecimal, and the series hihi−1...h2h1 be the hexadecimal digits representing the number.

i ← 1
hi ← d mod 16
d ← (d − hi) / 16
If d = 0 (return series hi) else increment i and go to step 2

"16" may be replaced with any other base that may be desired.
The following is a JavaScript implementation of the above algorithm for converting any number to a hexadecimal in String representation. Its purpose is to illustrate the above algorithm. To work with data seriously, however, it is much more advisable to work with bitwise operators.


function toHex(d) {
  var r = d % 16;
  if (d - r == 0) {
    return toChar(r);
  }
  return toHex( (d - r)/16 ) + toChar(r);
}

function toChar(n) {
  const alpha = "0123456789ABCDEF";
  return alpha.charAt(n);
}

Addition and multiplication[edit]




A hexadecimal multiplication table


It is also possible to make the conversion by assigning each place in the source base the hexadecimal representation of its place value and then performing multiplication and addition to get the final representation. That is, to convert the number B3AD to decimal one can split the hexadecimal number into its digits: B (1110), 3 (310), A (1010) and D (1310), and then get the final result by multiplying each decimal representation by 16p, where p is the corresponding hex digit position, counting from right to left, beginning with 0. In this case we have B3AD = (11 × 163) + (3 × 162) + (10 × 161) + (13 × 160), which is 45997 base 10.
Tools for conversion[edit]
Most modern computer systems with graphical user interfaces provide a built-in calculator utility, capable of performing conversions between various radices, in general including hexadecimal.
In Microsoft Windows, the Calculator utility can be set to Scientific mode (called Programmer mode in some versions), which allows conversions between radix 16 (hexadecimal), 10 (decimal), 8 (octal) and 2 (binary), the bases most commonly used by programmers. In Scientific Mode, the on-screen numeric keypad includes the hexadecimal digits A through F, which are active when "Hex" is selected. In hex mode, however, the Windows Calculator supports only integers.
Real numbers[edit]
Rational numbers[edit]
As with other numeral systems, the hexadecimal system can be used to represent rational numbers, although repeating expansions are common since sixteen (10hex) has only a single prime factor (two):


1/2
=
0.8


1/3
=
0.5


1/4
=
0.4


1/5
=
0.3


1/6
=
0.2A


1/7
=
0.249


1/8
=
0.2


1/9
=
0.1C7


1/A
=
0.19


1/B
=
0.1745D


1/C
=
0.15


1/D
=
0.13B


1/E
=
0.1249


1/F
=
0.1


1/10
=
0.1


1/11
=
0.0F


where an overline denotes a recurring pattern.
For any base, 0.1 (or "1/10") is always equivalent to one divided by the representation of that base value in its own number system. Thus, whether dividing one by two for binary or dividing one by sixteen for hexadecimal, both of these fractions are written as 0.1. Because the radix 16 is a perfect square (42), fractions expressed in hexadecimal have an odd period much more often than decimal ones, and there are no cyclic numbers (other than trivial single digits). Recurring digits are exhibited when the denominator in lowest terms has a prime factor not found in the radix; thus, when using hexadecimal notation, all fractions with denominators that are not a power of two result in an infinite string of recurring digits (such as thirds and fifths). This makes hexadecimal (and binary) less convenient than decimal for representing rational numbers since a larger proportion lie outside its range of finite representation.
All rational numbers finitely representable in hexadecimal are also finitely representable in decimal, duodecimal and sexagesimal: that is, any hexadecimal number with a finite number of digits has a finite number of digits when expressed in those other bases. Conversely, only a fraction of those finitely representable in the latter bases are finitely representable in hexadecimal. For example, decimal 0.1 corresponds to the infinite recurring representation 0.199999999999... in hexadecimal. However, hexadecimal is more efficient than bases 12 and 60 for representing fractions with powers of two in the denominator (e.g., decimal one sixteenth is 0.1 in hexadecimal, 0.09 in duodecimal, 0;3,45 in sexagesimal and 0.0625 in decimal).


n
Decimal
Prime factors of base, b = 10: 2, 5; b − 1 = 9: 3; b + 1 = 11: 11
Hexadecimal
Prime factors of base, b = 1610 = 10: 2; b − 1 = 1510 = F: 3, 5; b + 1 = 1710 = 11: 11


Fraction
Prime factors
Positional representation
Positional representation
Prime factors
Fraction


2
1/2
2
0.5
0.8
2
1/2


3
1/3
3
0.3333... = 0.3
0.5555... = 0.5
3
1/3


4
1/4
2
0.25
0.4
2
1/4


5
1/5
5
0.2
0.3
5
1/5


6
1/6
2, 3
0.16
0.2A
2, 3
1/6


7
1/7
7
0.142857
0.249
7
1/7


8
1/8
2
0.125
0.2
2
1/8


9
1/9
3
0.1
0.1C7
3
1/9


10
1/10
2, 5
0.1
0.19
2, 5
1/A


11
1/11
11
0.09
0.1745D
B
1/B


12
1/12
2, 3
0.083
0.15
2, 3
1/C


13
1/13
13
0.076923
0.13B
D
1/D


14
1/14
2, 7
0.0714285
0.1249
2, 7
1/E


15
1/15
3, 5
0.06
0.1
3, 5
1/F


16
1/16
2
0.0625
0.1
2
1/10


17
1/17
17
0.0588235294117647
0.0F
11
1/11


18
1/18
2, 3
0.05
0.0E38
2, 3
1/12


19
1/19
19
0.052631578947368421
0.0D79435E5
13
1/13


20
1/20
2, 5
0.05
0.0C
2, 5
1/14


21
1/21
3, 7
0.047619
0.0C3
3, 7
1/15


22
1/22
2, 11
0.045
0.0BA2E8
2, B
1/16


23
1/23
23
0.0434782608695652173913
0.0B21642C859
17
1/17


24
1/24
2, 3
0.0416
0.0A
2, 3
1/18


25
1/25
5
0.04
0.0A3D7
5
1/19


26
1/26
2, 13
0.0384615
0.09D8
2, D
1/1A


27
1/27
3
0.037
0.097B425ED
3
1/1B


28
1/28
2, 7
0.03571428
0.0924
2, 7
1/1C


29
1/29
29
0.0344827586206896551724137931
0.08D3DCB
1D
1/1D


30
1/30
2, 3, 5
0.03
0.08
2, 3, 5
1/1E


31
1/31
31
0.032258064516129
0.08421
1F
1/1F


32
1/32
2
0.03125
0.08
2
1/20


33
1/33
3, 11
0.03
0.07C1F
3, B
1/21


34
1/34
2, 17
0.02941176470588235
0.078
2, 11
1/22


35
1/35
5, 7
0.0285714
0.075
5, 7
1/23


36
1/36
2, 3
0.027
0.071C
2, 3
1/24


Irrational numbers[edit]
The table below gives the expansions of some common irrational numbers in decimal and hexadecimal.


Number
Positional representation


Decimal
Hexadecimal


√2 (the length of the diagonal of a unit square)
7000141421356237309♠1.414213562373095048...
1.6A09E667F3BCD...


√3 (the length of the diagonal of a unit cube)
7000173205080756887♠1.732050807568877293...
1.BB67AE8584CAA...


√5 (the length of the diagonal of a 1×2 rectangle)
7000223606797749978♠2.236067977499789696...
2.3C6EF372FE95...


φ (phi, the golden ratio = (1+√5)/2)
7000161803398874989♠1.618033988749894848...
1.9E3779B97F4A...


π (pi, the ratio of circumference to diameter of a circle)
7000314159265358979♠3.141592653589793238462643
7026383279502884197♠383279502884197169399375105...
3.243F6A8885A308D313198A2E0
3707344A4093822299F31D008...


e (the base of the natural logarithm)
7000271828182845904♠2.718281828459045235...
2.B7E151628AED2A6B...


τ (the Thue–Morse constant)
6999412454033640107♠0.412454033640107597...
0.6996 9669 9669 6996...


γ (the limiting difference between the
harmonic series and the natural logarithm)
6999577215664901532♠0.577215664901532860...
0.93C467E37DB0C7A4D1B...


Powers[edit]
Powers of two have very simple expansions in hexadecimal. The first sixteen powers of two are shown below.


2x
Value
Value (Decimal)


20
1
1


21
2
2


22
4
4


23
8
8


24
10hex
16dec


25
20hex
32dec


26
40hex
64dec


27
80hex
128dec


28
100hex
256dec


29
200hex
512dec


2A (210dec)
400hex
1024dec


2B (211dec)
800hex
2048dec


2C (212dec)
1000hex
4096dec


2D (213dec)
2000hex
8192dec


2E (214dec)
4000hex
16,384dec


2F (215dec)
8000hex
32,768dec


210 (216dec)
10000hex
65,536dec


Cultural[edit]
Etymology[edit]
The word hexadecimal is composed of hexa-, derived from the Greek ἕξ (hex) for six, and -decimal, derived from the Latin for tenth. Webster's Third New International online derives hexadecimal as an alteration of the all-Latin sexadecimal (which appears in the earlier Bendix documentation). The earliest date attested for hexadecimal in Merriam-Webster Collegiate online is 1954, placing it safely in the category of international scientific vocabulary (ISV). It is common in ISV to mix Greek and Latin combining forms freely. The word sexagesimal (for base 60) retains the Latin prefix. Donald Knuth has pointed out that the etymologically correct term is senidenary (or possibly, sedenary), from the Latin term for grouped by 16. (The terms binary, ternary and quaternary are from the same Latin construction, and the etymologically correct terms for decimal and octal arithmetic are denary and octonary, respectively.)[21] Alfred B. Taylor used senidenary in his mid-1800s work on alternative number bases, although he rejected base 16 because of its "incommodious number of digits".[22][23] Schwartzman notes that the expected form from usual Latin phrasing would be sexadecimal, but computer hackers would be tempted to shorten that word to sex.[24] The etymologically proper Greek term would be hexadecadic / ἑξαδεκαδικός / hexadekadikós (although in Modern Greek, decahexadic / δεκαεξαδικός / dekaexadikos is more commonly used).
Use in Chinese culture[edit]
The traditional Chinese units of weight were base-16. For example, one jīn (斤) in the old system equals sixteen taels. The suanpan (Chinese abacus) could be used to perform hexadecimal calculations.
Primary numeral system[edit]
As with the duodecimal system, there have been occasional attempts to promote hexadecimal as the preferred numeral system. These attempts often propose specific pronunciation and symbols for the individual numerals.[25] Some proposals unify standard measures so that they are multiples of 16.[26][27][28]
An example of unified standard measures is hexadecimal time, which subdivides a day by 16 so that there are 16 "hexhours" in a day.[28]
Transfer encoding[edit]




This section needs expansion. You can help by adding to it. (October 2016)



Base16 or hex (not to be confused with Intel HEX and the like) is one of the simplest binary-to-text encodings, which stores each byte as a pair of hexadecimal digits. Many variations of such format are possible, for example either uppercase (A-F) or lowercase (a-f) letters may be used for digits greater than 9; spaces, line breaks or other separators may be added between digit groups of different lengths; header and/or footer with metainformation may be added.
See also[edit]

Base32, Base64 (content encoding schemes)
Hex editor
Hex dump
Bailey–Borwein–Plouffe formula (BBP)

References[edit]



^ "PDF The Unicode Standard, Version 7" (PDF). 
^ "Hexadecimal web colors explained". 
^ The string "\x1B[0m\x1B[25;1H" specifies the character sequence Esc [ 0 m Esc [ 2 5 ; 1 H Nul. These are the escape sequences used on an ANSI terminal that reset the character set and color, and then move the cursor to line 25.
^ "Modula-2 - Vocabulary and representation". Modula -2. Retrieved 1 November 2015. 
^ The VHDL MINI-REFERENCE: VHDL IDENTIFIERS, NUMBERS, STRINGS, AND EXPRESSIONS
^ "*read-base* variable in Common Lisp". 
^ "*print-base* variable in Common Lisp". 
^ MSX is Coming — Part 2: Inside MSX Compute!, issue 56, January 1985, p. 52
^ BBC BASIC programs are not fully portable to Microsoft BASIC (without modification) since the latter takes & to prefix octal values. (Microsoft BASIC primarily uses &O to prefix octal, and it uses &H to prefix hexadecimal, but the ampersand alone yields a default interpretation as an octal prefix.
^ Donald E. Knuth. The TeXbook (Computers and Typesetting, Volume A). Reading, Massachusetts: Addison–Wesley, 1984. ISBN 0-201-13448-9. The source code of the book in TeX (and a required set of macros CTAN.org) is available online on CTAN.
^ a b Martin, Bruce Alan (October 1968). "Letters to the editor: On binary notation". Communications of the ACM. Associated Universities Inc. 11 (10): 658. doi:10.1145/364096.364107. 
^ "2.1.3 Sexadecimal notation". G15D Programmer's Reference Manual (PDF). Los Angeles, CA, USA: Bendix Computer, Division of Bendix Aviation Corporation. p. 4. Archived (PDF) from the original on 2017-06-01. Retrieved 2017-06-01. This base is used because a group of four bits can represent any one of sixteen different numbers (zero to fifteen). By assigning a symbol to each of these combinations we arrive at a notation called sexadecimal (usually hex in conversation because nobody wants to abbreviate sex). The symbols in the sexadecimal language are the ten decimal digits and, on the G-15 typewriter, the letters u, v, w, x, y and z. These are arbitrary markings; other computers may use different alphabet characters for these last six digits. 
^ Gill, S.; Neagher, R. E.; Muller, D. E.; Nash, J. P.; Robertson, J. E.; Shapin, T.; Whesler, D. J. (1956-09-01). Nash, J. P., ed. "ILLIAC Programming - A Guide to the Preparation of Problems For Solution by the University of Illinois Digital Computer" (PDF) (Fourth printing. Revised and corrected ed.). Urbana, Illinois, USA: Digital Computer Laboratory, Graduate College, University of Illinois. pp. 3–2. Archived (PDF) from the original on 2017-05-31. Retrieved 2014-12-18. 
^ ROYAL PRECISION Electronic Computer LGP - 30 PROGRAMMING MANUAL. Port Chester, New York: Royal McBee Corporation. April 1957. Archived from the original on 2017-05-31. Retrieved 2017-05-31.  (NB. This somewhat odd sequence was from the next six sequential numeric keyboard codes in the LGP-30's 6-bit character code.)
^ NEC Parametron Digital Computer Type NEAC-1103 (PDF). Tokyo, Japan: Nippon Electric Company Ltd. 1960. Cat. No. 3405-C. Archived (PDF) from the original on 2017-05-31. Retrieved 2017-05-31. 
^ BCD-to-Seven-Segment Decoders/Drivers: SN54246/SN54247/SN54LS247, SN54LS248 SN74246/SN74247/SN74LS247/SN74LS248 (PDF), Texas Instruments, March 1988 [March 1974], SDLS083, archived (PDF) from the original on 2017-03-29, retrieved 2017-03-30, […] They can be used interchangeable in present or future designs to offer designers a choice between two indicator fonts. The '46A, '47A, 'LS47, and 'LS48 compose the 6 and the 9 without tails and the '246, '247, 'LS247, and 'LS248 compose the 6 and the 0 with tails. Composition of all other characters, including display patterns for BCD inputs above nine, is identical. […] Display patterns for BCD input counts above 9 are unique symbols to authenticate input conditions. […] 
^ "ISO/IEC 9899:1999 - Programming languages - C". Iso.org. 2011-12-08. Retrieved 2014-04-08. 
^ a b Beebe, Nelson H. F. (2017-08-22). The Mathematical-Function Computation Handbook - Programming Using the MathCW Portable Software Library (1 ed.). Salt Lake City, UT, USA: Springer International Publishing AG. doi:10.1007/978-3-319-64110-2. ISBN 978-3-319-64109-6. LCCN 2017947446. Retrieved 2017-09-06. 
^ "Rationale for International Standard - Programming Languages - C" (PDF). 5.10. April 2003. pp. 52, 153–154, 159. Archived (PDF) from the original on 2016-06-06. Retrieved 2010-10-17. 
^ The IEEE and The Open Group (2013) [2001]. "dprintf, fprintf, printf, snprintf, sprintf - print formatted output". The Open Group Base Specifications (Issue 7, IEEE Std 1003.1, 2013 ed.). Archived from the original on 2016-06-21. Retrieved 2016-06-21. 
^ Knuth, Donald. (1969). The Art of Computer Programming, Volume 2. ISBN 0-201-03802-1. (Chapter 17.)
^ A.B. Taylor, Report on Weights and Measures, Pharmaceutical Association, 8th Annual Session, Boston, Sept. 15, 1859. See pages and 33 and 41.
^ Alfred B. Taylor, "Octonary numeration and its application to a system of weights and measures", Proc Amer. Phil. Soc. Vol XXIV, Philadelphia, 1887; pages 296-366. See pages 317 and 322.
^ Schwartzman, S. (1994). The Words of Mathematics: an etymological dictionary of mathematical terms used in English. ISBN 0-88385-511-9.
^ "Base 4^2 Hexadecimal Symbol Proposal". 
^ "Intuitor Hex Headquarters". 
^ "A proposal for addition of the six Hexadecimal digits (A-F) to Unicode". 
^ a b Nystrom, John William (1862). Project of a New System of Arithmetic, Weight, Measure and Coins: Proposed to be called the Tonal System, with Sixteen to the Base. Philadelphia. 








						Retrieved from "https://en.wikipedia.org/w/index.php?title=Hexadecimal&oldid=817883425"					Categories: Binary arithmeticHexadecimal numeral systemPositional numeral systemsHidden categories: All articles with specifically marked weasel-worded phrasesArticles with specifically marked weasel-worded phrases from August 2017Interlanguage link template link numberAll articles with unsourced statementsArticles with unsourced statements from August 2017Articles with unsourced statements from November 2016Articles to be expanded from October 2016All articles to be expandedArticles using small message boxes