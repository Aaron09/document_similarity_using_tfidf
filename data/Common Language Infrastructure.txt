The Common Language Infrastructure (CLI) is an open specification (technical standard) developed by Microsoft and standardized by ISO[1] and ECMA[2] that describes executable code and a runtime environment that allows multiple high-level languages to be used on different computer platforms without being rewritten for specific architectures. This implies it is platform agnostic. The .NET Framework, .NET Core, Mono, DotGNU and Portable.NET are implementations of the CLI.



Contents


1 Overview
2 Standardization and licensing
3 Implementations
4 See also
5 Notes
6 References



Overview[edit]




Visual overview of the Common Language Infrastructure (CLI)


Among other things, the CLI specification describes the following four aspects:

The Common Type System (CTS)
A set of data types and operations that are shared by all CTS-compliant programming languages.
The Metadata
Information about program structure is language-agnostic, so that it can be referenced between languages and tools, making it easy to work with code written in a language the developer is not using.
The Common Language Specification (CLS)
A set of base rules to which any language targeting the CLI should conform in order to interoperate with other CLS-compliant languages. The CLS rules define a subset of the Common Type System.
The Virtual Execution System (VES)
The VES loads and executes CLI-compatible programs, using the metadata to combine separately generated pieces of code at runtime.

All compatible languages compile to Common Intermediate Language (CIL), which is an intermediate language that is abstracted from the platform hardware. When the code is executed, the platform-specific VES will compile the CIL to the machine language according to the specific hardware and operating system.
Standardization and licensing[edit]
In August 2000, Microsoft, Hewlett-Packard, Intel, and others worked to standardize CLI. By December 2001, it was ratified by the ECMA, with ISO standardization following in April 2003.
Microsoft and its partners hold patents for CLI. ECMA and ISO require that all patents essential to implementation be made available under "reasonable and non-discriminatory (RAND) terms." It is common for RAND licensing to require some royalty payment, which could be a cause for concern with Mono. As of January 2013, neither Microsoft nor its partners have identified any patents essential to CLI implementations subject to RAND terms.
As of July 2009,[3] Microsoft added C# and CLI to the list of specifications that the Microsoft Community Promise applies to,[4] so anyone can safely implement specified editions of the standards without fearing a patent lawsuit from Microsoft. To implement the CLI standard requires conformance to one of the supported and defined profiles of the standard, the minimum of which is the kernel profile. The kernel profile is actually a very small set of types to support in comparison to the well known core library of default .NET installations. However, the conformance clause of the CLI allows for extending the supported profile by adding new methods and types to classes, as well as deriving from new namespaces. But it does not allow for adding new members to interfaces. This means that the features of the CLI can be used and extended, as long as the conforming profile implementation does not change the behavior of a program intended to run on that profile, while allowing for unspecified behavior from programs written specifically for that implementation.
In 2012, ECMA and ISO published the new edition of the CLI standard,[1][2] which is not covered by the Community Promise.[4]
Implementations[edit]

.NET Framework is Microsoft's original commercial implementation of the CLI. Its Virtual Execution System is the Common Language Runtime and its implementation of the Standard Libraries is the Framework Class Library.
.NET Compact Framework is Microsoft's commercial implementation of the CLI for portable devices and Xbox 360.
.NET Micro Framework is an open source implementation of the CLI for resource-constrained devices.
Shared Source Common Language Infrastructure is a reference implementation of the CLI available from Microsoft, under the Shared Source licensing program.
.NET Core is a portable and modular free and open-source fork of Microsoft's .NET Framework by the .NET Foundation under an MIT license
Mono development platform is an open source implementation of CLI and accompanying technologies, sponsored by Xamarin.
Portable.NET, part of the dotGNU project, is a free software implementation of ECMA-335 by Free Software Foundation.

See also[edit]

Standard Libraries (CLI)
List of CLI languages

Notes[edit]



^ a b ISO/IEC 23271:2012 - Information technology -- Common Language Infrastructure (CLI)
^ a b Standard ECMA-335 - 6th edition (June 2012)
^ "The ECMA C# and CLI Standards - Port 25: The Open Source Community at Microsoft". 2009-07-06. 
^ a b Covered Specifications | Microsoft Open Specifications



References[edit]

"Standard ECMA-335, Common Language Infrastructure (CLI)". ECMA International. Retrieved August 31, 2005. 
"ISO/IEC 23271, Common Language Infrastructure". ISO. Retrieved September 27, 2006. 
"ECMA C# and Common Language Infrastructure Standards". Microsoft Corporation. Retrieved October 13, 2009. 







v
t
e


Common Language Infrastructure



Architecture



Application domain
Code Access Security
Common Intermediate Language (CIL)

CIL instructions


Common Type System (CTS)
Platform Invocation Services (P/Invoke)
Virtual Execution System (VES)





Components



Assembly
Delegate
Global Assembly Cache (GAC)
Manifest
Metadata





Standard
Libraries




Kernel Profile



Base Class Library (BCL)
Runtime Infrastructure Library





Compact Profile



Network Library
Reflection Library
XML Library








Extended Array Library
Extended Numerics Library
Parallel Library
Vararg Library








Implementations




Microsoft



.NET Framework
.NET Compact Framework
.NET Micro Framework
Shared Source Common Language Infrastructure





Other



.NET Core
Mono
Portable.NET








Languages




Microsoft



C#
Visual Basic .NET
C++/CLI

Managed


F#
Q#
J#
JScript .NET
PowerShell





Other



Axum
A#
Boo
Cobra
IronScheme

IronLisp


IronPython
IronRuby
Nemerle
Oxygene
Phalanger
P#
Scala





Comparison



C# and Java
C# and Visual Basic .NET
Java and .NET platforms
Visual Basic and Visual Basic .NET








Organizations



.NET Foundation
DotGNU
Microsoft
Xamarin












v
t
e


Standards of Ecma International



Application interfaces



ANSI escape code
Common Language Infrastructure
Office Open XML
OpenXPS





File systems (tape)



Advanced Intelligent Tape
DDS
DLT
Super DLT
Holographic Versatile Disc
Linear Tape-Open (Ultrium-1)
VXA





File systems (disk)



CD-ROM
CD File System (CDFS)
FAT

FAT12
FAT16
FAT16B


FD
UDF
Ultra Density Optical
Universal Media Disc





Graphics



Universal 3D





Programming languages



C++/CLI
C#
Eiffel
JavaScript (E4X, ECMAScript)





Radio link interfaces



NFC
UWB





Other



ECMA-35






List of Ecma standards (1961 - Present)










v
t
e


ISO standards by standard number




List of ISO standards / ISO romanizations / IEC standards



1–9999



1
2
3
4
5
6
7
9
16
31

-0
-1
-2
-3
-4
-5
-6
-7
-8
-9
-10
-11
-12
-13


128
216
217
226
228
233
259
269
302
306
428
518
519
639

-1
-2
-3
-5
-6


646
690
732
764
843
898
965
1000
1004
1007
1073-1
1413
1538
1745
1989
2014
2015
2022
2047
2108
2145
2146
2240
2281
2709
2711
2788
2848
2852
3029
3103
3166

-1
-2
-3


3297
3307
3602
3864
3901
3977
4031
4157
4217
4909
5218
5428
5775
5776
5800
5964
6166
6344
6346
6385
6425
6429
6438
6523
6709
7001
7002
7098
7185
7200
7498
7736
7810
7811
7812
7813
7816
8000
8178
8217
8571
8583
8601
8632
8652
8691
8807
8820-5
8859

-1
-2
-3
-4
-5
-6
-7
-8
-8-I
-9
-10
-11
-12
-13
-14
-15
-16


8879
9000/9001
9075
9126
9293
9241
9362
9407
9506
9529
9564
9594
9660
9897
9899
9945
9984
9985
9995





10000–19999



10005
10006
10007
10116
10118-3
10160
10161
10165
10179
10206
10218
10303

-11
-21
-22
-28
-238


10383
10487
10585
10589
10646
10664
10746
10861
10957
10962
10967
11073
11170
11179
11404
11544
11783
11784
11785
11801
11898
11940 (-2)
11941
11941 (TR)
11992
12006
12182
12207
12234-2
13211

-1
-2


13216
13250
13399
13406-2
13450
13485
13490
13567
13568
13584
13616
14000
14031
14224
14289
14396
14443
14496

-2
-3
-6
-10
-11
-12
-14
-17
-20


14644
14649
14651
14698
14750
14764
14882
14971
15022
15189
15288
15291
15292
15398
15408
15444

-3


15445
15438
15504
15511
15686
15693
15706

-2


15707
15897
15919
15924
15926
15926 WIP
15930
16023
16262
16612-2
16750
16949 (TS)
17024
17025
17100
17203
17369
17442
17799
18000
18004
18014
18245
18629
18916
19005
19011
19092 (-1
-2)
19114
19115
19125
19136
19439
19500
19501
19502
19503
19505
19506
19507
19508
19509
19510
19600:2014
19752
19757
19770
19775-1
19794-5
19831





20000+



20000
20022
20121
20400
21000
21047
21500
21827:2002
22000
23270
23271
23360
24517
24613
24617
24707
25178
25964
26000
26300
26324
27000 series
27000
27001:2005
27001:2013
27002
27006
27729
28000
29110
29148
29199-2
29500
30170
31000
32000
38500
40500
42010
55000
80000

-1
-2
-3










 Category











						Retrieved from "https://en.wikipedia.org/w/index.php?title=Common_Language_Infrastructure&oldid=803630831"					Categories: Common Language InfrastructureEcma standardsIEC standardsISO standards