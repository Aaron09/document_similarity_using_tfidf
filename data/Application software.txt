





This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (August 2016) (Learn how and when to remove this template message)



"Computer Applications" redirects here. For the academic events, see Computer Applications (UIL).




GNU Image Manipulation Program (GIMP), version 2.6, a freely distributed application


An application program (app or application for short) is a computer program designed to perform a group of coordinated functions, tasks, or activities for the benefit of the user. Examples of an application include a word processor, a spreadsheet, an accounting application, a web browser, a media player, an aeronautical flight simulator, a console game or a photo editor. The collective noun application software refers to all applications collectively.[1] This contrasts with system software, which is mainly involved with running the computer.
Applications may be bundled with the computer and its system software or published separately, and may be coded as proprietary, open-source or university projects.[2] Apps built for mobile platforms are called mobile apps.



Contents


1 Terminology

1.1 Metonymy
1.2 Apps and killer apps


2 Classification

2.1 Information worker software
2.2 Entertainment software
2.3 Educational software
2.4 Enterprise infrastructure software
2.5 Simulation software
2.6 Media development software
2.7 Product engineering software


3 See also
4 References
5 External links



Terminology[edit]
In information technology, an application is a computer program designed to help people perform an activity. An application thus differs from an operating system (which runs a computer), a utility (which performs maintenance or general-purpose chores), and a programming tool (with which computer programs are created)[original research?]. Depending on the activity for which it was designed, an application can manipulate text, numbers, graphics, or a combination of these elements. Some application packages focus on a single task, such as word processing; others, called integrated software include several applications.[3]
User-written software tailors systems to meet the user's specific needs. User-written software includes spreadsheet templates, word processor macros, scientific simulations, graphics and animation scripts. Even email filters are a kind of user software. Users create this software themselves and often overlook how important it is.
The delineation between system software such as operating systems and application software is not exact, however, and is occasionally the object of controversy.[4] For example, one of the key questions in the United States v. Microsoft Corp. antitrust trial was whether Microsoft's Internet Explorer web browser was part of its Windows operating system or a separable piece of application software. As another example, the GNU/Linux naming controversy is, in part, due to disagreement about the relationship between the Linux kernel and the operating systems built over this kernel. In some types of embedded systems, the application software and the operating system software may be indistinguishable to the user, as in the case of software used to control a VCR, DVD player or microwave oven. The above definitions may exclude some applications that may exist on some computers in large organizations. For an alternative definition of an app: see Application Portfolio Management.
Metonymy[edit]
The word "application", once used as an adjective, is not restricted to the "of or pertaining to application software" meaning.[5] For example, concepts such as application programming interface (API), application server, application virtualization, application lifecycle management and portable application apply to all computer programs alike, not just application software.
Apps and killer apps[edit]
Main article: Killer application
Some applications are available in versions for several different platforms; others only work on one and are thus called, for example, a Geography application for Windows, or an Android application for education, or a Linux game. Sometimes a new and popular application arises which only runs on one platform, increasing the desirability of that platform. This is called a killer application or killer app. For example, VisiCalc was the first modern spreadsheet software for the Apple II and helped selling the then-new personal computers into offices. For Blackberry it was their email software.
In recent years, the shortened term "app" (coined in 1981 or earlier[6]) has become popular to refer to applications for mobile devices such as smartphones and tablets, the shortened form matching their typically smaller scope compared to applications on PCs. Even more recently, the shortened version is used for desktop application software as well.
Classification[edit]
There are many different ways to divide up different types of application software, and several are explained here.
Since the development and near-universal adoption of the web, an important distinction that has emerged has been between web applications â€” written with HTML, JavaScript and other web-native technologies and typically requiring one to be online and running a web browser, and the more traditional native applications written in whatever languages are available for one's particular type of computer. There has been a contentious debate in the computing community regarding web applications replacing native applications for many purposes, especially on mobile devices such as smartphones and tablets. Web apps have indeed greatly increased in popularity for some uses, but the advantages of applications make them unlikely to disappear soon, if ever. Furthermore, the two can be complementary, and even integrated.[7][8][9]
Application software can also be seen as being either horizontal or vertical.[10][11] Horizontal applications are more popular and widespread, because they are general purpose, for example word processors or databases. Vertical applications are niche products, designed for a particular type of industry or business, or department within an organization. Integrated suites of software will try to handle every specific aspect possible of, for example, manufacturing or banking worker, or accounting, or customer service.
There are many types of application software:[12]




LibreOffice Writer, an open-source word processor that is a component of LibreOffice



An application suite consists of multiple applications bundled together. They usually have related functions, features and user interfaces, and may be able to interact with each other, e.g. open each other's files. Business applications often come in suites, e.g. Microsoft Office, LibreOffice and iWork, which bundle together a word processor, a spreadsheet, etc.; but suites exist for other purposes, e.g. graphics or music.
Enterprise software addresses the needs of an entire organization's processes and data flows, across several departments, often in a large distributed environment. Examples include enterprise resource planning systems, customer relationship management (CRM) systems and supply chain management software. Departmental Software is a sub-type of enterprise software with a focus on smaller organizations or groups within a large organization. (Examples include travel expense management and IT Helpdesk.)
Enterprise infrastructure software provides common capabilities needed to support enterprise software systems. (Examples include databases, email servers, and systems for managing networks and security.)
Information worker software lets users create and manage information, often for individual projects within a department, in contrast to enterprise management. Examples include time management, resource management, analytical, collaborative and documentation tools. Word processors, spreadsheets, email and blog clients, personal information system, and individual media editors may aid in multiple information worker tasks.
Content access software is used primarily to access content without editing, but may include software that allows for content editing. Such software addresses the needs of individuals and groups to consume digital entertainment and published digital content. (Examples include media players, web browsers, and help browsers.)
Educational software is related to content access software, but has the content or features adapted for use in by educators or students. For example, it may deliver evaluations (tests), track progress through material, or include collaborative capabilities.
Simulation software simulates physical or abstract systems for either research, training or entertainment purposes.
Media development software generates print and electronic media for others to consume, most often in a commercial or educational setting. This includes graphic-art software, desktop publishing software, multimedia development software, HTML editors, digital-animation editors, digital audio and video composition, and many others.[13]
Product engineering software is used in developing hardware and software products. This includes computer-aided design (CAD), computer-aided engineering (CAE), computer language editing and compiling tools, integrated development environments, and application programmer interfaces.
Entertainment Software can refer to video games, screen savers, programs to display motion pictures or play recorded music, and other forms of entertainment which can be experienced through use of a computing device.

Applications can also be classified by computing platform such as a particular operating system, delivery network such as in cloud computing and Web 2.0 applications, or delivery devices such as mobile apps for mobile devices.
The operating system itself can be considered application software when performing simple calculating, measuring, rendering, and word processing tasks not used to control hardware via command-line interface or graphical user interface. This does not include application software bundled within operating systems such as a software calculator or text editor.
Information worker software[edit]

Accounting software
Data management

Contact manager
Spreadsheet
Database software


Documentation

Document automation
Word processor
Desktop publishing software
Diagramming software
Presentation software
Email
Blog software


Enterprise resource planning
Financial software

Day trading software
Banking software
Clearing systems
arithmetic software


Field service management

Workforce management software


Project management software

Calendaring software
Employee scheduling software
Workflow software


Reservation systems

Entertainment software[edit]

Screen savers
Video games

Arcade games
Console games
Mobile games
Personal computer games



Educational software[edit]

Classroom management
Reference software
Sales readiness software
Survey management

Enterprise infrastructure software[edit]

Business workflow software
Database management system (DBMS)
Digital asset management (DAM) software
Document management software
Geographic information system (GIS)

Simulation software[edit]

Computer simulators

Scientific simulators
Social simulators
Battlefield simulators
Emergency simulators
Vehicle simulators

Flight simulators
Driving simulators


Simulation games

Vehicle simulation games





Media development software[edit]

3D computer graphics software
Animation software
Graphic art software

Raster graphics editor
Vector graphics editor


Image organizer
Video editing software
Audio editing software

Digital audio workstation


Music sequencer

Scorewriter


HTML editor
Game development tool

Product engineering software[edit]

Hardware engineering

Computer-aided engineering
Computer-aided design (CAD)
Finite element analysis


Software engineering

Compiler software
Integrated development environment

Compiler
Linker
Version control
Game development tool
Debugger
License manager





See also[edit]

Software development

References[edit]


^ "Application software". PC Magazine. Ziff Davis.Â 
^ Ryan, Thorne (2013-03-14). "Caffeine and computer screens: student programmers endure weekend long appathon". The Arbiter. Retrieved 2015-10-12.Â 
^ Ceruzzi, Paul E. (2000). A History of Modern Computing. Cambridge, Mass.: MIT Press. ISBNÂ 0-262-03255-4.
^ Ulrich, William. "Application Package Software: The Promise Vs. Reality". Cutter Consortium.Â 
^ Application Package Software: The Promise Vs. Reality
^ The History of 'App' and the Demise of the Programmer
^ GassÃ©e, Jean-Louis (2012-09-17). "The Silly Web vs. Native Apps Debate". The Silly Web vs. Native Apps Debate. Archived from the original on 2016-04-15. Retrieved 2013-07-14.Â 
^ Frechette, Casey (2013-04-11). "What journalists need to know about the difference between Web apps and native apps". Poynter. Retrieved 2013-07-14.Â 
^ Valums, Andrew (2010-02-10). "Web apps vs desktop apps". valums.com. Archived from the original on 2013-04-02. Retrieved 2013-07-14.Â 
^ "What Is a Horizontal Application?".Â 
^ "What Are Horizontal Services?". Archived from the original on 2013-10-31.Â 
^ "What is Application Software & Its Types | eduCBA". eduCBA. 2015-12-21. Retrieved 2017-03-24.Â 
^ Campbell-Kelly, Martin; Aspray, William (1996). Computer: A History of the Information Machine. New York: Basic Books. ISBNÂ 0-465-02990-6.


External links[edit]

 Media related to Application software at Wikimedia Commons
 Learning materials related to application software at Wikiversity




Authority control



GND: 4120906-0











						Retrieved from "https://en.wikipedia.org/w/index.php?title=Application_software&oldid=818539327"					Categories: Application softwareHidden categories: Articles needing additional references from August 2016All articles needing additional referencesAll articles that may contain original researchArticles that may contain original research from June 2014Wikipedia articles with GND identifiers