
STEP

Filename extension
.step, .stp, .p21


Magic number
ISO-10303-21


DevelopedÂ by
ISO


Initial release
1994


Website
Specification


STEP-File is the most widely used[citation needed] data exchange form of STEP. ISO 10303 can represent 3D objects in Computer-aided design (CAD) and related information. Due to its ASCII structure a STEP-file is easy to read with typically one instance per line. The format of a STEP-File is defined in ISO 10303-21 Clear Text Encoding of the Exchange Structure.[1]
ISO 10303-21 defines the encoding mechanism for representing data conforming to a particular schema in the EXPRESS data modeling language specified in ISO 10303-11. A STEP-File is also called p21-File and STEP Physical File. The file extensions .stp and .step indicate that the file contains data conforming to STEP Application Protocols while the extension .p21 should be used for all other purposes.[2]



Contents


1 History
2 ISO 10303-21 Building blocks

2.1 Example
2.2 HEADER section
2.3 DATA section


3 See also
4 References



History[edit]
Some details to take note of:

The first edition, ISO 10303-21:1994, had some bugs, which were corrected by a Technical Corrigendum. Therefore, it is recommended that users study the second edition instead (see below).
The second edition, ISO 10303-21:2002, included the corrigendum and extensions for several data sections.
The third edition, ISO 10303-21:2016, added anchor, reference and signature sections to support external references, support for compressed exchange structures in a ZIP-based archive, digital signatures, and UTF-8 character encoding.[3]
Part 21 defined two conformance classes. They differ only in how to encode complex entity instances.

Conformance class 1 is always used enforce the so-called internal mapping, which is more compact.
Conformance class 2, which is not used in practice, always enforces the external mapping. In theory this would allow better AP interoperability, since a postprocessor may know how to handle some supertypes, but may not know the specified subtypes.


The 1st edition of part 21 enforces the use of so-called SHORT NAMES, which are optional in the 2nd edition. In practice, however, SHORT NAMES are rarely used.
The 2nd edition allows multiple data sections to be used. In practice, however, most implementations only use a single data section (1st edition encoding).

ISO 10303-21 Building blocks[edit]
Example[edit]
A typical example looks like this:

ISO-10303-21;
HEADER;
FILE_DESCRIPTION(
/* description */ ('A minimal AP214 example with a single part'),
/* implementation_level */ '2;1');
FILE_NAME(
/* name */ 'demo',
/* time_stamp */ '2003-12-27T11:57:53',
/* author */ ('Lothar Klein'),
/* organization */ ('LKSoft'),
/* preprocessor_version */ ' ',
/* originating_system */ 'IDA-STEP',
/* authorization */ ' ');
FILE_SCHEMA (('AUTOMOTIVE_DESIGN { 1 0 10303 214 2 1 1}'));
ENDSEC;
DATA;
#10=ORGANIZATION('O0001','LKSoft','company');
#11=PRODUCT_DEFINITION_CONTEXT('part definition',#12,'manufacturing');
#12=APPLICATION_CONTEXT('mechanical design');
#13=APPLICATION_PROTOCOL_DEFINITION('','automotive_design',2003,#12);
#14=PRODUCT_DEFINITION('0',$,#15,#11);
#15=PRODUCT_DEFINITION_FORMATION('1',$,#16);
#16=PRODUCT('A0001','Test Part 1','',(#18));
#17=PRODUCT_RELATED_PRODUCT_CATEGORY('part',$,(#16));
#18=PRODUCT_CONTEXT('',#12,'');
#19=APPLIED_ORGANIZATION_ASSIGNMENT(#10,#20,(#16));
#20=ORGANIZATION_ROLE('id owner');
ENDSEC;
END-ISO-10303-21;

HEADER section[edit]
As seen in the above example, the file is split into two sections following the initial keyword ISO-10303-21;:
The HEADER section has a fixed structure consisting of 3 to 6 groups in the given order. Except for the data fields time_stamp and FILE_SCHEMA all fields may contain empty strings.

FILE_DESCRIPTION

description
implementation_level. The version and conformance option of this file. Possible versions are "1" for the original standard back in 1994, "2" for the technical corrigendum in 1995 and "3" for the second edition. The conformance option is either "1" for internal and "2" for external mapping of complex entity instances. Often, one will find here the value __'2;1'__. The value '2;2' enforcing external mapping is also possible but only very rarely used. The values '3;1' and '3;2' indicate extended STEP-Files as defined in the 2001 standard with several DATA sections, multiple schemas and FILE_POPULATION support.


FILE_NAME

name of this exchange structure. It may correspond to the name of the file in a file system or reflect data in this file. There is no strict rule how to use this field.
time_stamp indicates the time when this file was created. The time is given in the international data time format ISO 8601, e.g. 2003-12-27T11:57:53 for 27 of December 2003, 2 minutes to noon time.
author the name and mailing address of the person creating this exchange structure
organization the organization to whom the person belongs to
preprocessor_version the name of the system and its version which produces this STEP-file
originating_system the name of the system and its version which originally created the information contained in this STEP-file.
authorization the name and mailing address of the person who authorized this file.


FILE_SCHEMA. Specifies one or several Express schema governing the information in the data section(s). For first edition files, only one EXPRESS schema together with an optional ASN.1 object identifier of the schema version can be listed here. Second edition files may specify several EXPRESS schema.

The last three header groups are only valid in second edition files.

FILE_POPULATION, indicating a valid population (set of entity instances) which conforms to an EXPRESS schemas. This is done by collecting data from several data_sections and referenced instances from other data sections.

governing_schema, the EXPRESS schema to which the indicated population belongs to and by which it can be validated.
determination_method to figure out which instances belong to the population. Three methods are predefined: SECTION_BOUNDARY, INCLUDE_ALL_COMPATIBLE, and INCLUDE_REFERENCED.
governed_sections, the data sections whose entity instances fully belongs to the population.
The concept of FILE_POPULATION is very close to schema_instance of SDAI. Unfortunately, during the standardization process, it was not possible to come to an agreement to merge these concepts. Therefore, JSDAI adds further attributes to FILE_POPULATION as intelligent comments to cover all missing information from schema_instance. This is supported for both import and export.


SECTION_LANGUAGE allows assignment of a default language for either all or a specific data section. This is needed for those Express schemas that do not provide the capability to specify in which language string attributes of entities such as name and description are given.
SECTION_CONTEXT provide the capability to specify additional context information for all or single data sections. This can be used e.g. for STEP-APs to indicate which conformance class is covered by a particular data section.

DATA section[edit]
The DATA section contains application data according to one specific express schema. The encoding of this data follows some simple principles.

Instance name: Every entity instance in the exchange structure is given a unique name in the form "#1234". The instance name must consist of a positive number (>0) and is typically smaller than 263. The instance name is only valid locally within the STEP-file. If the same content is exported again from a system the instance names may be different for the same instances. The instance name is also used to reference other entity instances through attribute values or aggregate members. The referenced instance may be defined before or after the current instance.
Instances of single entity data types are represented by writing the name of the entity in capital letters and then followed by the attribute values in the defined order within parentheses. See e.g. "#16=PRODUCT(...)" above.
Instances of complex entity data types are represented in the STEP file by using either the internal mapping or the external mapping.

External mapping has always to be used if the complex entity instance consist of more than one leaf entity. In this case all the single entity instance values are given independently from each other in alphabetical order as defined above with all entity values grouped together in parentheses.
Internal mapping is used by default for conformance option 1 when the complex entity instance consists of only one leaf entity. The encoding is similar to the one of a single entity instance with the additional order given by the subtype definition.


Mapping of attribute values:

Only explicit attributes get mapped. Inverse, Derived and re-declared attributes are not listed since their values can be deduced from the other ones.
Unset attribute values are given as "$".
Explicit attributes which got re-declared as derived in a subtype are encoded as "*" in the position of the supertype attribute.


Mapping of other data types:

Enumeration, boolean and logical values are given in capital letters with a leading and trailing dot such as ".TRUE.".
String values are given in " ". For characters with a code greater than 126 a special encoding is used. The character sets as defined in ISO 8859 and 10646 are supported. Note that typical 8 (e.g. west European) or 16 (Unicode) bit character sets cannot directly be taken for STEP-file strings. They have to be decoded in a very special way.
Integers and real values are used identical to typical programming languages
Binary values (bit sequences) are encoded as hexadecimal and surrounded by double quotes, with a leading character indicating the number of unused bits (0, 1, 2, or 3) followed by uppercase hexadecimal encoding of data. It is important to note that the entire binary value is encoded as a single hexadecimal number, with the highest order bits in the first hex character and the lowest order bits in the last one.
The elements of aggregates (SET, BAG, LIST, ARRAY) are given in parentheses, separated by ",".
Care has to be taken for select data types based on defined data types. Here the name of the defined data type gets mapped too.


See also "Mapping of Express to Java" for more details of this.[clarification needed]

See also[edit]

Industry Foundation Classes (IFC)
IGES
STL (file format)

References[edit]



^ ISO 10303-21:2002 Industrial automation systems and integration -- Product data representation and exchange -- Part 21: Implementation methods: Clear text encoding of the exchange structure
^ ISO TC184/SC4 Secretary "Cumulative list of resolutions" Resolution 583 (Stuttgart, Germany, - June 2003) "Registration of SC4 MIME-Types", [1]
^ ISO 10303-21:2016. Industrial automation systems and integration -- Product data representation and exchange -- Part 21: Implementation methods: Clear text encoding of the exchange structure [2]









v
t
e


ISO standards by standard number




List of ISO standardsÂ / ISO romanizationsÂ / IEC standards



1â9999



1
2
3
4
5
6
7
9
16
31

-0
-1
-2
-3
-4
-5
-6
-7
-8
-9
-10
-11
-12
-13


128
216
217
226
228
233
259
269
302
306
428
518
519
639

-1
-2
-3
-5
-6


646
690
732
764
843
898
965
1000
1004
1007
1073-1
1413
1538
1745
1989
2014
2015
2022
2047
2108
2145
2146
2240
2281
2709
2711
2788
2848
2852
3029
3103
3166

-1
-2
-3


3297
3307
3602
3864
3901
3977
4031
4157
4217
4909
5218
5428
5775
5776
5800
5964
6166
6344
6346
6385
6425
6429
6438
6523
6709
7001
7002
7098
7185
7200
7498
7736
7810
7811
7812
7813
7816
8000
8178
8217
8571
8583
8601
8632
8652
8691
8807
8820-5
8859

-1
-2
-3
-4
-5
-6
-7
-8
-8-I
-9
-10
-11
-12
-13
-14
-15
-16


8879
9000/9001
9075
9126
9293
9241
9362
9407
9506
9529
9564
9594
9660
9897
9899
9945
9984
9985
9995





10000â19999



10005
10006
10007
10116
10118-3
10160
10161
10165
10179
10206
10218
10303

-11
-21
-22
-28
-238


10383
10487
10585
10589
10646
10664
10746
10861
10957
10962
10967
11073
11170
11179
11404
11544
11783
11784
11785
11801
11898
11940 (-2)
11941
11941 (TR)
11992
12006
12182
12207
12234-2
13211

-1
-2


13216
13250
13399
13406-2
13450
13485
13490
13567
13568
13584
13616
14000
14031
14224
14289
14396
14443
14496

-2
-3
-6
-10
-11
-12
-14
-17
-20


14644
14649
14651
14698
14750
14764
14882
14971
15022
15189
15288
15291
15292
15398
15408
15444

-3


15445
15438
15504
15511
15686
15693
15706

-2


15707
15897
15919
15924
15926
15926 WIP
15930
16023
16262
16612-2
16750
16949 (TS)
17024
17025
17100
17203
17369
17442
17799
18000
18004
18014
18245
18629
18916
19005
19011
19092 (-1
-2)
19114
19115
19125
19136
19439
19500
19501
19502
19503
19505
19506
19507
19508
19509
19510
19600:2014
19752
19757
19770
19775-1
19794-5
19831





20000+



20000
20022
20121
20400
21000
21047
21500
21827:2002
22000
23270
23271
23360
24517
24613
24617
24707
25178
25964
26000
26300
26324
27000 series
27000
27001:2005
27001:2013
27002
27006
27729
28000
29110
29148
29199-2
29500
30170
31000
32000
38500
40500
42010
55000
80000

-1
-2
-3










 Category











						Retrieved from "https://en.wikipedia.org/w/index.php?title=ISO_10303-21&oldid=811834350"					Categories: ISO 10303Hidden categories: All articles with unsourced statementsArticles with unsourced statements from October 2014Wikipedia articles needing clarification from January 2014