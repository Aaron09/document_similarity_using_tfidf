This article is about connectives in logical systems. For connectors in natural languages, see discourse connective. For other logical symbols, see List of logic symbols.






This article may be too technical for most readers to understand. Please help improve it to make it understandable to non-experts, without removing the technical details. (April 2014) (Learn how and when to remove this template message)



In logic, a logical connective (also called a logical operator, sentential connective, or sentential operator) is a symbol or word used to connect two or more sentences (of either a formal or a natural language) in a grammatically valid way, such that the value of the compound sentence produced depends only on that of the original sentences and on the meaning of the connective.
The most common logical connectives are binary connectives (also called dyadic connectives) which join two sentences which can be thought of as the function's operands. Also commonly, negation is considered to be a unary connective.
Logical connectives along with quantifiers are the two main types of logical constants used in formal systems such as propositional logic and predicate logic. Semantics of a logical connective is often, but not always, presented as a truth function.
A logical connective is similar to but not equivalent to a conditional operator.[1]



Contents


1 In language

1.1 Natural language
1.2 Formal languages


2 Common logical connectives

2.1 List of common logical connectives
2.2 History of notations
2.3 Redundancy


3 Properties
4 Order of precedence
5 Computer science
6 See also
7 Notes
8 References
9 Further reading
10 External links



In language[edit]
Natural language[edit]
In the grammar of natural languages two sentences may be joined by a grammatical conjunction to form a grammatically compound sentence. Some but not all such grammatical conjunctions are truth functions. For example, consider the following sentences:

A: Jack went up the hill.
B: Jill went up the hill.
C: Jack went up the hill and Jill went up the hill.
D: Jack went up the hill so Jill went up the hill.

The words and and so are grammatical conjunctions joining the sentences (A) and (B) to form the compound sentences (C) and (D). The and in (C) is a logical connective, since the truth of (C) is completely determined by (A) and (B): it would make no sense to affirm (A) and (B) but deny (C). However, so in (D) is not a logical connective, since it would be quite reasonable to affirm (A) and (B) but deny (D): perhaps, after all, Jill went up the hill to fetch a pail of water, not because Jack had gone up the hill at all.
Various English words and word pairs express logical connectives, and some of them are synonymous. Examples are:


Word
Connective
Symbol
Logical Gate


and
conjunction
"∧"
AND


and then
conjunction
"∧"
AND


and then within
conjunction
"∧"
AND


or
disjunction
"∨"
OR


either, but not both
exclusive disjunction
"⊻"
XOR


implies
implication
"→" "←"



if...then
implication
"→" "←"



if and only if
biconditional
"↔"
XNOR


only if
implication
"→" "←"



just in case
biconditional
"↔"
XNOR


but
conjunction
"∧"
AND


however
conjunction
"∧"
AND


not both
alternative denial
"|"
NAND


neither...nor
joint denial
"↓"
NOR


not
negation
"¬"
NOT


it is false that
negation
"¬"
NOT


it is not the case that
negation
"¬"
NOT


although
conjunction
"∧"
AND


even though
conjunction
"∧"
AND


therefore
implication
"→" "←"



so
implication
"→" "←"



that is to say
biconditional
"↔"
XNOR


furthermore
conjunction
"∧"
AND


Formal languages[edit]
In formal languages, truth functions are represented by unambiguous symbols. These symbols are called "logical connectives", "logical operators", "propositional operators", or, in classical logic, "truth-functional connectives". See well-formed formula for the rules which allow new well-formed formulas to be constructed by joining other well-formed formulas using truth-functional connectives.
Logical connectives can be used to link more than two statements, so one can speak about "n-ary logical connective".
Common logical connectives[edit]


Name / Symbol
Truth table
Venn
diagram


P =
0
1


Truth/Tautology
⊤
 
1
1



Proposition P

 
0
1



False/Contradiction
⊥
 
0
0



Negation
¬
 
1
0



Binary connectives
P =
0
0
1
1


 
Q =
0
1
0
1


Conjunction
∧

0
0
0
1



Alternative denial
↑

1
1
1
0



Disjunction
∨

0
1
1
1



Joint denial
↓

1
0
0
0



Material conditional
→

1
1
0
1



Exclusive or




↮


{\displaystyle \nleftrightarrow }



0
1
1
0



Biconditional
↔

1
0
0
1



Converse implication
←

1
0
1
1



Proposition P


0
0
1
1



Proposition Q


0
1
0
1



More information


List of common logical connectives[edit]
Commonly used logical connectives include

Negation (not): ¬ , N (prefix), ~
Conjunction (and): ∧ , K (prefix), & , ∙
Disjunction (or): ∨, A (prefix)
Material implication (if...then): → , C (prefix), ⇒ , ⊃
Biconditional (if and only if): ↔ , E (prefix), ≡ , =

Alternative names for biconditional are "iff", "xnor" and "bi-implication".
For example, the meaning of the statements it is raining and I am indoors is transformed when the two are combined with logical connectives. For statement P = It is raining and Q = I am indoors:

It is not raining (



¬


{\displaystyle \neg }

P)
It is raining and I am indoors (



P
∧
Q


{\displaystyle P\wedge Q}

)
It is raining or I am indoors (



P
∨
Q


{\displaystyle P\lor Q}

)
If it is raining, then I am indoors (



P
→
Q


{\displaystyle P\rightarrow Q}

)
If I am indoors, then it is raining (



Q
→
P


{\displaystyle Q\rightarrow P}

)
I am indoors if and only if it is raining (



P
↔
Q


{\displaystyle P\leftrightarrow Q}

)

It is also common to consider the always true formula and the always false formula to be connective:

True formula (⊤, 1, V [prefix], or T)
False formula (⊥, 0, O [prefix], or F)

History of notations[edit]

Negation: the symbol ¬ appeared in Heyting in 1929.[2][3] (compare to Frege's symbol  in his Begriffsschrift); the symbol ~ appeared in Russell in 1908;[4] an alternative notation is to add an horizontal line on top of the formula, as in 





P
¯




{\displaystyle {\overline {P}}}

; another alternative notation is to use a prime symbol as in P'.
Conjunction: the symbol ∧ appeared in Heyting in 1929[2] (compare to Peano's use of the set-theoretic notation of intersection ∩[5]); & appeared at least in Schönfinkel in 1924;[6] . comes from Boole's interpretation of logic as an elementary algebra.
Disjunction: the symbol ∨ appeared in Russell in 1908[4] (compare to Peano's use of the set-theoretic notation of union ∪); the symbol + is also used, in spite of the ambiguity coming from the fact that the + of ordinary elementary algebra is an exclusive or when interpreted logically in a two-element ring; punctually in the history a + together with a dot in the lower right corner has been used by Peirce,[7]
Implication: the symbol → can be seen in Hilbert in 1917;[8] ⊃ was used by Russell in 1908[4] (compare to Peano's inverted C notation); ⇒ was used in Vax.[9]
Biconditional: the symbol ≡ was used at least by Russell in 1908;[4] ↔ was used at least by Tarski in 1940;[10] ⇔ was used in Vax; other symbols appeared punctually in the history such as ⊃⊂ in Gentzen,[11] ~ in Schönfinkel[6] or ⊂⊃ in Chazal.[12]
True: the symbol 1 comes from Boole's interpretation of logic as an elementary algebra over the two-element Boolean algebra; other notations include 



⋀


{\displaystyle \bigwedge }

 to be found in Peano.
False: the symbol 0 comes also from Boole's interpretation of logic as a ring; other notations include 



⋁


{\displaystyle \bigvee }

 to be found in Peano.

Some authors used letters for connectives at some time of the history: u. for conjunction (German's "und" for "and") and o. for disjunction (German's "oder" for "or") in earlier works by Hilbert (1904); Np for negation, Kpq for conjunction, Dpq for alternative denial, Apq for disjunction, Xpq for joint denial, Cpq for implication, Epq for biconditional in Łukasiewicz (1929);[13] cf. Polish notation.
Redundancy[edit]
Such a logical connective as converse implication "←" is actually the same as material conditional with swapped arguments; thus, the symbol for converse implication is redundant. In some logical calculi (notably, in classical logic) certain essentially different compound statements are logically equivalent. A less trivial example of a redundancy is the classical equivalence between ¬P ∨ Q and P → Q. Therefore, a classical-based logical system does not need the conditional operator "→" if "¬" (not) and "∨" (or) are already in use, or may use the "→" only as a syntactic sugar for a compound having one negation and one disjunction.
There are sixteen Boolean functions associating the input truth values P and Q with four-digit binary outputs.[14] These correspond to possible choices of binary logical connectives for classical logic. Different implementations of classical logic can choose different functionally complete subsets of connectives.
One approach is to choose a minimal set, and define other connectives by some logical form, as in the example with the material conditional above. The following are the minimal functionally complete sets of operators in classical logic whose arities do not exceed 2:

One element
{↑}, {↓}.
Two elements




{
∨
,
¬
}


{\displaystyle \{\vee ,\neg \}}

, 



{
∧
,
¬
}


{\displaystyle \{\wedge ,\neg \}}

, 



{
→
,
¬
}


{\displaystyle \{\to ,\neg \}}

, 



{
←
,
¬
}


{\displaystyle \{\gets ,\neg \}}

, 



{
→
,
⊥
}


{\displaystyle \{\to ,\bot \}}

, 



{
←
,
⊥
}


{\displaystyle \{\gets ,\bot \}}

, 



{
→
,
↮
}


{\displaystyle \{\to ,\nleftrightarrow \}}

, 



{
←
,
↮
}


{\displaystyle \{\gets ,\nleftrightarrow \}}

, 



{
→
,
↛
}


{\displaystyle \{\to ,\nrightarrow \}}

, 



{
→
,
↚
}


{\displaystyle \{\to ,\nleftarrow \}}

, 



{
←
,
↛
}


{\displaystyle \{\gets ,\nrightarrow \}}

, 



{
←
,
↚
}


{\displaystyle \{\gets ,\nleftarrow \}}

, 



{
↛
,
¬
}


{\displaystyle \{\nrightarrow ,\neg \}}

, 



{
↚
,
¬
}


{\displaystyle \{\nleftarrow ,\neg \}}

, 



{
↛
,
⊤
}


{\displaystyle \{\nrightarrow ,\top \}}

, 



{
↚
,
⊤
}


{\displaystyle \{\nleftarrow ,\top \}}

, 



{
↛
,
↔
}


{\displaystyle \{\nrightarrow ,\leftrightarrow \}}

, 



{
↚
,
↔
}


{\displaystyle \{\nleftarrow ,\leftrightarrow \}}

.
Three elements




{
∨
,
↔
,
⊥
}


{\displaystyle \{\lor ,\leftrightarrow ,\bot \}}

, 



{
∨
,
↔
,
↮
}


{\displaystyle \{\lor ,\leftrightarrow ,\nleftrightarrow \}}

, 



{
∨
,
↮
,
⊤
}


{\displaystyle \{\lor ,\nleftrightarrow ,\top \}}

, 



{
∧
,
↔
,
⊥
}


{\displaystyle \{\land ,\leftrightarrow ,\bot \}}

, 



{
∧
,
↔
,
↮
}


{\displaystyle \{\land ,\leftrightarrow ,\nleftrightarrow \}}

, 



{
∧
,
↮
,
⊤
}


{\displaystyle \{\land ,\nleftrightarrow ,\top \}}

.

See more details about functional completeness in classical logic at Functional completeness in truth function.
Another approach is to use with equal rights connectives of a certain convenient and functionally complete, but not minimal set. This approach requires more propositional axioms, and each equivalence between logical forms must be either an axiom or provable as a theorem.
The situation, however, is more complicated in intuitionistic logic. Of its five connectives, {∧, ∨, →, ¬, ⊥}, only negation "¬" can be reduced to other connectives (see details). Neither conjunction, disjunction, nor material conditional has an equivalent form constructed of the other four logical connectives.
Properties[edit]
Some logical connectives possess properties which may be expressed in the theorems containing the connective. Some of those properties that a logical connective may have are:

Associativity: Within an expression containing two or more of the same associative connectives in a row, the order of the operations does not matter as long as the sequence of the operands is not changed.
Commutativity: The operands of the connective may be swapped preserving logical equivalence to the original expression.
Distributivity: A connective denoted by · distributes over another connective denoted by +, if a · (b + c) = (a · b) + (a · c) for all operands a, b, c.
Idempotence: Whenever the operands of the operation are the same, the compound is logically equivalent to the operand.
Absorption: A pair of connectives ∧, ∨ satisfies the absorption law if 



a
∧
(
a
∨
b
)
=
a


{\displaystyle a\land (a\lor b)=a}

 for all operands a, b.
Monotonicity: If f(a1, ..., an) ≤ f(b1, ..., bn) for all a1, ..., an, b1, ..., bn ∈ {0,1} such that a1 ≤ b1, a2 ≤ b2, ..., an ≤ bn. E.g., ∨, ∧, ⊤, ⊥.
Affinity: Each variable always makes a difference in the truth-value of the operation or it never makes a difference. E.g., ¬, ↔, 



↮


{\displaystyle \nleftrightarrow }

, ⊤, ⊥.
Duality: To read the truth-value assignments for the operation from top to bottom on its truth table is the same as taking the complement of reading the table of the same or another connective from bottom to top. Without resorting to truth tables it may be formulated as g̃(¬a1, ..., ¬an) = ¬g(a1, ..., an). E.g., ¬.
Truth-preserving: The compound all those argument are tautologies is a tautology itself. E.g., ∨, ∧, ⊤, →, ↔, ⊂. (see validity)
Falsehood-preserving: The compound all those argument are contradictions is a contradiction itself. E.g., ∨, ∧, 



↮


{\displaystyle \nleftrightarrow }

, ⊥, ⊄, ⊅. (see validity)
Involutivity (for unary connectives): f(f(a)) = a. E.g. negation in classical logic.

For classical and intuitionistic logic, the "=" symbol means that corresponding implications "…→…" and "…←…" for logical compounds can be both proved as theorems, and the "≤" symbol means that "…→…" for logical compounds is a consequence of corresponding "…→…" connectives for propositional variables. Some many-valued logics may have incompatible definitions of equivalence and order (entailment).
Both conjunction and disjunction are associative, commutative and idempotent in classical logic, most varieties of many-valued logic and intuitionistic logic. The same is true about distributivity of conjunction over disjunction and disjunction over conjunction, as well as for the absorption law.
In classical logic and some varieties of many-valued logic, conjunction and disjunction are dual, and negation is self-dual, the latter is also self-dual in intuitionistic logic.




This section needs expansion. You can help by adding to it. (March 2012)



Order of precedence[edit]
As a way of reducing the number of necessary parentheses, one may introduce precedence rules: ¬ has higher precedence than ∧, ∧ higher than ∨, and ∨ higher than →. So for example, 



P
∨
Q
∧

¬
R

→
S


{\displaystyle P\vee Q\wedge {\neg R}\rightarrow S}

 is short for 



(
P
∨
(
Q
∧
(
¬
R
)
)
)
→
S


{\displaystyle (P\vee (Q\wedge (\neg R)))\rightarrow S}

.
Here is a table that shows a commonly used precedence of logical operators.[15]










Operator




Precedence





¬


1




∧


2




∨


3




→


4




↔


5






{\displaystyle {\begin{array}{c|c}{\text{Operator}}&{\text{Precedence}}\\\hline \neg &1\\\land &2\\\vee &3\\\to &4\\\leftrightarrow &5\end{array}}}



However, not all compilers use the same order; for instance, an ordering in which disjunction is lower precedence than implication or bi-implication has also been used.[16] Sometimes precedence between conjunction and disjunction is unspecified requiring to provide it explicitly in given formula with parentheses. The order of precedence determines which connective is the "main connective" when interpreting a non-atomic formula.
Computer science[edit]




This section needs expansion. You can help by adding to it. (March 2012)



A truth-functional approach to logical operators is implemented as logic gates in digital circuits. Practically all digital circuits (the major exception is DRAM) are built up from NAND, NOR, NOT, and transmission gates; see more details in Truth function in computer science. Logical operators over bit vectors (corresponding to finite Boolean algebras) are bitwise operations.
But not every usage of a logical connective in computer programming has a Boolean semantic. For example, lazy evaluation is sometimes implemented for P ∧ Q and P ∨ Q, so these connectives are not commutative if some of expressions P, Q has side effects. Also, a conditional, which in some sense corresponds to the material conditional connective, is essentially non-Boolean because for if (P) then Q; the consequent Q is not executed if the antecedent P is false (although a compound as a whole is successful ≈ "true" in such case). This is closer to intuitionist and constructivist views on the material conditional, rather than to classical logic's ones.
See also[edit]





Boolean domain
Boolean function
Boolean logic
Boolean-valued function
List of Boolean algebra topics





Logic portal
Thinking portal



Logical constant
Modal operator
Propositional calculus
Truth function
Truth table
Truth values





Notes[edit]



^ Cogwheel. "What is the difference between logical and conditional /operator/". Stack Overflow. Retrieved 9 April 2015. 
^ a b Heyting (1929) Die formalen Regeln der intuitionistischen Logik.
^ Denis Roegel (2002), Petit panorama des notations logiques du 20e siècle (see chart on page 2).
^ a b c d Russell (1908) Mathematical logic as based on the theory of types (American Journal of Mathematics 30, p222–262, also in From Frege to Gödel edited by van Heijenoort).
^ Peano (1889) Arithmetices principia, nova methodo exposita.
^ a b Schönfinkel (1924) Über die Bausteine der mathematischen Logik, translated as On the building blocks of mathematical logic in From Frege to Gödel edited by van Heijenoort.
^ Peirce (1867) On an improvement in Boole's calculus of logic.
^ Hilbert (1917/1918) Prinzipien der Mathematik (Bernays' course notes).
^ Vax (1982) Lexique logique, Presses Universitaires de France.
^ Tarski (1940) Introduction to logic and to the methodology of deductive sciences.
^ Gentzen (1934) Untersuchungen über das logische Schließen.
^ Chazal (1996) : Éléments de logique formelle.
^ See Roegel
^ Bocheński (1959), A Précis of Mathematical Logic, passim.
^ O'Donnell, John; Hall, Cordelia; Page, Rex (2007), Discrete Mathematics Using a Computer, Springer, p. 120, ISBN 9781846285981 .
^ Jackson, Daniel (2012), Software Abstractions: Logic, Language, and Analysis, MIT Press, p. 263, ISBN 9780262017152 .



References[edit]

Bocheński, Józef Maria (1959), A Précis of Mathematical Logic, translated from the French and German editions by Otto Bird, D. Reidel, Dordrecht, South Holland.
Enderton, Herbert (2001), A Mathematical Introduction to Logic (2nd ed.), Boston, MA: Academic Press, ISBN 978-0-12-238452-3 
Gamut, L.T.F (1991), "Chapter 2", Logic, Language and Meaning, 1, University of Chicago Press, pp. 54–64, OCLC 21372380 
Rautenberg, W. (2010), A Concise Introduction to Mathematical Logic (3rd ed.), New York: Springer Science+Business Media, doi:10.1007/978-1-4419-1221-3, ISBN 978-1-4419-1220-6 .

Further reading[edit]

Lloyd Humberstone (2011). The Connectives. MIT Press. ISBN 978-0-262-01654-4. 

External links[edit]

Hazewinkel, Michiel, ed. (2001) [1994], "Propositional connective", Encyclopedia of Mathematics, Springer Science+Business Media B.V. / Kluwer Academic Publishers, ISBN 978-1-55608-010-4 
Lloyd Humberstone (2010), "Sentence Connectives in Formal Logic", Stanford Encyclopedia of Philosophy (An abstract algebraic logic approach to connectives.)
John MacFarlane (2005), "Logical constants", Stanford Encyclopedia of Philosophy.







v
t
e


Logical connectives






Tautology/True 



⊤


{\displaystyle \top }













Alternative denial (NAND gate) 



↑


{\displaystyle \uparrow }


Converse implication 



←


{\displaystyle \leftarrow }


Implication (IMPLY gate) 



→


{\displaystyle \rightarrow }


Disjunction (OR gate) 



∨


{\displaystyle \lor }










Negation (NOT gate) 



¬


{\displaystyle \neg }


Exclusive or (XOR gate) 



↮


{\displaystyle \nleftrightarrow }


Biconditional (XNOR gate) 



↔


{\displaystyle \leftrightarrow }


Statement








Joint denial (NOR gate) 



↓


{\displaystyle \downarrow }


Nonimplication 



↛


{\displaystyle \nrightarrow }


Converse nonimplication 



↚


{\displaystyle \nleftarrow }


Conjunction (AND gate) 



∧


{\displaystyle \land }










Contradiction/False 



⊥


{\displaystyle \bot }














v
t
e


Mathematical logic



General



Formal language
Formation rule
Formal proof
Formal semantics
Well-formed formula
Set
Element
Class
Classical logic
Axiom
Rule of inference
Relation
Theorem
Logical consequence
Type theory
Symbol
Syntax
Theory





Systems



Formal system
Deductive system
Axiomatic system
Hilbert style systems
Natural deduction
Sequent calculus





Traditional logic



Proposition
Inference
Argument
Validity
Cogency
Syllogism
Square of opposition
Venn diagram






Propositional
calculus
Boolean logic




Boolean functions
Propositional calculus
Propositional formula
Logical connectives
Truth tables
Many-valued logic





Predicate logic



First-order
Quantifiers
Predicate
Second-order
Monadic predicate calculus





Naive set theory



Set
Empty set
Element
Enumeration
Extensionality
Finite set
Infinite set
Subset
Power set
Countable set
Uncountable set
Recursive set
Domain
Codomain
Image
Map
Function
Relation
Ordered pair





Set theory



Foundations of mathematics
Zermelo–Fraenkel set theory
Axiom of choice
General set theory
Kripke–Platek set theory
Von Neumann–Bernays–Gödel set theory
Morse–Kelley set theory
Tarski–Grothendieck set theory





Model theory



Model
Interpretation
Non-standard model
Finite model theory
Truth value
Validity





Proof theory



Formal proof
Deductive system
Formal system
Theorem
Logical consequence
Rule of inference
Syntax





Computability
theory



Recursion
Recursive set
Recursively enumerable set
Decision problem
Church–Turing thesis
Computable function
Primitive recursive function











						Retrieved from "https://en.wikipedia.org/w/index.php?title=Logical_connective&oldid=811346022"					Categories: Logical connectivesLogic symbolsHidden categories: Wikipedia articles that are too technical from April 2014All articles that are too technicalArticles needing expert attention from April 2014All articles needing expert attentionArticles to be expanded from March 2012All articles to be expandedArticles using small message boxes