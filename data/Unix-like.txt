



Evolution of Unix and Unix-like systems, starting in 1969


A Unix-like (sometimes referred to as UN*X or *nix) operating system is one that behaves in a manner similar to a Unix system, while not necessarily conforming to or being certified to any version of the Single UNIX Specification. A Unix-like application is one that behaves like the corresponding Unix command or shell. There is no standard for defining the term, and some difference of opinion is possible as to the degree to which a given operating system or application is "Unix-like".
The term can include free and open-source operating systems inspired by Bell Labs' Unix or designed to emulate its features, commercial and proprietary work-alikes, and even versions based on the licensed UNIX source code (which may be sufficiently "Unix-like" to pass certification and bear the "UNIX" trademark).



Contents


1 Definition
2 History
3 Categories
4 Compatibility layers
5 See also
6 References
7 External links



Definition[edit]
The Open Group owns the UNIX trademark and administers the Single UNIX Specification, with the "UNIX" name being used as a certification mark. They do not approve of the construction "Unix-like", and consider it a misuse of their trademark. Their guidelines require "UNIX" to be presented in uppercase or otherwise distinguished from the surrounding text, strongly encourage using it as a branding adjective for a generic word such as "system", and discourage its use in hyphenated phrases.[1]
Other parties frequently treat "Unix" as a genericized trademark. Some add a wildcard character to the name to make an abbreviation like "Un*x"[2] or "*nix", since Unix-like systems often have Unix-like names such as AIX, A/UX, HP-UX, IRIX, Linux, Minix, Ultrix, Xenix, Xinu, and XNU. These patterns do not literally match many system names, but are still generally recognized to refer to any UNIX descendant or work-alike system, even those with completely dissimilar names such as Darwin/macOS, illumos/Solaris or FreeBSD.
In 2007, Wayne R. Gray sued to dispute the status of UNIX as a trademark, but lost his case, and lost again on appeal, with the court upholding the trademark and its ownership.[3][4]
History[edit]






This section needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (April 2010) (Learn how and when to remove this template message)







Simplified history of Unix-like operating systems.


"Unix-like" systems started to appear in the late 1970s and early 1980s. Many proprietary versions, such as Idris (1978), UNOS (1982), Coherent (1983), and UniFlex (1985), aimed to provide businesses with the functionality available to academic users of UNIX.
When AT&T allowed relatively inexpensive commercial binary sub-licensing of UNIX in 1979, a variety of proprietary systems were developed based on it, including AIX, HP-UX, IRIX, SunOS, Tru64, Ultrix, and Xenix. These largely displaced the proprietary clones. Growing incompatibility among these systems led to the creation of interoperability standards, including POSIX and the Single UNIX Specification.
Various free, low-cost, and unrestricted substitutes for UNIX emerged in the 1980s and 1990s, including 4.4BSD, Linux, and Minix. Some of these have in turn been the basis for commercial "Unix-like" systems, such as BSD/OS and macOS. Several versions of (Mac) OS X/macOS running on Intel-based Mac computers have been certified under the Single UNIX Specification.[5][6][7][8][9][10][11] The BSD variants are descendants of UNIX developed by the University of California at Berkeley with UNIX source code from Bell Labs. However, the BSD code base has evolved since then, replacing all of the AT&T code. Since the BSD variants are not certified as compliant with the Single UNIX Specification, they are referred to as "UNIX-like" rather than "UNIX".
Categories[edit]
Dennis Ritchie, one of the original creators of Unix, expressed his opinion that Unix-like systems such as Linux are de facto Unix systems.[12] Eric S. Raymond and Rob Landley have suggested that there are three kinds of Unix-like systems:[13]

Genetic UNIX
Those systems with a historical connection to the AT&T codebase. Most (but not all) commercial UNIX systems fall into this category. So do the BSD systems, which are descendants of work done at the University of California, Berkeley in the late 1970s and early 1980s. Some of these systems have no original AT&T code but can still trace their ancestry to AT&T designs.


Trademark or branded UNIX
These systems‍—‌largely commercial in nature‍—‌have been determined by the Open Group to meet the Single UNIX Specification and are allowed to carry the UNIX name. Most such systems are commercial derivatives of the System V code base in one form or another, although Apple macOS 10.5 and later is a BSD variant that has been certified, and a few other systems (such as IBM z/OS) earned the trademark through a POSIX compatibility layer and are not otherwise inherently Unix systems. Many ancient UNIX systems no longer meet this definition.


Functional UNIX
Broadly, any Unix-like system that behaves in a manner roughly consistent with the UNIX specification, including having a "program which manages your login and command line sessions";[14] more specifically, this can refer to systems such as Linux or Minix that behave similarly to a UNIX system but have no genetic or trademark connection to the AT&T code base. Most free/open-source implementations of the UNIX design, whether genetic UNIX or not, fall into the restricted definition of this third category due to the expense of obtaining Open Group certification, which costs thousands of dollars[citation needed] for commercial closed source systems.
Around 2001, Linux was given the opportunity to get a certification including free help from the POSIX chair Andrew Josey for the symbolic price of one dollar.[citation needed] There have been some activities to make Linux POSIX-compliant, with Josey having prepared a list of differences between the POSIX standard and the Linux Standard Base specification,[15] but in August 2005, this project was shut down because of missing interest at the LSB work group.[citation needed]

Compatibility layers[edit]
Some non-Unix-like operating systems provide a Unix-like compatibility layer, with variable degrees of Unix-like functionality.

IBM z/OS's UNIX System Services is sufficiently complete to be certified as trademark UNIX.
Cygwin and MSYS both provide a GNU environment on top of the Microsoft Windows user API, sufficient for most common open source software to be compiled and run.
The MKS Toolkit and UWIN are comprehensive interoperability tools which allow the porting of Unix programmes to Windows.
Windows NT type systems have a Posix environmental subsystem
Subsystem for Unix-based Applications (previously Interix) provides Unix-like functionality as a Windows NT subsystem (discontinued).
Windows Subsystem for Linux provides a Linux-compatible kernel interface developed by Microsoft and containing no Linux code, with Ubuntu user-mode binaries running on top of it.[16]

Other means of Windows-Unix interoperability include:

The above Windows packages can be used with various X servers for Windows
Hummingbird Connectivity provides several ways for Windows machines to connect to Unix and Linux machines, from terminal emulators to X clients and servers, and others
The Windows Resource Kits for versions of Windows NT include a Bourne Shell, some command-line tools, and a version of Perl
The Hamilton C Shell is a version of csh written specifically for Windows.

See also[edit]


Information technology portal



Berkeley Software Distribution
Linux distribution
List of Linux distributions
List of Unix utilities
List of operating systems

References[edit]


^ "Legal: Trademark Guidelines". The Open Group. Archived from the original on October 2, 2013. Retrieved November 4, 2013. 
^ Eric S. Raymond; Guy L. Steele Jr. "UN*X". The Jargon File. Retrieved January 22, 2009. 
^ Gray v. Novell, X/Open Company, The SCO Group (11th Cir. January 7, 2011). Text
^ "More Wayne Gray. No! Again? Still?! Yes. He Wants to Reopen Discovery in the USPTO Dispute". Groklaw. April 22, 2011. Retrieved February 5, 2013. 
^ "Mac OS X Version 10.5 on Intel-based Macintosh computers". The Open Group. Retrieved December 4, 2014. 
^ "Mac OS X Version 10.6 on Intel-based Macintosh computers". The Open Group. Retrieved December 4, 2014. 
^ "Mac OS X Version 10.8 on Intel-based Macintosh computers". The Open Group. Retrieved December 4, 2014. 
^ "OS X Version 10.9 on Intel-based Macintosh computers". The Open Group. Retrieved December 4, 2014. 
^ "OS X version 10.10 Yosemite on Intel-based Mac computers". The Open Group. Retrieved October 23, 2015. 
^ "OS X version 10.11 El Capitan on Intel-based Mac computers". The Open Group. Retrieved October 23, 2015. 
^ "macOS version 10.12 Sierra on Intel-based Mac computers". The Open Group. Retrieved October 13, 2016. 
^ Interview with Dennis M. Ritchie Manuel Benet, LinuxFocus, July 1999
^ The meaning of 'Unix' Eric Raymond and Rob Landley, OSI Position Paper on the SCO-vs.-IBM Complaint
^ "Introduction to UNIX - Part 1: Basic Concepts". Retrieved April 4, 2014. 
^ Andrew Josey (August 20, 2005). "Conflicts between ISO/IEC 9945 (POSIX) and the Linux Standard Base". The Open Group. Retrieved July 23, 2012. 
^ BASH Running in Ubuntu on Windows - MSDN


External links[edit]

Unix-like Definition, by The Linux Information Project (LINFO)
UNIX history –  a history time line graph of most UNIX and Unix-like systems by Éric Lévénez
Grokline's UNIX Ownership History Project –  a project to map out the technical history of UNIX and Unix-like systems at the Wayback Machine (archived June 22, 2004)







v
t
e


Unix and Unix-like operating systems






BSD

386BSD

FreeBSD
NetBSD
OpenBSD
DragonFly BSD


NeXTSTEP
Darwin

macOS
iOS


SunOS
Ultrix


Coherent
GNU
Linux

Android
Chrome OS


LynxOS
MINIX
QNX

BlackBerry 10


Research Unix
System V

A/UX
AIX
HP-UX
illumos
IRIX
OpenServer
Solaris
Tru64 UNIX
UnixWare


Xenix
more...








 Category
 Commons
 Book












v
t
e


Unix shells






Bash
Bourne
Almquist
csh
es
fish
Hamilton
Korn
PWB
rc
sash
tcsh
Thompson
Wish
Zsh












v
t
e


Unix command-line interface programs and shell builtins



File system



cat
chmod
chown
chgrp
cksum
cmp
cp
dd
du
df
file
fuser
ln
ls
mkdir
mv
pax
pwd
rm
rmdir
split
tee
touch
type
umask





Processes



at
bg
crontab
fg
kill
nice
ps
time





User environment



env
exit
logname
mesg
talk
tput
uname
who
write





Text processing



awk
basename
comm
csplit
cut
diff
dirname
ed
ex
fold
head
iconv
join
m4
more
nl
paste
printf
sed
sort
strings
tail
tr
uniq
vi
wc
xargs





Shell builtins



alias
cd
echo
test
unset
wait





Searching



find
grep





Documentation



man





Software development



ar
ctags
lex
make
nm
strip
yacc





Miscellaneous



bc
cal
expr
lp
od
sleep
true and false








 Categories

Standard Unix programs
Unix SUS2008 utilities


 List












v
t
e


Operating systems



General



Advocacy
Comparison
Forensic engineering
History
Hobbyist development
List
Timeline
Usage share





Kernel




Architectures



Exokernel
Hybrid
Microkernel
Monolithic
Rump kernel
Unikernel





Components



Device driver
Loadable kernel module
Microkernel
User space








Process management




Concepts



Context switch
Interrupt
IPC
Process
Process control block
Real-time
Thread
Time-sharing





Scheduling
algorithms



Computer multitasking
Fixed-priority preemptive
Multilevel feedback queue
Preemptive
Round-robin
Shortest job next








Memory management and
resource protection



Bus error
General protection fault
Memory protection
Paging
Protection ring
Segmentation fault
Virtual memory





Storage access and
file systems



Boot loader
Defragmentation
Device file
File attribute
Inode
Journal
Partition
Virtual file system
Virtual tape library





List



AmigaOS
Android
BeOS
BSD
Chrome OS
CP/M
DOS
GNU
Haiku
illumos
IncludeOS
iOS
Linux
Macintosh

Classic Mac OS
macOS


MINIX
MorphOS
MUSIC/SP
Nemesis
NOS
OpenVMS
ORVYL
OS/2
OSv
Pick
QNX
ReactOS
RISC OS
RSTS/E
RSX-11
RT-11
Solaris
TOPS-10/TOPS-20
TPF
Unix
Visi On
VM/CMS
VS/9
Windows
Xinu
z/OS





Miscellaneous concepts



API
Computer network
HAL
Live CD
Live USB
OS shell

CLI
GUI
TUI
VUI


PXE











						Retrieved from "https://en.wikipedia.org/w/index.php?title=Unix-like&oldid=811368022"					Categories: Unix shellsUnixUnix variantsHidden categories: Use mdy dates from March 2014Articles needing additional references from April 2010All articles needing additional referencesAll articles with unsourced statementsArticles with unsourced statements from July 2012Webarchive template wayback links