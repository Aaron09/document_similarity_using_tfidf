

part series


science





formal




formal logic
mathematics



mathematical statistics
theoretical computer science



game theory
decision theory




information theory
systems theory
control theory










physical




physics





classical
modern
applied




theoretical
experimental
computational




mechanics


classical
analytical
continuum
fluid
solid







electromagnetism
thermodynamics




molecular
atomic
nuclear
particle




condensed matter
plasma



quantum mechanics introduction
quantum field theory



special relativity
general relativity



string theory




chemistry





inorganic
organic
analytical
physical




acidbase
supramolecular
solidstate
nuclear
environmental
sustainable green



theoretical



astrochemistry
biochemistry
crystallography
food chemistry
geochemistry
materials science
photochemistry
radiochemistry
stereochemistry
surface science





earth science





climatology
ecology
edaphology
environmental science
geodesy
geography physical
geology
geomorphology
geophysics
glaciology
hydrology
limnology
meteorology
oceanography
paleoclimatology
paleoecology
palynology
pedology
volcanology





astronomy





astrophysics
cosmology
galactic astronomy
planetary geology
planetary science
stellar astronomy













life




biology





anatomy
astrobiology
biochemistry
biogeography
biological engineering
biophysics
behavioral neuroscience
biotechnology
botany
cell biology
conservation biology
cryobiology
developmental biology
ecology
ethnobiology
ethology
evolutionary biology introduction
genetics introduction
gerontology
immunology
limnology
marine biology
microbiology
molecular biology
neuroscience
paleontology
parasitology
physiology
radiobiology
soil biology
sociobiology
systematics
toxicology
zoology













social




anthropology
archaeology
criminology
demography
economics
geography human
history
international relations
jurisprudence
linguistics
pedagogy
political science
psychology
science education
sociology










applied




engineering





aerospace
agricultural
biological
biomedical
chemical
civil
computer science engineering




electrical
fire protection
genetic
industrial
mechanical
military
mining
nuclear
operations research
robotics
software






healthcare





medicine
veterinary
dentistry
midwifery
epidemiology
pharmacy
nursing













interdisciplinary




applied physics
artificial intelligence
bioethics
bioinformatics
biomedical engineering
biostatistics
cognitive science
complex systems
computational linguistics
cultural studies
cybernetics
environmental science
environmental social science
environmental studies
ethnic studies
evolutionary psychology




forensics
forestry
library science



mathematical theoretical biology



mathematical physics
military science
network science
neural engineering
neuroscience
science studies
scientific modelling
semiotics
sociobiology
statistics
systems science
urban planning
science













philosophy
history







basic research
citizen science
fringe science
protoscience
pseudoscience
freedom
policy
funding
method
sociology
technoscience









outline
portal
category



























computer science deals theoretical foundations information computation together practical techniques implementation application foundations


computer science study theory experimentation engineering form basics design computers scientific practical approach computation applications systematic study feasibility structure expression mechanization methodical procedures algorithms underlie acquisition representation processing storage communication access information alternate succinct definition computer science study automating algorithmic processes scale computer scientist specializes theory computation design computational systems1
fields divided variety theoretical practical disciplines fields computational complexity theory explores fundamental properties computational intractable problems highly abstract fields computer graphics emphasize realworld visual applications fields still focus challenges implementing computation example programming language theory considers various approaches description computation study computer programming investigates various aspects programming language complex systems human–computer interaction considers challenges making computers computations useful usable universally accessible humans



contents


history

contributions


etymology
philosophy
areas computer science

theoretical computer science

data structures algorithms
theory computation
information coding theory
programming language theory
formal methods


computer systems

computer architecture computer engineering
computer performance analysis
concurrent parallel distributed systems
computer networks
computer security cryptography
databases


computer applications

computer graphics visualization
humancomputer interaction
scientific computing
artificial intelligence


software engineering


great insights computer science
academia
education
also
notes
references
reading
external links



historyedit
main article history computer science


history computing


hardware




hardware 1960
hardware 1960s present




software




software
unix
free software opensource software




computer science




artificial intelligence
compiler construction
computer science
operating systems
programming languages
prominent pioneers
software engineering




modern concepts




generalpurpose cpus
graphical user interface
internet
laptops
personal computers
video games
world wide




country




bulgaria
poland
romania
soviet bloc
soviet union
yugoslavia




timeline computing




1950
1950–1979
1980–1989
1990–1999
2000–2009
2010–2019
timelines






category



















charles babbage sometimes referred father computing2






lovelace credited writing first algorithm intended processing computer3


earliest foundations would become computer science predate invention modern digital computer machines calculating fixed numerical tasks abacus existed since antiquity aiding computations multiplication division algorithms performing computations existed since antiquity even development sophisticated computing equipment
wilhelm schickard designed constructed first working mechanical calculator 16234 1673 gottfried leibniz demonstrated digital mechanical calculator called stepped reckoner5 considered first computer scientist information theorist among reasons documenting binary number system 1820 thomas colmar launched mechanical calculator industrynote released simplified arithmometer first calculating machine strong enough reliable enough used daily office environment charles babbage started design first automatic mechanical calculator difference engine 1822 eventually gave idea first programmable mechanical calculator analytical engine6 started developing machine 1834 less years sketched many salient features modern computer7 crucial step adoption punched card system derived jacquard loom7 making infinitely programmablenote 1843 translation french article analytical engine lovelace wrote many notes included algorithm compute bernoulli numbers considered first computer program8 around 1885 herman hollerith invented tabulator used punched cards process statistical information eventually company became part 1937 hundred years babbages impossible dream howard aiken convinced making kinds punched card equipment also calculator business9 develop giant programmable calculator asccharvard mark based babbages analytical engine used cards central computing unit machine finished hailed babbages dream come true10
1940s powerful computing machines developed term computer came refer machines rather human predecessors11 became clear computers could used mathematical calculations field computer science broadened study computation general computer science began established distinct academic discipline 1950s early 1960s1213 worlds first computer science degree program cambridge diploma computer science began university cambridge computer laboratory 1953 first computer science degree program united states formed purdue university 196214 since practical computers became available many applications computing become distinct areas study rights
although many initially believed impossible computers could actually scientific field study late fifties gradually became accepted among greater academic population1516 wellknown brand formed part computer science revolution time short international business machines released 70417 later 70918 computers widely used exploration period devices still working computer frustrating misplaced much letter instruction program would crash would start whole process again15 late 1950s computer science discipline much developmental stages issues commonplace16
time seen significant improvements usability effectiveness computing technology19 modern society seen significant shift users computer technology usage experts professionals nearubiquitous user base initially computers quite costly degree human needed efficient use—in part professional computer operators computer adoption became widespread affordable less human assistance needed common usage
also history computing history informatics
contributionsedit




german military used enigma machine shown world communications wanted kept secret largescale decryption enigma traffic bletchley park important factor contributed allied victory wwii20


despite short history formal academic discipline computer science made number fundamental contributions science society—in fact along electronics founding science current epoch human history called information driver information revolution seen third major leap human technological progress industrial revolution 1750–1850 agricultural revolution 8000–5000
contributions include

start digital revolution includes current information internet21
formal definition computation computability proof computationally unsolvable intractable problems22
concept programming language tool precise expression methodological information various levels abstraction23
cryptography breaking enigma code important factor contributing allied victory world ii20
scientific computing enabled practical evaluation processes situations great complexity well experimentation entirely software also enabled advanced study mind mapping human genome became possible human genome project21 distributed computing projects foldinghome explore protein folding
algorithmic trading increased efficiency liquidity financial markets using artificial intelligence machine learning statistical numerical techniques large scale24 high frequency algorithmic trading also exacerbate volatility25
computer graphics computergenerated imagery become ubiquitous modern entertainment particularly television cinema advertising animation video games even films feature explicit usually filmed digital cameras edited postprocessed using digital video editor2627
simulation various processes including computational fluid dynamics physical electrical electronic systems circuits well societies social situations notably games along habitats among many others modern computers enable optimization designs complete aircraft notable electrical electronic circuit design spice well software physical realization modified designs latter includes essential design software integrated circuitscitation needed
artificial intelligence becoming increasingly important gets efficient complex many applications seen home robotic vacuum cleaners also present video games modern battlefield drones antimissile systems squad support robots
humancomputer interaction combines novel algorithms design strategies enable rapid human performance error rates ease learning high satisfaction researchers ethnographic observation automated data collection understand user needs conduct usability tests refine designs innovations include direct manipulation selectable links touchscreen designs mobile applications virtual reality

etymologyedit
also informatics etymology
although first proposed 195616 term computer science appears 1959 article communications acm28 louis fein argues creation graduate school computer sciences analogous creation harvard business school 192129 justifying name arguing like management science subject applied interdisciplinary nature characteristics typical academic discipline28 efforts others numerical analyst george forsythe rewarded universities went create programs starting purdue 196230 despite name significant amount computer science involve study computers several alternative names proposed31 certain departments major universities prefer term computing science emphasize precisely difference danish scientist peter naur suggested term datalogy32 reflect fact scientific discipline revolves around data data treatment necessarily involving computers first scientific institution term department datalogy university copenhagen founded 1969 peter naur first professor datalogy term used mainly scandinavian countries alternative term also proposed naur data science used distinct field data analysis including statistics databases
also early days computing number terms practitioners field computing suggested communications acm—turingineer turologist flowchartsman applied metamathematician applied epistemologist33 three months later journal comptologist suggested followed next year hypologist34 term computics also suggested35 europe terms derived contracted translations expression automatic information informazione automatica italian information mathematics often used informatique french informatik german informatica italian dutch informática spanish portuguese informatika slavic languages hungarian pliroforiki πληροφορική means informatics greek similar words also adopted school informatics university edinburgh36 however informatics linked applied computing computing context another domain37
folkloric quotation often attributed to—but almost certainly first formulated by—edsger dijkstra states computer science computers astronomy telescopesnote design deployment computers computer systems generally considered province disciplines computer science example study computer hardware usually considered part computer engineering study commercial computer systems deployment often called information technology information systems however much crossfertilization ideas various computerrelated disciplines computer science research also often intersects disciplines philosophy cognitive science linguistics mathematics physics biology statistics logic
computer science considered much closer relationship mathematics many scientific disciplines observers saying computing mathematical science12 early computer science strongly influenced work mathematicians kurt gödel alan turing rózsa péter alonzo church continues useful interchange ideas fields areas mathematical logic category theory domain theory algebra16
relationship computer science software engineering contentious issue muddied disputes term software engineering means computer science defined38 david parnas taking relationship engineering science disciplines claimed principal focus computer science studying properties computation general principal focus software engineering design specific computations achieve practical goals making separate complementary disciplines39
academic political funding aspects computer science tend depend whether department formed mathematical emphasis engineering emphasis computer science departments mathematics emphasis numerical orientation consider alignment computational science types departments tend make efforts bridge field educationally across research
philosophyedit
main article philosophy computer science
number computer scientists argued distinction three separate paradigms computer science peter wegner argued paradigms science technology mathematics40 peter dennings working group argued theory abstraction modeling design41 amnon eden described rationalist paradigm treats computer science branch mathematics prevalent theoretical computer science mainly employs deductive reasoning technocratic paradigm might found engineering approaches prominently software engineering scientific paradigm approaches computerrelated artifacts empirical perspective natural sciences identifiable branches artificial intelligence42
areas computer scienceedit
information outline computer science
discipline computer science spans range topics theoretical studies algorithms limits computation practical issues implementing computing systems hardware software4344 csab formerly called computing sciences accreditation board—which made representatives association computing machinery ieee computer society ieee cs45—identifies four areas considers crucial discipline computer science theory computation algorithms data structures programming methodology languages computer elements architecture addition four areas csab also identifies fields software engineering artificial intelligence computer networking communication database systems parallel computation distributed computation human–computer interaction computer graphics operating systems numerical symbolic computation important areas computer science43
theoretical computer scienceedit
main article theoretical computer science
theoretical computer science mathematical abstract spirit derives motivation practical everyday computation understand nature computation consequence understanding provide efficient methodologies studies related mathematical logic formal concepts methods could considered theoretical computer science provided motivation clearly drawn field computing
data structures algorithmsedit
data structures algorithms study commonly used computational methods computational efficiency









analysis algorithms
algorithms
data structures
combinatorial optimization
computational geometry


theory computationedit
main article theory computation
according peter denning fundamental question underlying computer science efficiently automated12 theory computation focused answering fundamental questions computed amount resources required perform computations effort answer first question computability theory examines computational problems solvable various theoretical models computation second question addressed computational complexity theory studies time space costs associated different approaches solving multitude computational problems
famous problem millennium prize problems46 open problem theory computation





gnitirwterces



automata theory
computability theory
computational complexity theory
cryptography
quantum computing theory


information coding theoryedit
main articles information theory coding theory
information theory related quantification information developed claude shannon find fundamental limits signal processing operations compressing data reliably storing communicating data47 coding theory study properties codes systems converting information form another fitness specific application codes used data compression cryptography error detection correction recently also network coding codes studied purpose designing efficient reliable data transmission methods
programming language theoryedit
main article programming language theory
programming language theory branch computer science deals design implementation analysis characterization classification programming languages individual features falls within discipline computer science depending affecting mathematics software engineering linguistics active research area numerous dedicated academic journals















displaystyle gamma vdash xtextint






type theory
compiler design
programming languages


formal methodsedit
main article formal methods
formal methods particular kind mathematically based technique specification development verification software hardware systems formal methods software hardware design motivated expectation engineering disciplines performing appropriate mathematical analysis contribute reliability robustness design form important theoretical underpinning software engineering especially safety security involved formal methods useful adjunct software testing since help avoid errors also give framework testing industrial tool support required however high cost using formal methods means usually used development highintegrity lifecritical systems safety security utmost importance formal methods best described application fairly broad variety theoretical computer science fundamentals particular logic calculi formal languages automata theory program semantics also type systems algebraic data types problems software hardware specification verification
computer systemsedit
computer architecture computer engineeringedit
main articles computer architecture computer engineering
computer architecture digital computer organization conceptual design fundamental operational structure computer system focuses largely central processing unit performs internally accesses addresses memory48 field often involves disciplines computer engineering electrical engineering selecting interconnecting hardware components create computers meet functional performance cost goals







digital logic
microarchitecture
multiprocessing







ubiquitous computing
systems architecture
operating systems


computer performance analysisedit
main article computer performance
computer performance analysis study work flowing computers general goals improving throughput controlling response time using resources efficiently eliminating bottlenecks predicting performance anticipated peak loads49
concurrent parallel distributed systemsedit
main articles concurrency computer science distributed computing
concurrency property systems several computations executing simultaneously potentially interacting number mathematical models developed general concurrent computation including petri nets process calculi parallel random access machine model distributed system extends idea concurrency onto multiple computers connected network computers within distributed system private memory information often exchanged among achieve common goal
computer networksedit
main article computer network
branch computer science aims manage networks computers worldwide
computer security cryptographyedit
main articles computer security cryptography
computer security branch computer technology whose objective includes protection information unauthorized access disruption modification maintaining accessibility usability system intended users cryptography practice study hiding encryption therefore deciphering decryption information modern cryptography largely related computer science many encryption decryption algorithms based computational complexity
databasesedit
main article database
database intended organize store retrieve large amounts data easily digital databases managed using database management systems store create maintain search data database models query languages
computer applicationsedit
computer graphics visualizationedit
main article computer graphics computer science
computer graphics study digital visual contents involves synthesis manipulation image data study connected many fields computer science including computer vision image processing computational geometry heavily applied fields special effects video games
humancomputer interactionedit
main article humancomputer interaction
research develops theories principles guidelines user interface designers create satisfactory user experiences desktop laptop mobile devices
scientific computingedit
scientific computing computational science field study concerned constructing mathematical models quantitative analysis techniques using computers analyze solve scientific problems practical typically application computer simulation forms computation problems various scientific disciplines








numerical analysis
computational physics
computational chemistry
bioinformatics


artificial intelligenceedit
main article artificial intelligence
artificial intelligence aims required synthesize goalorientated processes problemsolving decisionmaking environmental adaptation learning communication found humans animals origins cybernetics dartmouth conference 1956 artificial intelligence research necessarily crossdisciplinary drawing areas expertise applied mathematics symbolic logic semiotics electrical engineering philosophy mind neurophysiology social intelligence associated popular mind robotic development main field practical application embedded component areas software development require computational understanding startingpoint late 1940s alan turings question computers think question remains effectively unanswered although turing test still used assess computer output scale human intelligence automation evaluative predictive tasks increasingly successful substitute human monitoring intervention domains computer application involving complex realworld data







machine learning
computer vision
image processing







pattern recognition
data mining
evolutionary computation







knowledge representation reasoning
natural language processing
robotics


software engineeringedit
main article software engineering
also computer programming
software engineering study designing implementing modifying software order ensure high quality affordable maintainable fast build systematic approach software design involving application engineering practices software software engineering deals organizing analyzing software—it doesnt deal creation manufacture software internal maintenance arrangement computer applications software engineers computer systems software engineers projected among fastest growing occupations 2008 2018
great insights computer scienceedit
philosopher computing bill rapaport noted three great insights computer science50

gottfried wilhelm leibnizs george booles alan turings claude shannons samuel morses insight objects computer deal order represent anythingnote




information computable problem represented using bistable pair flipflop easily distinguishable states onoff magnetizeddemagnetized highvoltagelowvoltage



also digital physics

alan turings insight five actions computer perform order anything




every algorithm expressed language computer consisting five basic instructions

move left location
move right location
read symbol current location
print current location
print current location





also turing machine

corrado böhm giuseppe jacopinis insight three ways combining actions complex ones needed order computer anything




three rules needed combine basic instructions complex ones

sequence first
selection suchandsuch case else
repetition suchandsuch case


note three rules boehms jacopinis insight simplified goto means elementary structured programming



also elementary function arithmetic friedmans grand conjecture
academiaedit
information list computer science conferences categorycomputer science journals
conferences important events computer science research conferences researchers public private sectors present recent work meet unlike academic fields computer science prestige conference papers greater journal publications5152 proposed explanation quick development relatively field requires rapid review distribution results task better handled conferences journals53
educationedit
since computer science relatively field widely taught schools universities academic subjects example 2014 codeorg estimated percent high schools united states offered computer science education54 2010 report association computing machinery computer science teachers association csta revealed states adopted significant education standards high school computer science55 however computer science education growing56 countries israel zealand south korea already included computer science respective national secondary education curriculum5758 several countries following suit59
countries significant gender computer science education example computer science degrees 2012 conferred women60 gender also exists western countries61 however parts world small nonexistent 2011 approximately half computer science degrees malaysia conferred women62 2001 women made computer science graduates guyana61
alsoedit
main article outline computer science


computer science portal




academic genealogy computer scientists
association computing machinery
computer science teachers association
informatics engineering informatics
list academic computer science departments
list computer scientists
list publications computer science
list pioneers computer science
list unsolved problems computer science
outline software engineering
technology transfer computer science
turing award

computer science wikipedia book

notesedit



1851
introduction punched cards engine important convenient form control drums programs could unlimited extent could stored repeated without danger introducing errors setting machine hand important also served crystallize babbages feeling invented something really something much sophisticated calculating machine bruce collier 1970
entry computer science wikiquote history quotation
word anything written quotation marks things computers cannot example answer question arbitrary given computer program eventually finish forever halting problem



referencesedit



wordnet search—31 wordnetwebprincetonedu retrieved 2012
charles babbage institute charles babbage cbiumnedu retrieved december 2016
lovelace babbage engine computer history museum wwwcomputerhistoryorg retrieved december 2016
wilhelm schickard computerpionier
brief history computing
science museum—introduction babbage archived original september 2006 retrieved september 2006
anthony hyman 1982 charles babbage pioneer computer
selection adaptation adas notes found enchantress numbers betty alexandra toole strawberry press mill valley archived original february 2006 retrieved 2006
sense aiken needed whose technology included punched cards accumulation numerical data transfer numerical data register another bernard cohen 2000
brian randell 1975
association computing machinery founded 1947
denning peter 2000 computer science discipline encyclopedia computer science archived original 2006
edsac statistics university cambridge retrieved november 2011
computer science pioneer samuel conte dies purdue computer science july 2002 retrieved december 2014
levy steven 1984 hackers heroes computer revolution doubleday isbn 0385191952
tedre matti 2014 science computing shaping discipline taylor francis press
electronic data processing system—chm revolution computerhistoryorg retrieved july 2013
powerful data processing system computer history museum retrieved december 2014
timeline computer history computer history museum retrieved november 2015
david kahn codebreakers 1967 isbn 0684831309
computer science achievements challenges circa 2000 archived original september 2006 retrieved january 2007
constable march 2000 computer science achievements challenges circa 2000
abelson sussman sussman 1996 structure interpretation computer programs press isbn 0262011530 computer revolution revolution think express think essence change emergence might best called procedural epistemology study structure knowledge imperative point view opposed declarative point view taken classical mathematical subjects
black traders march telegraph august 2006 archived original june 2008
impact high frequency trading electronic market papersssrncom doi102139ssrn1686004 ssrn 1686004 missing empty help accessdate requires help
maly timy digital filmmakers produced gorgeous scifi movie kickstarter budget wired retrieved november 2015
matthau charles tech shaped film making film digital debate rest wired retrieved november 2015
louis fine 1959 role university computers data processing related fields communications 7–14 doi101145368424368427
stanford university oral history stanford university retrieved 2013
donald knuth 1972 george forsythe development computer science comms archived october 2013 wayback machine
matti tedre 2006 development computer science sociocultural perspective retrieved december 2014
peter naur 1966 science datalogy communications doi101145365719366510
weiss corley henry communications communications doi101145368796368802
communications 21p4
ieee computer 2812p136
mounierkuhn linformatique france seconde guerre mondiale plan calcul lémergence dune science paris pups 2010

tedre 2011 computing science survey competing viewpoints minds machines 361–387 doi101007s1102301192404
parnas 1998 software engineering programmes computer science programmes annals software engineering 19–37 doi101023a1018949113292 rather treat software engineering subfield computer science treat element civil engineering mechanical engineering chemical engineering electrical engineering
wegner october 13–15 1976 research paradigms computer science—proceedings international conference software engineering francisco california united states ieee computer society press alamitos
denning comer gries mulder tucker turner young january 1989 computing discipline communications 9–23 doi1011456323863239
eden 2007 three paradigms computer science minds machines 135–167 doi101007s1102300790608 archived original february 2016
computer science profession computing sciences accreditation board 1997 archived original june 2008 retrieved 2010
committee fundamentals computer science challenges opportunities national research council 2004 computer science reflections field reflections field national academies press isbn 9780309093019
csab leading computer education csab august 2011 retrieved november 2011
clay mathematics institute archived october 2013 wayback machine
collins graham october 2002 claude shannon founder information theory scientific american retrieved december 2014
thisted ronald april 1997 computer architecture university chicago
wescott 2013 every computer performance book chapter useful laws createspace isbn 1482657759
computation buffaloedu
meyer bertrand april 2009 viewpoint research evaluation computer science communications 31–34 doi10114514987651498780
patterson david august 1999 evaluating computer scientists engineers promotion tenure computing research association
fortnow lance august 2009 viewpoint time computer science grow communications 33–35 doi10114515366161536631
computer science elective anymore education week february 2014
running empty october 2010
teach computational thinking—stephen wolfram blog blogstephenwolframcom retrieved september 2016
algorithm economist april 2014
computing school international comparisons retrieved july 2015
adding coding curriculum york times march 2014
gender female programmers retrieved july 2015
gender female programmers
gender science retrieved july 2015



readingedit


overview


tucker allen 2004 computer science handbook chapman hallcrc isbn 158488360x

within chapters every significantly revised find kind information references computer science imagine absolute nothing computer science found kilogramencyclopaedia survey articles christoph meinel zentralblatt math


leeuwen 1994 handbook theoretical computer science press isbn 0262720205

unique possibly useful theoretical computer science community support teaching research books used anyone wanting simply gain understanding areas someone desiring research topic instructors wishing find timely information subject teaching outside major areas expertise rocky ross sigact news


ralston anthony reilly edwin hemmendinger david 2000 encyclopedia computer science groves dictionaries isbn 156159248x

since 1976 definitive reference work computer computing computer science alphabetically arranged classified broad subject areas entries cover hardware computer systems information data software mathematics computing theory computation methodologies applications computing milieu editors done commendable blending historical perspective practical reference information encyclopedia remains essential public academic library reference collections accardin northeastern illinois univ chicago


edwin reilly 2003 milestones computer science information technology greenwood publishing group isbn 9781573565219


selected literature


knuth donald 1996 selected papers computer science csli publications cambridge university press
collier bruce little engine couldve calculating machines charles babbage garland publishing isbn 0824000439
cohen bernard 2000 howard aiken portrait computer pioneer press isbn 9780262531795
tedre matti 2014 science computing shaping discipline press taylor francis
randell brian 1973 origins digital computers selected papers springerverlag isbn 354006169x

covering period 1966 1993 interest lies content papers still timely today also together ideas expressed different times complement nicely bernard zentralblatt math




articles


peter denning computer science science communications april 2005
peter denning great principles computing curricula technical symposium computer science education 2004
research evaluation computer science informatics europe report shorter journal version bertrand meyer christine choppy leeuwen jorgen staunstrup research evaluation computer science communications 31–34 april 2009


curriculum classification


association computing machinery 1998 computing classification system 1998
joint task force association computing machinery association information systems ieee computer society ieee computing curricula 2005 overview report september 2005
norman gibbs allen tucker model curriculum liberal arts degree computer science communications volume issue march 1986


external linksedit

find aboutcomputer scienceat wikipedias sister projects

definitions wiktionary
media wikimedia commons
news wikinews
quotations wikiquote
texts wikisource
textbooks wikibooks
learning resources wikiversity




library resources
computer science





resources library
resources libraries





computer science curlie based dmoz
scholarly societies computer science
computer science
best papers awards computer science since 1996
photographs computer scientists bertrand meyer
eecsberkeleyedu


bibliography academic search engines


citeseerx article search engine digital library repository scientific academic papers focus computer information science
dblp computer science bibliography article computer science bibliography website hosted universität trier germany
collection computer science bibliographies article


professional organizations


association computing machinery
ieee computer society
informatics europe
aaai
aaas computer science


misc


computer science—stack exchange communityrun questionandanswer site computer science
computer science
computer science science
computer science software must considered independent discipline












software engineering



fields



computer programming
requirements engineering
software deployment
software design
software maintenance
software testing
systems analysis
formal methods





concepts



data modeling
enterprise architecture
functional specification
modeling language
orthogonality
programming paradigm
software
software archaeology
software architecture
software configuration management
software development methodology
software development process
software quality
software quality assurance
software verification validation
structured analysis





orientations



agile
aspectoriented
object orientation
ontology
service orientation
sdlc





models




developmental



agile

executable
incremental model
iterative model
prototype model


scrum
spiral model
vmodel
waterfall model










spice
cmmi
data model
model
function model
information model
metamodeling
object model
systems model
view model





languages



idef


sysml









software
engineers




victor basili
kent beck
grady booch
fred brooks
barry boehm
peter chen
danese cooper
ward cunningham
demarco
edsger dijkstra
delores etter
martin fowler
adele goldstine
margaret hamilton
hoare
lois haibt
mary jean harrold
grace hopper
watts humphrey
michael jackson
ivar jacobson
alan
nancy leveson
stephen mellor
bertrand meyer
david parnas
trygve reenskaug
winston royce
james rumbaugh
mary shaw
peri tarr
elaine weyuker
niklaus wirth
edward yourdon





related fields



computer science
computer engineering
project management
risk management
systems engineering








category
commons

















major fields computer science




note template roughly follows 2012 computing classification system



hardware



printed circuit board
peripheral
integrated circuit
verylargescale integration
energy consumption
electronic design automation





computer systems
organization



computer architecture
embedded system
realtime computing
dependability





networks



network architecture
network protocol
network components
network scheduler
network performance evaluation
network service





software organization



interpreter
middleware
virtual machine
operating system
software quality





software notations
tools



programming paradigm
programming language
compiler
domainspecific language
modeling language
software framework
integrated development environment
software configuration management
software library
software repository





software development



software development process
requirements analysis
software design
software construction
software deployment
software maintenance
programming team
opensource model





theory computation



model computation
formal language
automata theory
computational complexity theory
logic
semantics





algorithms



algorithm design
analysis algorithms
randomized algorithm
computational geometry





mathematics
computing



discrete mathematics
probability
statistics
mathematical software
information theory
mathematical analysis
numerical analysis





information
systems



database management system
information storage systems
enterprise information system
social information systems
geographic information system
decision support system
process control system
multimedia information system
data mining
digital library
computing platform
digital marketing
world wide
information retrieval





security



cryptography
formal methods
security services
intrusion detection system
hardware security
network security
information security
application security





human–computer
interaction



interaction design
social computing
ubiquitous computing
visualization
accessibility





concurrency



concurrent computing
parallel computing
distributed computing
multithreading
multiprocessing





artificial
intelligence



natural language processing
knowledge representation reasoning
computer vision
automated planning scheduling
search methodology
control method
philosophy artificial intelligence
distributed artificial intelligence





machine learning



supervised learning
unsupervised learning
reinforcement learning
multitask learning
crossvalidation





graphics



animation
rendering
image manipulation
graphics processing unit
mixed reality
virtual reality
image compression
solid modeling





applied
computing



ecommerce
enterprise software
computational mathematics
computational physics
computational chemistry
computational biology
computational social science
computational engineering
computational healthcare
digital
electronic publishing
cyberwarfare
electronic voting
video game
word processing
operations research
educational technology
document management








book
category
portal
wikiproject
commons









authority control



lccn sh89003285
40268949
cb11932109b data
8272
xx525961











retrieved httpsenwikipediaorgwindexphptitlecomputerscienceoldid818424128 categories electrical engineeringelectronic engineeringcomputer engineeringcomputer sciencehidden categories pages using citations urlpages using citations accessdate urlwebarchive template wayback linkswikipedia indefinitely moveprotected pagesuse dates october 2017all articles unsourced statementsarticles unsourced statements october 2010articles dmoz linkswikipedia articles lccn identifierswikipedia articles identifierswikipedia articles identifiers
