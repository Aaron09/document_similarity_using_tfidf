uses software disambiguation




diagram showing user interacts application software typical desktop computerthe application software layer interfaces operating system turn communicates hardware arrows indicate information flow


computer software simply software part computer system consists data computer instructions contrast physical hardware system built computer science software engineering computer software information processed computer systems programs data computer software includes computer programs libraries related nonexecutable data online documentation digital media computer hardware software require neither realistically used
lowest level executable code consists machine language instructions specific individual processor—typically central processing unit machine language consists groups binary values signifying processor instructions change state computer preceding state example instruction change value stored particular storage location computer—an effect directly observable user instruction also indirectly cause something appear display computer system—a state change visible user processor carries instructions order provided unless instructed jump different instruction interrupted multicore processors dominant core instructions order however application software runs core default software made many
majority software written highlevel programming languages easier efficient programmers closer machine languages natural languages1 highlevel languages translated machine language using compiler interpreter combination software also written lowlevel assembly language strong correspondence computers machine language instructions translated machine language using assembler



contents


history
types

purpose domain
nature domain execution
programming tools


topics

architecture
execution
quality reliability
license
patents


design implementation
industry organizations
also
references
external links



history
main article history software
outline algorithm would first piece software written lovelace 19th century planned analytical engine however neither analytical engine software ever created
first theory software—prior creation computers know today—was proposed alan turing 1935 essay computable numbers application entscheidungsproblem decision problem
eventually creation twin academic fields computer science software engineering study software creation computer science theoretical turings essay example computer science software engineering focuses practical concerns
however prior 1946 software understand it—programs stored memory storedprogram digital computers—did exist first electronic computing devices instead rewired order reprogram
types
also list software categories
virtually computer platforms software grouped broad categories
purpose domain





part series


ecommerce


online goods services




digital distribution
ebooks
software
streaming media




retail services




banking
dvdbymail
flower delivery
food ordering
grocery
pharmacy
travel




marketplace services




advertising
auctions
comparison shopping
social commerce
trading communities
wallet




mobile commerce




payment
ticketing




customer service




call centre
help desk
live support software




eprocurement


purchasetopay













based goal computer software divided

application software
software uses computer system perform special functions provide entertainment functions beyond basic operation computer many different types application software range tasks performed modern computer large—see list software
system software
software directly operates computer hardware provide basic functionality needed users software provide platform running application software2 system software includes

operating systems
essential collections software manage resources provides common services software runs supervisory programs boot loaders shells window systems core parts operating systems practice operating system comes bundled additional software including application software user potentially work computer operating system
device drivers
operate control particular type device attached computer device needs least corresponding device driver computer typically minimum least input device least output device computer typically needs device driver
utilities
computer programs designed assist users maintenance care computers


malicious software malware
software developed harm disrupt computers malware undesirable malware closely associated computerrelated crimes though malicious programs designed practical jokes

nature domain execution

desktop applications browsers microsoft office well smartphone tablet applications called apps push parts software industry merge desktop applications mobile apps extent windows later ubuntu touch tried allow style application user interface used desktops laptops mobiles
javascript scripts pieces software traditionally embedded pages directly inside browser page loaded without need browser plugin software written programming languages also within browser software either translated javascript browser plugin supports language installed common example latter actionscript scripts supported adobe flash plugin
server software including

applications usually server output dynamically generated pages browsers using java aspnet even javascript runs server modern times commonly include javascript browser well case typically partly server partly browser


plugins extensions software extends modifies functionality another piece software require software used order function
embedded software resides firmware within embedded systems devices dedicated single uses cars televisions although embedded devices wireless chipsets part ordinary nonembedded computer system smartphone3 embedded system context sometimes clear distinction system software application software however embedded systems embedded operating systems systems retain distinction system software application software although typically fixed application always
microcode special relatively obscure type embedded software tells processor execute machine code actually lower level machine code typically proprietary processor manufacturer necessary correctional microcode software updates supplied users much cheaper shipping replacement processor hardware thus ordinary programmer would expect ever deal

programming tools
main article programming tool
programming tools also software form programs applications software developers also known programmers coders hackers software engineers create debug maintain improve otherwise support software
software written programming languages many programming languages existence least implementation consists programming tools tools relatively selfcontained programs compilers debuggers interpreters linkers text editors combined together accomplish task form integrated development environment combines much functionality selfcontained tools ides either invoking relevant individual tools reimplementing functionality make easier specific tasks searching files particular project many programming language implementations provide option using individual tools
topics
architecture
also software architecture
users often things differently programmers people modern general purpose computers opposed embedded systems analog computers supercomputers usually three layers software performing variety tasks platform application user software

platform software
platform includes firmware device drivers operating system typically graphical user interface total allow user interact computer peripherals associated equipment platform software often comes bundled computer usually ability change platform software
application software
application software applications people think think software typical examples include office suites video games application software often purchased separately computer hardware sometimes applications bundled computer change fact independent applications applications usually independent programs operating system though often tailored specific platforms users think compilers databases system software applications
userwritten software
enduser development tailors systems meet users specific needs user software include spreadsheet templates word processor templates even email filters kind user software users create software often overlook important depending competently userwritten software integrated default application packages many users aware distinction original packages added coworkers

execution
main article execution computing
computer software loaded computers storage hard drive memory software loaded computer able execute software involves passing instructions application software system software hardware ultimately receives instruction machine code instruction causes computer carry operation—moving data carrying computation altering control flow instructions
data movement typically place memory another sometimes involves moving data memory registers enable highspeed data access moving data especially large amounts costly sometimes avoided using pointers data instead computations include simple operations incrementing value variable data element complex computations involve many operations data elements together
quality reliability
main articles software quality software testing software reliability
software quality important especially commercial system software like microsoft office microsoft windows linux software faulty buggy delete persons work crash computer unexpected things faults errors called bugs often discovered alpha beta testing software often also victim known software aging progressive performance degradation resulting combination unseen bugs
many bugs discovered eliminated debugged software testing however software testing rarely—if ever—eliminates every programmers every program least lubarskys law4 waterfall method software development separate testing teams typically employed newer approaches collectively termed agile software development developers often testing demonstrate software usersclients regularly obtain feedback software tested unit testing regression testing methods done manually commonly automatically since amount code tested quite large instance nasa extremely rigorous software testing procedures many operating systems communication functions many nasabased operations interact identify command programs enables many people work nasa check evaluate functional systems overall programs containing command software enable hardware engineering system operations function much easier together
license
main article software license
softwares license gives user right software licensed environment case free software licenses also grants rights right make copies
proprietary software divided types

freeware includes category free trial software freemium software past term shareware often used free trialfreemium software name suggests freeware used free although case free trials freemium software sometimes true limited period time limited functionality
software available often inaccurately termed commercial software legally used purchase license

open source software hand comes free software license granting recipient rights modify redistribute software
patents
main articles software patent software patent debate
software patents like types patents theoretically supposed give inventor exclusive timelimited license detailed idea algorithm implement piece software component piece software ideas useful things software could user requirements supposed patentable concrete implementations actual software packages implementing patent supposed patentable either—the latter already covered copyright generally automatically software patents supposed cover middle area requirements concrete implementation countries requirement claimed invention effect physical world also part requirements software patent held valid—although since useful software effects physical world requirement open debate meanwhile american copyright applied various aspects writing software code5
software patents controversial software industry many people holding different views sources controversy aforementioned split initial ideas patent seem honored practice patent lawyers—for example patent aspectoriented programming purported claim rights programming tool implementing idea howsoever implemented another source controversy effect innovation many distinguished experts companies arguing software fastmoving field software patents merely create vast additional litigation costs risks actually retard innovation case debates software patents outside united states argument made large american corporations patent lawyers likely primary beneficiaries allowing continue allow software patents
design implementation
main articles software development computer programming software engineering
design implementation software varies depending complexity software instance design creation microsoft word took much time designing developing microsoft notepad latter much basic functionality
software usually designed created codedwrittenprogrammed integrated development environments like eclipse intellij microsoft visual studio simplify process compile software applicable noted different section software usually created existing software application programming interface underlying software provides like javabeans swing libraries apis categorized purpose instance spring framework used implementing enterprise applications windows forms library used designing graphical user interface applications like microsoft word windows communication foundation used designing services program designed relies upon instance user designing microsoft windows desktop application might windows forms library design desktop application call apis like form1close form1show6 close open application write additional operations himherself needs without apis programmer needs write apis himherself companies like oracle microsoft provide apis many applications written using software libraries usually numerous apis
data structures hash tables arrays binary trees algorithms quicksort useful creating software
computer software special economic characteristics make design creation distribution different economic goodsspecify78
person creates software called programmer software engineer software developer terms similar meaning informal terms programmer also exist coder hacker although latter word cause confusion often used mean someone illegally breaks computer systems
industry organizations
main article software industry
great variety software companies programmers world comprise software industry software quite profitable industry bill gates cofounder microsoft richest person world 2009 largely ownership significant number shares microsoft company responsible microsoft windows microsoft office software products
nonprofit software organizations include free software foundation project mozilla foundation software standard organizations like ietf develop recommended software standards http html software interoperate standards
wellknown large software companies include oracle novell symantec adobe systems sidetrade corel small companies often provide innovation
also

software release life cycle
independent software vendor
list software
software asset management



software portal
free software portal
information technology portal


references



compiler construction archived original november 2013
system software university mississippi archived original 2001
embedded software—technologies trends ieee computer society may–june 2009 archived original october 2013 retrieved november 2013
scripting intelligence book examples archived original november 2015
gerardo díaz text machine american copyright many natures software 1974–1978” technology culture october 2016 753–79
msdn library archived original june 2010 retrieved june 2010
engelhardt sebastian 2008 economic properties software jena economic research papers 2008–045 archived original january 2016
kaminsky 1999 open source optimum economic paradigm software archived original 2012



external links

find aboutsoftwareat wikipedias sister projects

definitions wiktionary
media wikimedia commons
news wikinews
texts wikisource
textbooks wikibooks
learning resources wikiversity



software curlie based dmoz












software distribution platforms content delivery networks






store
cloud gaming
digital library
online game store
package manager
software distribution
streaming media





active




personal
computer



allmyapps
amazon digital game store
battlenet
fish games
chrome store
digital river
direct2drive
dotemu
gogcom
gamehouse
gameshadow
gamersgate
games windows live
game jolt
gnome software
green gaming
humble store
games arcade
itchio
store
macupdate
metaboligamesplanet
microsoft store
games
origin
playism
playster
pogocom
pokki
steam
ubuntu software center
uplay
wildtangent





video game
consoles



gamefly
microsoft store
nintendo eshop
playstation
playstation store
shop channel
xbox store
xbox live arcade





mobile



amazon appstore
appsfire
apple store
aptoide
blackberry world
cafe bazaar
cydia
fdroid
gamersgate
getjar
google play
handango
microsoft store
nintendo eshop
samsung apps
slideme
opera mobile store
playster
ubuntu store
windows phone store





arcade



allnet
nesicaxlive
eamusement








discontinued



desura
gameagent
gametap
games windows marketplace
impulse
intel appup
jumboplay
kazaa
ngage
nokia store
onlive
playnow arena
stardock central
triton
windows marketplace
windows marketplace mobile
yahoo games
zune marketplace
zylom









authority control



lccn sh85029534
40553826
cb133183707 data
00684642
xx530960











retrieved httpsenwikipediaorgwindexphptitlesoftwareoldid812897120 categories computingcomputer sciencesoftwaremathematical quantitative methods economicshidden categories wikipedia indefinitely semiprotected pagesarticles needing detailed referencesarticles dmoz linkswikipedia articles lccn identifierswikipedia articles identifierswikipedia articles identifiersuse dates 2017
