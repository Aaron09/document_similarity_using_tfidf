redirects uses disambiguation
computer processor redirects uses processor




intel 80486dx2 seen



bottom side intel 80486dx2 showing pins



central processing unit electronic circuitry within computer carries instructions computer program performing basic arithmetic logical control inputoutput operations specified instructions computer industry used term central processing unit least since early 1960s1 traditionally term refers processor specifically processing unit control unit distinguishing core elements computer external components main memory circuitry2
form design implementation cpus changed course history fundamental operation remains almost unchanged principal components include arithmetic logic unit performs arithmetic logic operations processor registers supply operands store results operations control unit orchestrates fetching memory execution instructions directing coordinated operations registers components
modern cpus microprocessors meaning contained single integrated circuit chip contains also contain memory peripheral interfaces components computer integrated devices variously called microcontrollers systems chip computers employ multicore processor single chip containing cpus called cores context speak single chips sockets3 array processors vector processors multiple processors operate parallel unit considered central also exists concept virtual cpus abstraction dynamical aggregated computational resources4



contents


history

transistor cpus
smallscale integration cpus
largescale integration cpus
microprocessors


operation

fetch
decode
execute


structure implementation

control unit
arithmetic logic unit
memory management unit
clock rate
integer range
parallelism

instructionlevel parallelism
tasklevel parallelism
data parallelism


virtual cpus


performance
also
notes
references
external links



historyedit
main article history generalpurpose cpus




edvac first storedprogram computers


early computers eniac physically rewired perform different tasks caused machines called fixedprogram computers5 since term generally defined device software computer program execution earliest devices could rightly called cpus came advent storedprogram computer
idea storedprogram computer already present design presper eckert john william mauchlys eniac initially omitted could finished sooner6 june 1945 eniac made mathematician john neumann distributed paper entitled first draft report edvac outline storedprogram computer would eventually completed august 19497 edvac designed perform certain number instructions operations various types significantly programs written edvac stored highspeed computer memory rather specified physical wiring computer8 overcame severe limitation eniac considerable time effort required reconfigure computer perform task neumanns design program edvac could changed simply changing contents memory edvac however first storedprogram computer manchester smallscale experimental machine small prototype storedprogram computer first program june 19489 manchester mark first program night 16–17 june 194910
early cpus custom designs used part larger sometimes distinctive computer11 however method designing custom cpus particular application largely given development multipurpose processors produced large quantities standardization began discrete transistor mainframes minicomputers rapidly accelerated popularization integrated circuit allowed increasingly complex cpus designed manufactured tolerances order nanometers12 miniaturization standardization cpus increased presence digital devices modern life beyond limited application dedicated computing machines modern microprocessors appear electronic devices ranging automobiles13 cellphones14 sometimes even toys15
neumann often credited design storedprogram computer design edvac design became known neumann architecture others konrad zuse suggested implemented similar ideas16 socalled harvard architecture harvard mark completed edvac1718 also utilized storedprogram design using punched paper tape rather electronic memory19 difference neumann harvard architectures latter separates storage treatment instructions data former uses memory space both20 modern cpus primarily neumann design cpus harvard architecture seen well especially embedded applications instance atmel microcontrollers harvard architecture processors21
relays vacuum tubes thermionic tubes commonly used switching elements2223 useful computer requires thousands tens thousands switching devices overall speed system dependent speed switches tube computers like edvac tended average eight hours failures whereas relay computers like slower earlier harvard mark failed rarely1 tubebased cpus became dominant significant speed advantages afforded generally outweighed reliability problems early synchronous cpus clock rates compared modern microelectronic designs clock signal frequencies ranging common time limited largely speed switching devices built with24
transistor cpusedit




powerpc 604e processor


main article transistor computer
design complexity cpus increased various technologies facilitated building smaller reliable electronic devices first improvement came advent transistor transistorized cpus 1950s 1960s longer built bulky unreliable fragile switching elements like vacuum tubes relays25 improvement complex reliable cpus built onto several printed circuit boards containing discrete individual components
1964 introduced system360 computer architecture used series computers capable running programs different speed performance26 significant time electronic computers incompatible another even made manufacturer facilitate improvement utilized concept microprogram often called microcode still sees widespread usage modern cpus27 system360 architecture popular dominated mainframe computer market decades left legacy still continued similar modern computers like zseries2829 1965 digital equipment corporation introduced another influential computer aimed scientific research markets pdp830




fujitsu board sparc64 viiifx processors


transistorbased computers several distinct advantages predecessors aside facilitating increased reliability lower power consumption transistors also allowed cpus operate much higher speeds short switching time transistor comparison tube relay31 increased reliability dramatically increased speed switching elements almost exclusively transistors time clock rates tens megahertz easily obtained period32 additionally discrete transistor cpus heavy usage highperformance designs like simd single instruction multiple data vector processors began appear33 early experimental designs later gave rise specialized supercomputers like made cray fujitsu ltd33
smallscale integration cpusedit




core memory external interface pdp8i made mediumscale integrated circuits


period method manufacturing many interconnected transistors compact space developed integrated circuit allowed large number transistors manufactured single semiconductorbased chip first basic nonspecialized digital circuits gates miniaturized cpus based building block generally referred smallscale integration devices ones used apollo guidance computer usually contained dozen transistors build entire required thousands individual chips still consumed much less space power earlier discrete transistor designs
ibms system370 followon system360 used rather solid logic technology discretetransistor modules3435 decs pdp8i ki10 pdp10 also switched individual transistors used pdp8 pdp10 extremely popular pdp11 line originally built eventually implemented components became practical
largescale integration cpusedit
boysel published influential articles including 1967 manifesto described build equivalent 32bit mainframe computer relatively small number largescale integration circuits lsi3637 time build chips chips hundred gates build using process pmos logic nmos logic cmos logic however companies continued build processors bipolar chips bipolar junction transistors much faster chips example datapoint built processors transistor–transistor logic chips early 1980s37 time slow considered useful niche applications required power3839
microelectronic technology advanced increasing number transistors placed decreasing number individual needed complete increased transistor counts hundreds thousands 1968 number required build complete reduced eight different types containing roughly 1000 mosfets40 stark contrast predecessors first implementation pdp11 contained composed four integrated circuits41
microprocessorsedit
main article microprocessor




intel 80486dx2 microprocessor actual size 12×675 packaging



intel core vaio series laptop motherboard right beneath heat pipe



since introduction first commercially available microprocessor intel 4004 1970 first widely used microprocessor intel 8080 1974 class cpus almost completely overtaken central processing unit implementation methods mainframe minicomputer manufacturers time launched proprietary development programs upgrade older computer architectures eventually produced instruction compatible microprocessors backwardcompatible older hardware software combined advent eventual success ubiquitous personal computer term applied almost exclusivelya microprocessors several cpus denoted cores combined single processing chip42
previous generations cpus implemented discrete components numerous small integrated circuits circuit boards43 microprocessors hand cpus manufactured small number usually one44 overall smaller size result implemented single means faster switching time physical factors like decreased gate parasitic capacitance4546 allowed synchronous microprocessors clock rates ranging tens megahertz several gigahertz additionally ability construct exceedingly small transistors increased complexity number transistors single many fold widely observed trend described moores proven fairly accurate predictor growth complexity47
complexity size construction general form cpus changed enormously since 195048 notable basic design function changed much almost common cpus today accurately described neumann storedprogram machinesb aforementioned moores continues hold true47 concerns arisen limits integrated circuit transistor technology extreme miniaturization electronic gates causing effects phenomena like electromigration subthreshold leakage become much significant newer concerns among many factors causing researchers investigate methods computing quantum computer well expand usage parallelism methods extend usefulness classical neumann model
operationedit
fundamental operation cpus regardless physical form take execute sequence stored instructions called program instructions executed kept kind computer memory nearly cpus follow fetch decode execute steps operation collectively known instruction cycle
execution instruction entire process repeats next instruction cycle normally fetching nextinsequence instruction incremented value program counter jump instruction executed program counter modified contain address instruction jumped program execution continues normally complex cpus multiple instructions fetched decoded executed simultaneously section describes generally referred classic risc pipeline quite common among simple cpus used many electronic devices often called microcontroller largely ignores important role cache therefore access stage pipeline
instructions manipulate program counter rather producing result data directly instructions generally called jumps facilitate program behavior like loops conditional program execution conditional jump existence functionsc processors instructions change state bits flags register flags used influence program behaves since often indicate outcome various operations example processors compare instruction evaluates values sets clears bits flags register indicate greater whether equal flags could used later jump instruction determine program flow
fetchedit
first step fetch involves retrieving instruction represented number sequence numbers program memory instructions location address program memory determined program counter stores number identifies address next instruction fetched instruction fetched incremented length instruction contain address next instruction sequenced often instruction fetched must retrieved relatively slow memory causing stall waiting instruction returned issue largely addressed modern processors caches pipeline architectures
decodeedit
instruction fetches memory determines decode step performed circuitry known instruction decoder instruction converted signals control parts
instruction interpreted defined cpus instruction architecture isae often group bits field within instruction called opcode indicates operation performed remaining fields usually provide supplemental information required operation operands operands specified constant value called immediate value location value processor register memory address determined addressing mode
designs instruction decoder implemented hardwired unchangeable circuit others microprogram used translate instructions sets configuration signals applied sequentially multiple clock pulses cases memory stores microprogram rewritable making possible change decodes instructions
executeedit
fetch decode steps execute step performed depending architecture consist single action sequence actions action various parts electrically connected perform part desired operation action completed typically response clock pulse often results written internal register quick access subsequent instructions cases results written slower less expensive higher capacity main memory
example addition instruction executed arithmetic logic unit inputs connected pair operand sources numbers summed configured perform addition operation operand inputs appear output output connected storage register memory receive clock pulse occurs transferred storage resulting large larger alus output word size arithmetic overflow flag
structure implementationedit
also processor design




block diagram basic uniprocessorcpu computer black lines indicate data flow whereas lines indicate control flow arrows indicate flow directions


hardwired cpus circuitry basic operations perform called instruction operations involve example adding subtracting numbers comparing numbers jumping different part program basic operation represented particular combination bits known machine language opcode executing instructions machine language program decides operation perform decoding opcode complete machine language instruction consists opcode many cases additional bits specify arguments operation example numbers summed case addition operation going complexity scale machine language program collection machine language instructions executes
actual mathematical operation instruction performed combinational logic circuit within cpus processor known arithmetic logic unit general executes instruction fetching memory using perform operation storing result memory beside instructions integer mathematics logic operations various machine instructions exist loading data memory storing back branching operations mathematical operations floatingpoint numbers performed cpus floatingpoint unit fpu50
control unitedit
main article control unit
control unit contains circuitry uses electrical signals direct entire computer system carry stored program instructions control unit execute program instructions rather directs parts system control unit communicates memory
arithmetic logic unitedit
main article arithmetic logic unit




symbolic representation input output signals


arithmetic logic unit digital circuit within processor performs integer arithmetic bitwise logic operations inputs data words operated called operands status information previous operations code control unit indicating operation perform depending instruction executed operands come internal registers external memory constants generated
input signals settled propagated circuitry result performed operation appears alus outputs result consists data word stored register memory status information typically stored special internal register reserved purpose
memory management unitedit
main article memory management unit
highend microprocessors desktop laptop server computers memory management unit translating logical addresses physical addresses providing memory protection paging abilities useful virtual memory simpler processors especially microcontrollers usually dont include
clock rateedit
main article clock rate
cpus synchronous circuits means employ clock signal pace sequential operations clock signal produced external oscillator circuit generates consistent number pulses second form periodic square wave frequency clock pulses determines rate executes instructions consequently faster clock instructions execute second
ensure proper operation clock period longer maximum time needed signals propagate move setting clock period value well worstcase propagation delay possible design entire moves data around edges rising falling clock signal advantage simplifying significantly design perspective componentcount perspective however also carries disadvantage entire must wait slowest elements even though portions much faster limitation largely compensated various methods increasing parallelism
however architectural improvements alone solve drawbacks globally synchronous cpus example clock signal subject delays electrical signal higher clock rates increasingly complex cpus make difficult keep clock signal phase synchronized throughout entire unit many modern cpus require multiple identical clock signals provided avoid delaying single signal significantly enough cause malfunction another major issue clock rates increase dramatically amount heat dissipated constantly changing clock causes many components switch regardless whether used time general component switching uses energy element static state therefore clock rate increases energy consumption causing require heat dissipation form cooling solutions
method dealing switching unneeded components called clock gating involves turning clock signal unneeded components effectively disabling however often regarded difficult implement therefore common usage outside lowpower designs notable recent design uses extensive clock gating powerpcbased xenon used xbox power requirements xbox greatly reduced51 another method addressing problems global clock signal removal clock signal altogether removing global clock signal makes design process considerably complex many ways asynchronous clockless designs carry marked advantages power consumption heat dissipation comparison similar synchronous designs somewhat uncommon entire asynchronous cpus built without utilizing global clock signal notable examples compliant amulet mips r3000 compatible minimips
rather totally removing clock signal designs allow certain portions device asynchronous using asynchronous alus conjunction superscalar pipelining achieve arithmetic performance gains altogether clear whether totally asynchronous designs perform comparable better level synchronous counterparts evident least excel simpler math operations combined excellent power consumption heat dissipation properties makes suitable embedded computers52
integer rangeedit
every represents numerical values specific example early digital computers represented numbers familiar decimal base numeral system values others employed unusual representations ternary base three nearly modern cpus represent numbers binary form digit represented twovalued physical quantity high voltagef




sixbit word containing binary encoded representation decimal value modern cpus employ word sizes power example bits


related numeric representation size precision integer numbers represent case binary measured number bits significant digits binary encoded integer process operation commonly called word size width data path width integer precision integer size cpus integer size determines range integer values directly operate example 8bit directly manipulate integers represented eight bits range discrete integer values
integer range also affect number memory locations directly address address integer value representing specific memory location example binary uses bits represent memory address directly address memory locations circumvent limitation various reasons cpus mechanisms bank switching allow additional memory addressed
cpus larger word sizes require circuitry consequently physically larger cost consume power therefore generate heat result smaller 8bit microcontrollers commonly used modern applications even though cpus much larger word sizes even 128bit available higher performance required however benefits larger word size larger data ranges address spaces outweigh disadvantages internal data paths shorter word size reduce size cost example even though system360 instruction 32bit instruction system360 model model 8bit data paths arithmetic logical unit 32bit required four cycles bits operands even though motorola 68000 series instruction 32bit instruction motorola 68000 motorola 68010 16bit data paths arithmetic logical unit 32bit required cycles
gain advantages afforded lower higher lengths many instruction sets different widths integer floatingpoint data allowing cpus implementing instruction different widths different portions device example system360 instruction primarily supported 64bit floating point values facilitate greater accuracy range floating point numbers27 system360 model 8bit adder decimal fixedpoint binary arithmetic 60bit adder floatingpoint arithmetic53 many later designs similar mixed width especially processor meant generalpurpose usage reasonable balance integer floating point capability required
parallelismedit
main article parallel computing




model subscalar takes fifteen clock cycles complete three instructions


description basic operation offered previous section describes simplest form take type usually referred subscalar operates executes instruction pieces data time less instruction clock cycle
process gives rise inherent inefficiency subscalar cpus since instruction executed time entire must wait instruction complete proceeding next instruction result subscalar gets hung instructions take clock cycle complete execution even adding second execution unit improve performance much rather pathway hung pathways hung number unused transistors increased design wherein cpus execution resources operate instruction time possibly reach scalar performance instruction clock cycle however performance nearly always subscalar less instruction clock cycle
attempts achieve scalar better performance resulted variety design methodologies cause behave less linearly parallel referring parallelism cpus terms generally used classify design techniques

instructionlevel parallelism seeks increase rate instructions executed within increase utilization ondie execution resources
tasklevel parallelism purposes increase number threads processes execute simultaneously

methodology differs ways implemented well relative effectiveness afford increasing cpus performance applicationh
instructionlevel parallelismedit
main articles instruction pipelining superscalar processor




basic fivestage pipeline best case scenario pipeline sustain completion rate instruction clock cycle


simplest methods used accomplish increased parallelism begin first steps instruction fetching decoding prior instruction finishes executing simplest form technique known instruction pipelining utilized almost modern generalpurpose cpus pipelining allows instruction executed given time breaking execution pathway discrete stages separation compared assembly line instruction made complete stage exits execution pipeline retired
pipelining however introduce possibility situation result previous operation needed complete next operation condition often termed data dependency conflict cope additional care must taken check sorts conditions delay portion instruction pipeline occurs naturally accomplishing requires additional circuitry pipelined processors complex subscalar ones though significantly pipelined processor become nearly scalar inhibited pipeline stalls instruction spending clock cycle stage




simple superscalar pipeline fetching dispatching instructions time maximum instructions clock cycle completed


improvement upon idea instruction pipelining development method decreases idle time components even designs said superscalar include long instruction pipeline multiple identical execution units loadstore units arithmeticlogic units floatingpoint units address generation units54 superscalar pipeline multiple instructions read passed dispatcher decides whether instructions executed parallel simultaneously dispatched available execution units resulting ability several instructions executed simultaneously general instructions superscalar able dispatch simultaneously waiting execution units instructions completed given cycle
difficulty design superscalar architecture lies creating effective dispatcher dispatcher needs able quickly correctly determine whether instructions executed parallel well dispatch keep many execution units busy possible requires instruction pipeline filled often possible gives rise need superscalar architectures significant amounts cache also makes hazardavoiding techniques like branch prediction speculative execution register renaming outoforder execution transactional memory crucial maintaining high levels performance attempting predict branch path conditional instruction take minimize number times entire pipeline must wait conditional instruction completed speculative execution often provides modest performance increases executing portions code needed conditional operation completes outoforder execution somewhat rearranges order instructions executed reduce delays data dependencies also case single instruction stream multiple data stream—a case data type processed— modern processors disable parts pipeline single instruction executed many times skips fetch decode phases thus greatly increases performance certain occasions especially highly monotonous program engines video creation software photo processing
case portion superscalar part part suffers performance penalty scheduling stalls intel pentium superscalar alus could accept instruction clock cycle could accept instruction clock cycle thus integer superscalar floating point superscalar intels successor architecture added superscalar capabilities floating point features therefore afforded significant increase floating point instruction performance
simple pipelining superscalar design increase cpus allowing single processor complete execution instructions rates surpassing instruction clock cyclei modern designs least somewhat superscalar nearly general purpose cpus designed last decade superscalar later years emphasis designing highilp computers moved cpus hardware software interface strategy long instruction word vliw causes become implied directly software reducing amount work must perform boost thereby reducing designs complexity
tasklevel parallelismedit
main articles multithreading multicore processor
another strategy achieving performance execute multiple threads processes parallel area research known parallel computing55 flynns taxonomy strategy known multiple instruction stream multiple data stream mimd56
technology used purpose multiprocessing mp57 initial flavor technology known symmetric multiprocessing small number cpus share coherent view memory system scheme additional hardware maintain constantly uptodate view memory avoiding stale views memory cpus cooperate program programs migrate another increase number cooperating cpus beyond handful schemes nonuniform memory access numa directorybased coherence protocols introduced 1990s systems limited small number cpus numa systems built thousands processors initially multiprocessing built using multiple discrete cpus boards implement interconnect processors processors interconnect implemented single chip technology known chiplevel multiprocessing single chip multicore processor
later recognized finergrain parallelism existed single program single program might several threads functions could executed separately parallel earliest examples technology implemented inputoutput processing direct memory access separate thread computation thread general approach technology introduced 1970s systems designed multiple computation threads parallel technology known multithreading approach considered costeffective multiprocessing small number components within replicated support opposed entire case execution units memory system including caches shared among multiple threads downside hardware support multithreading visible software thus supervisor software like operating systems undergo larger changes support type implemented known temporal multithreading thread executed stalled waiting data return external memory scheme would quickly context switch another thread ready switch often done clock cycle ultrasparc another type simultaneous multithreading instructions multiple threads executed parallel within clock cycle
several decades 1970s early 2000s focus designing high performance general purpose cpus largely achieving high technologies pipelining caches superscalar execution outoforder execution trend culminated large powerhungry cpus intel pentium early 2000s designers thwarted achieving higher performance techniques growing disparity operating frequencies main memory operating frequencies well escalating power dissipation owing esoteric techniques
designers borrowed ideas commercial computing markets transaction processing aggregate performance multiple programs also known throughput computing important performance single thread process
reversal emphasis evidenced proliferation dual core processor designs notably intels newer designs resembling less superscalar architecture late designs several processor families exhibit including x8664 opteron athlon sparc ultrasparc power4 power5 well several video game console cpus like xbox 360s triplecore powerpc design playstation 7core cell microprocessor
data parallelismedit
main articles vector processor simd
less common increasingly important paradigm processors indeed computing general deals data parallelism processors discussed earlier referred type scalar devicej name implies vector processors deal multiple pieces data context instruction contrasts scalar processors deal piece data every instruction using flynns taxonomy schemes dealing data generally referred single instruction stream multiple data stream simd single instruction stream single data stream sisd respectively great utility creating processors deal vectors data lies optimizing tasks tend require operation example product performed large data classic examples types tasks include multimedia applications images video sound well many types scientific engineering tasks whereas scalar processor must complete entire process fetching decoding executing instruction value data vector processor perform single operation comparatively large data instruction course possible application tends require many steps apply operation large data
early vector processors cray1 associated almost exclusively scientific research cryptography applications however multimedia largely shifted digital media need form simd generalpurpose processors become significant shortly inclusion floatingpoint units started become commonplace generalpurpose processors specifications implementations simd execution units also began appear generalpurpose processorswhen early simd specifications like multimedia acceleration extensions intels integeronly proved significant impediment software developers since many applications benefit simd primarily deal floatingpoint numbers progressively developers refined remade early designs common modern simd specifications usually associated notable modern examples include intels powerpcrelated altivec also known vmxk
virtual cpusedit




section needs expansion help adding september 2016



cloud computing involve subdividing operation virtual central processing units58 vcpus59
host virtual equivalent physical machine virtual system operating60 several physical machines operating tandem managed whole grouped computing memory resources form cluster systems possible dynamically remove cluster resources available host cluster level partitioned resources pools fine granularity
performanceedit
information computer performance benchmark computing
performance speed processor depends among many factors clock rate generally given multiples hertz instructions clock together factors instructions second perform61 many reported values represented peak execution rates artificial instruction sequences branches whereas realistic workloads consist instructions applications take longer execute others performance memory hierarchy also greatly affects processor performance issue barely considered mips calculations problems various standardized tests often called benchmarks purpose‍—‌such specint‍—‌have developed attempt measure real effective performance commonly used applications
processing performance computers increased using multicore processors essentially plugging individual processors called cores sense integrated circuit62 ideally dual core processor would nearly twice powerful single core processor practice performance gain smaller imperfect software algorithms implementation63 increasing number cores processor dualcore quadcore increases workload handled means processor handle numerous asynchronous events interrupts take toll overwhelmed cores thought different floors processing plant floor handling different task sometimes cores handle tasks cores adjacent single core enough handle information
specific capabilities modern cpus hyperthreading uncore involve sharing actual resources aiming increased utilization monitoring performance levels hardware utilization gradually became complex task64 response cpus implement additional hardware logic monitors actual utilization various parts provides various counters accessible software example intels performance counter monitor technology3
alsoedit


information technology portal
technology portal




addressing mode
accelerated processing unit
cisc
computer
computer engineering
core voltage
socket
digital signal processor
hyperthreading
list architectures
microprocessor
multicore processor
protection ring
risc
stream processing
true performance index
wait state


notesedit


integrated circuits used implement cpus except machines designed withstand large electromagnetic pulses nuclear weapon
socalled neumann memo expounded idea stored programs49 example stored punched cards paper tape magnetic tape
early computers like harvard mark support kind jump instruction effectively limiting complexity programs could largely reason computers often considered contain proper despite close similarity storedprogram computers
since program counter counts memory addresses instructions incremented number memory units instruction word contains case simple fixedlength instruction word isas always number example fixedlength 32bit instruction word uses 8bit memory words would always increment four except case jumps isas variablelength instruction words increment number memory words corresponding last instructions length
instruction architecture fundamental interface usage often used classification type example powerpc uses variant powerpc system execute different running emulator
physical concept voltage analog nature practically infinite range possible values purpose physical representation binary numbers specific ranges voltages defined logic another logic ranges dictated design considerations noise margins characteristics devices used create
cpus integer size sets limit integer ranges often overcome using combination software hardware techniques using additional memory software represent integers many magnitudes larger sometimes cpus instruction even facilitate operations integers larger natively represent providing instructions make large integer arithmetic relatively quick method dealing large integers slower utilizing higher integer size reasonable tradeoff cases natively supporting full integer range needed would costprohibitive arbitraryprecision arithmetic details purely softwaresupported arbitrarysized integers
neither inherently superior simply different means increase parallelism advantages disadvantages often determined type software processor intended hightlp cpus often used applications lend well split numerous smaller applications socalled embarrassingly parallel problems frequently computational problem solved quickly high design strategies like symmetric multiprocessing takes significantly time high devices like superscalar cpus vice versa
bestcase scenario peak rates superscalar architectures difficult maintain since impossible keep instruction pipeline filled time therefore highly superscalar cpus average sustained often discussed rather peak
earlier term scalar used compare count afforded various methods term used strictly mathematical sense contrast vectors scalar mathematics vector geometric
although ssesse2sse3 superseded intels generalpurpose processors later ia32 designs still support usually accomplished providing functionality hardware supports much expansive instruction sets


referencesedit


weik martin 1961 third survey domestic electronic digital computing systems ballistic research laboratory
kuck david 1978 computers computations john wiley sons isbn 0471027162
thomas willhalm roman dementiev patrick december 2014 intel performance counter monitor better measure utilization softwareintelcom retrieved february 2015
liebowitz kusek spies matt christopher rynardt 2014 vmware vsphere performance designing memory storage networking performanceintensive workloads wiley isbn 9781118008195 maint multiple names authors list link
regan gerard brief history computing isbn 1848000839 retrieved november 2014
haverford college archived original october 2012 retrieved august 2015
first draft report edvac moore school electrical engineering university pennsylvania 1945
stanford university modern history computing stanford encyclopedia philosophy retrieved september 2015
enticknap nicholas summer 1998 computings golden jubilee resurrection computer conservation society issn 09587403 retrieved april 2008
manchester mark university manchester retrieved september 2015
first generation computer history museum retrieved september 2015
history integrated circuit nobelprizeorg retrieved september 2015
turley motoring microprocessors embedded retrieved november 2015
mobile processor guide summer 2013 android authority retrieved november 2015
arm946 processor retrieved november 2015
konrad zuse computer history museum retrieved september 2015
timeline computer history computers computer history museum retrieved november 2015
white stephen brief history computing first generation computers retrieved november 2015
harvard university mark paper tape punch unit computer history museum retrieved november 2015
difference neumann architecture harvard architecture retrieved november 2015
advanced architecture optimizes atmel atmel retrieved november 2015
switches transistors relays retrieved february 2016
introducing vacuum transistor device made nothing ieee spectrum retrieved february 2016
computer performance national academies press retrieved 2016
1953 transistorized computers emerge computer history museum retrieved june 2016
system360 dates characteristics
amdahl blaauw brooks april 1964 architecture system360 journal research development 87–101 doi101147rd820087 issn 00188646
brodkin john years created mainframe helped send moon technica retrieved april 2016
clarke gavin wont ibms s360 legacy register retrieved april 2016
online pdp8 home page pdp8 pdp8 retrieved september 2015
transistors relays controlling highcurrent loads york university physical computing retrieved april 2016
lilly paul brief history cpus awesome years gamer retrieved june 2016
patterson david hennessy john larus james 1999 computer organization design hardwaresoftware interface print francisco kaufmann isbn 1558604286
system370 announcement archives retrieved october 2017
system370 model continued archives retrieved october 2017
ross knox bassett digital research labs startup companies rise technology 2007 127128
shirriff texas instruments 1795 first forgotten microprocessor
speed power logic families
stonham digital logic techniques principles practice 1996
booher computer afips pp877 1968 proceedings fall joint computer conference 1968 doi101109afips1968126
lsi11 module descriptions lsi11 pdp1103 users manual maynard massachusetts digital equipment corporation november 1975
margaret rouse march 2007 definition multicore processor techtarget retrieved march 2013
richard birkby brief history microprocessor computermuseumli retrieved october 2015
osborne adam 1980 introduction microcomputers volume basic concepts berkeley california osbornemcgraw hill isbn 0931988349
zhislina victoria frequency ceased grow intel retrieved october 2015
transistor electrical engineering computer science university california retrieved october 2015
excerpts conversation gordon moore moores intel 2005 archived original 20121029 retrieved 20120725
lilly paul brief history cpus awesome years maximum retrieved december 2015
aspray william stored program concept spectrum ieee retrieved september 2015
wienand september 2013 computer science bottom chapter computer architecture bottomupcscom retrieved january 2015
brown jeffery 2005 applicationcustomized design developerworks retrieved 20051217
garside furber chung 1999 amulet3 revealed university manchester computer science department archived original december 2005
system360 model functional characteristics september 1968 a2268843
huynh jack 2003 athlon processor 512kb cache university illinois urbanachampaign 6–11 retrieved 20071006
gottlieb allan almasi george 1989 highly parallel computing redwood city calif benjamincummings isbn 0805301771
flynn september 1972 computer organizations effectiveness ieee trans comput c–21 948–960 doi101109tc19725009071
parallelism exploitation superscalar multiprocessing ieee xplore retrieved april 2016
anjum bushra perros harry 2015 partitioning endtoend budget domains bandwidth allocation video quality service constraints focus series john wiley sons isbn 9781848217461 retrieved 20160921 cloud computing multiple software components virtual environment blade component virtual machine allocated virtual central processing unit fraction blades
fifield fleming diane gentle anne hochstein lorin proulx jonathan toews everett topjian 2014 glossary openstack operations guide beijing oreilly media isbn 9781491906309 retrieved 20160920 virtual central processing unit vcpu subdivides physical cpus instances divisions
vmware infrastructure architecture overview white paper vmware vmware 2006
frequency world glossary world march 2008 retrieved january 2010
multicore processor data center definitions searchdatacentercom retrieved august 2016
quad core dual core buzzle retrieved november 2014
tegtmeier martin utilization multithreaded architectures explained oracle retrieved september 2015


external linksedit

listen article parts info
part part



audio file created revision article central processing unit dated 20060613 reflect subsequent edits article audio help
spoken articles




wikimedia commons media related microprocessors





wikiversity learning resources introduction computersprocessor



microprocessors work howstuffworks
microchips shook world article institute electrical electronics engineers












technologies



architecture



turing machine
post–turing machine
universal turing machine
quantum turing machine
belt machine
stack machine
register machine
counter machine
pointer machine
random access machine
random access stored program machine
finitestate machine
queue automaton
neumann
harvard modified
hive hierarchical identify verify exploit
dataflow

cellular
artificial neural network

machine learning
deep learning
neural processing unit


convolutional neural network
loadstore architecture
register memory architecture
register register architecture
endianness
fifo
zerocopy
numa
huma

mobile computing
surface computing
wearable computing
heterogeneous computing
parallel computing
concurrent computing
distributed computing
cloud computing
amorphous computing
ubiquitous computing
fabric computing
reconfigurable computing
cognitive computing
analogous computing
mechanical computing
electric computing
hybrid computing
digital computing
computing
peptide computing
chemical computing
organic computing
wetware computing
quantum computing
neuromorphic computing
optical computing
reversible computing
unconventional computing
hypercomputation
ternary computer
symmetric multiprocessing
asymmetric multiprocessing
cache hierarchy
memory hierarchy





types



asip
cisc
risc
edge trips
vliw epic
misc
oisc
nisc
zisc
comparison





isas




zarchitecture

mips
power architecture powerpc
sparc
visc
mill
itanium ia64
alpha
prism
superh
clipper

unicore
parisc
microblaze





word size



1bit
2bit
4bit
8bit
9bit
10bit
12bit
15bit
16bit
18bit
22bit
24bit
25bit
26bit
27bit
31bit
32bit
33bit
34bit
36bit
39bit
40bit
48bit
50bit
60bit
64bit
128bit
256bit
512bit
variable





execution



instruction pipelining

bubble
operand forwarding


outoforder execution

register renaming


speculative execution

branch predictor
memory dependence prediction


hazards





parallel level





bitserial
word


instruction
pipelining

scalar
superscalar


task

thread
process


data

vector


memory





multithreading



temporal
simultaneous hyperthreading
speculative spmt
preemptive
cooperative
clustered multithread
hardware scout





flynns taxonomy



sisd
simd swar
simt
misd
mimd

spmd


addressing mode





performance



instructions second
instructions clock
cycles instruction
floatingpoint operations second flops
transactions second
synaptic updates second sups
performance watt
orders magnitude computing
cache performance measurement metric





core count



singlecore processor
multicore processor
manycore processor





types



central processing unit
gpgpu
accelerator
vision processing unit
vector processor
barrel processor
stream processor
digital signal processor
processordma controller
network processor
baseband processor
physics processing unit
coprocessor
secure cryptoprocessor
asic
fpga
fpoa
cpld
microcontroller
microprocessor
mobile processor
notebook processor
ultralowvoltage processor
multicore processor
manycore processor
tile processor
multichip module
chip stack multichip modules
system chip
multiprocessor systemonchip mpsoc
programmable systemonchip psoc
network chip





components



execution unit
arithmetic logic unit
address generation unit
floatingpoint unit
loadstore unit
fixedpoint unit
vector unit
branch predictor
branch execution unit
instruction decoder
instruction scheduler
instruction fetch unit
instruction dispatch unit
instruction sequencing unit
unified reservation station
barrel shifter
uncore
addressed decoder
frontside
backside
northbridge computing
southbridge computing
adder electronics
binary multiplier
binary decoder
address decoder
multiplexer
demultiplexer
registers
cache
memory management unit
input–output memory management unit iommu
integrated memory controller
power management unit
translation lookaside buffer
stack engine
register file
processor register
hardware register
memory buffer register
program counter
microcode
datapath
control unit
instruction unit
reorder buffer
data buffer
write buffer
coprocessor
electronic switch
electronic circuit
integrated circuit
threedimensional integrated circuit
boolean circuit
digital circuit
analog circuit
mixedsignal integrated circuit
power management integrated circuit
quantum circuit
logic gate

combinational logic
sequential logic
emittercoupled logic
transistor–transistor logic
glue logic


quantum gate
gate array
counter digital
computing
semiconductor device
clock rate
multiplier
vision chip
memristor





power
management




acpi
dynamic frequency scaling
dynamic voltage scaling
clock gating





hardware
security



nonexecutable memory
memory protection extensions intel
intel secure
hardware restriction firmware
software guard extensions intel
trusted execution technology
omnishield
trusted platform module
secure cryptoprocessor
hardware security module
hengzhi chip





related



history generalpurpose cpus

















basic computer components



input devices



keyboard
image scanner
microphone
pointing device

graphics tablet
joystick
light
mouse

optical


pointing stick
touchpad
touchscreen
trackball


webcam

softcam


refreshable braille display





output devices



monitor
refreshable braille display
printer
speakers
plotter





removable
data storage



optical disc



bluray


disk pack
floppy disk
memory card
flash drive





computer case



central processing unit
sshd
motherboard
network interface controller
power supply
randomaccess memory
sound card
video card
modem
expansion card





ports



ethernet
firewire ieee 1394
parallel port
serial port
port

thunderbolt
hdmi
esata
audio jack











retrieved httpsenwikipediaorgwindexphptitlecentralprocessingunitoldid816882138 categories central processing unithidden categories maint multiple names authors listall articles vague ambiguous timevague ambiguous time september 2016articles expanded september 2016all articles expandedarticles using small message boxesspoken articles
