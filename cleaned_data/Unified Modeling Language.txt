
unified modeling language generalpurpose developmental modeling language field software engineering intended provide standard visualize design system1
originally motivated desire standardize disparate notational systems approaches software design developed grady booch ivar jacobson james rumbaugh rational software 1994–1995 development 19961
1997 adopted standard object management group managed organization ever since 2005 also published international organization standardization approved standard2 since standard periodically revised cover latest revision uml3



contents


history




cardinality notation





design

software development methods
modeling


diagrams

structure diagrams
behavior diagrams
interaction diagrams


meta modeling
adoption
also
references
reading
external links



historyedit




history objectoriented methods notation


1xedit
evolving since second half 1990s roots objectoriented programming methods developed late 1980s early 1990s timeline image shows highlights history objectoriented modeling methods notation
originally based notations booch method objectmodeling technique objectoriented software engineering oose integrated single language4
rational software corporation hired james rumbaugh general electric 1994 company became source popular objectoriented modeling approaches day5 rumbaughs objectmodeling technique grady boochs method soon assisted efforts ivar jacobson creator objectoriented software engineering oose method joined rational 19951
1xedit
technical leadership three rumbaugh jacobson booch consortium called partners organized 1996 complete unified modeling language specification propose object management group standardisation partnership also contained additional interested parties example microsoft partners draft proposed january 1997 consortium month partners formed group designed define exact meaning language constructs chaired cris kobryn administered eykholt finalize specification integrate standardization efforts result work submitted august 1997 adopted november 199716
first release task force formed1 improve language released several minor revisions
standards produced well original standard noted ambiguous inconsistent89
cardinality notationedit
database chen bachman diagrams class models specified lookacross cardinalities even though several authors merise10 elmasri navathe11 amongst others12 prefer sameside lookhere roles minimum maximum cardinalities recent researchers feinerer13 dullea alia14 shown lookacross technique used diagrams less effective less coherent applied nary relationships order strictly greater
feinerer says problems arise operate lookacross semantics used associations hartmann15 investigates situation shows different transformations fail next pages lookacross interpretation introduces several difficulties prevent extension simple mechanisms binary nary associations
2xedit
major revision replaced version 2005 developed enlarged consortium improve language reflect experience usage features16
although never released formal specification versions appeared 2007 followed february 2009 formally released 201017 formally released august 201117 released october 2012 process version officially released june 201517
four parts specification

superstructure defines notation semantics diagrams model elements
infrastructure defines core metamodel superstructure based
object constraint language defining rules model elements
diagram interchange defines diagram layouts exchanged

current versions standards follow superstructure version infrastructure version version diagram interchange version 1018 continues updated improved revision task force resolve issues language19
designedit
offers visualize systems architectural blueprints diagram image including elements

activities jobs
individual components system

interact software components


system
entities interact others components interfaces
external user interface

although originally intended objectoriented design documentation extended larger design documentation listed above20 found useful many contexts21
software development methodsedit
development method itself22 however designed compatible leading objectoriented software development methods time example booch method objectory especially originally intended used work began rational software
modelingedit
important distinguish model diagrams system diagram partial graphic representation systems model diagrams need completely cover model deleting diagram change model model also contain documentation drives model elements diagrams written cases
diagrams represent different views system model23

static structural view emphasizes static structure system using objects attributes operations relationships includes class diagrams composite structure diagrams
dynamic behavioral view emphasizes dynamic behavior system showing collaborations among objects changes internal states objects view includes sequence diagrams activity diagrams state machine diagrams

models exchanged among tools using metadata interchange format
tools behavior modelling usecase model caused oose cases specifying required usages system typically used capture requirements system system supposed do24
diagramsedit


diagrams


structural diagrams




class diagram
component diagram
composite structure diagram
deployment diagram
object diagram
package diagram
profile diagram




behavioral diagrams




activity diagram
communication diagram
interaction overview diagram
sequence diagram
state diagram
timing diagram
case diagram















many types diagrams divided categories4 types represent structural information rest represent general types behavior including represent different aspects interactions diagrams categorized hierarchically shown following class diagram4



diagrams contain comments notes explaining usage constraint intent
structure diagramsedit
structure diagrams emphasize things must present system modeled since structure diagrams represent structure used extensively documenting software architecture software systems example component diagram describes software system split components shows dependencies among components







component diagram









class diagram




behavior diagramsedit
behavior diagrams emphasize must happen system modeled since behavior diagrams illustrate behavior system used extensively describe functionality software systems example activity diagram describes business operational stepbystep activities components system







activity diagram









case diagram




interaction diagramsedit
interaction diagrams subset behavior diagrams emphasize flow control data among things system modeled example sequence diagram shows objects communicate regarding sequence messages







sequence diagram









communication diagram




meta modelingedit
main article metaobject facility




illustration metaobject facility


object management group developed metamodeling architecture define called metaobject facility25 designed fourlayered architecture shown image right provides metameta model called layer m3model language used metaobject facility build metamodels called m2models
prominent example layer metaobject facility model metamodel describes m2models describe elements m1layer thus m1models would example models written last layer m0layer data layer used describe runtime instances system26
metamodel extended using mechanism called stereotyping criticised insufficientuntenable brian hendersonsellers cesar gonzalezperez uses abuses stereotype mechanism 2027
adoptionedit
marketed many contexts2128
treated times design silver bullet leads problems misuse includes overuse designing every part system unnecessary assuming novices design it29
considered large language many constructs people including jacobson feel umls size hinders learning therefore using it30
alsoedit


software portal



applications
business process model notation bpmn
modelbased testing
modeldriven engineering
object oriented role analysis modeling
systems modeling language sysml
list unified modeling language tools

referencesedit
article based material taken free online dictionary computing prior november 2008 incorporated relicensing terms gfdl version later


unified modeling language user guide addisonwesley 2005 isbn 0321267974 sample content look history
isoiec 195012005 information technology open distributed processing unified modeling language version isoorg 20050401 retrieved 20150507
isoiec 1950512012 information technology object management group unified modeling language part infrastructure isoorg 20120420 retrieved 20140410
unified modeling language superstructure version object management group retrieved april 2014
andreas zendler 1997 advanced concepts life cycle models tools objecktoriented software development p122
specification version document ad970811 omgorg retrieved 20110922
omgorg retrieved 20140410
génova alia 2004 open issues industrial case modeling
agile awkward retrieved 20110922
hubert tardieu arnold rochfeld rené colletti methode merise principes outils paperback 1983
elmasri ramez shamkant navathe fundamentals database systems third addisonwesley menlo park 2000
2004 23rd international conference conceptual modeling shanghai china november 2004 archived 2013 wayback machine
formal treatment class diagrams efficient method configuration management 2007 retrieved 20110922
james dullea ilyeol song ioanna lamprou analysis structural validity entityrelationship modeling 2002 retrieved 20110922
reasoning participation constraints chens constraints hartmann 2003 retrieved 20130817
omgorg retrieved 20110922
omgorg retrieved 20110922
formal specifications modeling metadata paragraph retrieved 20160212
issues revision task force mailing list omgorg retrieved 20140410
satish mishra 1997 visual modeling unified modeling language introduction rational software corporation accessed november 2008
success stories retrieved april 2014
john hunt 2000 unified process practitioners objectoriented design java springer 2000 isbn 1852332751 p5door
holt institution electrical engineers 2004 systems engineering watching wheels 2004 isbn 0863413544
manuel almendrosjiménez jesús iribarne luis 2007 describing usecase relationships sequence diagrams comput 116128 101093comjnlbxl053
iman poernomo 2006 metaobject facility typed proceeding proceedings 2006 symposium applied computing 18451849
infrastructure omgorg 20110805 retrieved 20140410
hendersonsellers gonzalezperez 2006 uses abuses stereotype mechanism model driven engineering languages systems springer berlin heidelberg
even care truly ubiquitous
death fever
ivar jacobson future methodologies


readingedit

ambler scott william 2004 object primer agile model driven development cambridge university press isbn 0521540186
chonoles michael jesse james schardt 2003 dummies wiley publishing isbn 0764526146
fowler martin distilled brief guide standard object modeling language addisonwesley isbn 0321193687
jacobson ivar grady booch james rumbaugh 1998 unified software development process addison wesley longman isbn 0201571692
martin robert cecil 2003 java programmers prentice hall isbn 0131428489
noran ovidiu business modelling idef retrieved 20051228
horst kargl interactive metamodel additional examples
penker magnus hanserik eriksson 2000 business modeling john wiley sons isbn 0471295515

external linksedit



wikimedia commons media related unified modeling language





wikiversity learning resources



official website












unified modeling language



actors



organizations

object management group
partners


persons

grady booch
ivar jacobson
james rumbaugh










concepts




object oriented



objectoriented programming
objectoriented analysis design
objectoriented modeling





structure



actor
attribute
artifact
class
component
interface
object
package
profile diagram





behavior



activity
event
message
method
state
case





relationships



aggregation
association
composition
dependency
generalization inheritance





extensibility



profile
stereotype









multiplicity








diagrams




structure



class
component
composite structure
deployment
object
package





behaviour



activity
state machine
case





interaction



communications
sequence
interaction overview
timing








derived languages



systems modeling language sysml
exchange format
metadata interchange
executable xuml





topics



glossary terms
rational unified process
list unified modeling language tools
object modeling color

















software engineering



fields



computer programming
requirements engineering
software deployment
software design
software maintenance
software testing
systems analysis
formal methods





concepts



data modeling
enterprise architecture
functional specification
modeling language
orthogonality
programming paradigm
software
software archaeology
software architecture
software configuration management
software development methodology
software development process
software quality
software quality assurance
software verification validation
structured analysis





orientations



agile
aspectoriented
object orientation
ontology
service orientation
sdlc





models




developmental



agile

executable
incremental model
iterative model
prototype model


scrum
spiral model
vmodel
waterfall model










spice
cmmi
data model
model
function model
information model
metamodeling
object model
systems model
view model





languages



idef


sysml









software
engineers




victor basili
kent beck
grady booch
fred brooks
barry boehm
peter chen
danese cooper
ward cunningham
demarco
edsger dijkstra
delores etter
martin fowler
adele goldstine
margaret hamilton
hoare
lois haibt
mary jean harrold
grace hopper
watts humphrey
michael jackson
ivar jacobson
alan
nancy leveson
stephen mellor
bertrand meyer
david parnas
trygve reenskaug
winston royce
james rumbaugh
mary shaw
peri tarr
elaine weyuker
niklaus wirth
edward yourdon





related fields



computer science
computer engineering
project management
risk management
systems engineering








category
commons

















standards standard number




list standards romanizations standards



1–9999



























































1000
1004
1007
10731
1413
1538
1745
1989
2014
2015
2022
2047
2108
2145
2146
2240
2281
2709
2711
2788
2848
2852
3029
3103
3166






3297
3307
3602
3864
3901
3977
4031
4157
4217
4909
5218
5428
5775
5776
5800
5964
6166
6344
6346
6385
6425
6429
6438
6523
6709
7001
7002
7098
7185
7200
7498
7736
7810
7811
7812
7813
7816
8000
8178
8217
8571
8583
8601
8632
8652
8691
8807
88205
8859




















8879
90009001
9075
9126
9293
9241
9362
9407
9506
9529
9564
9594
9660
9897
9899
9945
9984
9985
9995





10000–19999



10005
10006
10007
10116
101183
10160
10161
10165
10179
10206
10218
10303








10383
10487
10585
10589
10646
10664
10746
10861
10957
10962
10967
11073
11170
11179
11404
11544
11783
11784
11785
11801
11898
11940
11941
11941
11992
12006
12182
12207
122342
13211





13216
13250
13399
134062
13450
13485
13490
13567
13568
13584
13616
14000
14031
14224
14289
14396
14443
14496












14644
14649
14651
14698
14750
14764
14882
14971
15022
15189
15288
15291
15292
15398
15408
15444




15445
15438
15504
15511
15686
15693
15706




15707
15897
15919
15924
15926
15926
15930
16023
16262
166122
16750
16949
17024
17025
17100
17203
17369
17442
17799
18000
18004
18014
18245
18629
18916
19005
19011
19092

19114
19115
19125
19136
19439
19500
19501
19502
19503
19505
19506
19507
19508
19509
19510
196002014
19752
19757
19770
197751
197945
19831





20000



20000
20022
20121
20400
21000
21047
21500
218272002
22000
23270
23271
23360
24517
24613
24617
24707
25178
25964
26000
26300
26324
27000 series
27000
270012005
270012013
27002
27006
27729
28000
29110
29148
291992
29500
30170
31000
32000
38500
40500
42010
55000
80000














category









authority control



lccn sh97003561
44697818
cb131836959 data











retrieved httpsenwikipediaorgwindexphptitleunifiedmodelinglanguageoldid815561113 categories architecture description languagedata modeling languagesdata modeling diagramsdiagramsknowledge representationiso standardsspecification languagesunified modeling languagesoftware modeling languagehidden categories webarchive template wayback linksuse american english january 2012all wikipedia articles written american englishuse dates july 2011wikipedia articles lccn identifierswikipedia articles identifierswikipedia articles identifiers
