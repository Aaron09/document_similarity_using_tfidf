
pascal

paradigm



imperative
structured





designed
niklaus wirth


first appeared
1970 years 1970


typing discipline



static
strong
safe





filename extensions



major implementations





6000
embarcadero delphi
1900
pascalp
pdp11
pdp10
system370
pascal
free pascal
pascal





dialects





delphi
turbo pascal
ucsd pascal





influenced


algol


influenced






component pascal

java123
modula
oberon
object pascal
oxygene
seed7





pascal imperative procedural programming language niklaus wirth designed 1968–69 published 1970 small efficient language intended encourage good programming practices using structured programming data structuring named honor french mathematician philosopher physicist blaise pascal
pascal developed pattern algol language wirth already developed several improvements language part algol proposals accepted pascal developed separately released 1970 derivative known object pascal designed objectoriented programming developed 1985 used apple computer borland late 1980s later developed delphi microsoft windows platform extensions pascal concepts pascallike languages modula2 oberon



contents


history

earlier efforts
pascal
object pascal


brief description
implementations

early pascal compilers
pascalp system
object pascal turbo pascal
variants


language constructs

data types
subrange types
types
type declarations
file type
pointer types
control structures
procedures functions
semicolons statement separators


resources

compilers interpreters
ides
libraries


standards

isoiec 71851990 pascal
isoiec 102061990 extended pascal
variations

borlandlike pascal compilers


list related standards


reception

early criticism


also
references
reading
external links



historyedit
earlier effortsedit
much history computer language design 1960s traces history algol language algol developed 1950s explicit goal able clearly describe algorithms included number features structured programming remain common languages
shortly introduction 1962 wirth began working dissertation helmut weber euler programming language euler based algols syntax many concepts derivative primary goal dynamic lists types allowing used roles similar lisp language published 1965
time number problems algol identified notably lack standardized string system group tasked maintaining language begun algol process identify improvements calling submissions wirth tony hoare submitted conservative modifications strings clean syntax considered minor worth using standard algol wirth wrote compiler language became known algol
algol efforts would choose dramatically complex language algol complexity language considerable difficulty producing highperformance compilers widely used industry left opening newer languages
pascaledit
pascal influenced algol efforts explicit goals producing language would efficient compiler runtime allow development wellstructured programs useful teaching students structured programming4 generation students used pascal introductory language undergraduate courses
early successes language introduction ucsd pascal version custom operating system could ported different platforms platform apple widespread pascal becoming primary highlevel language used development apple lisa later macintosh parts original macintosh operating system handtranslated motorola 68000 assembly language pascal sources5
typesetting system donald knuth written original literate programming system based pdp10 pascal applications like total commander skype macromedia captivate written delphi object pascal apollo computer used pascal systems programming language operating systems beginning 1980
variants pascal also frequently used everything research projects games embedded systems newer pascal compilers exist widely used6
object pascaledit
work lisa larry tesler began corresponding wirth idea adding object oriented extensions language initially clascal introduced 1983 lisa program faded replaced version known object pascal created introduced macintosh 1985 part macapp application framework became apples primary development language early 1990s
object pascal extensions later added turbo pascal years became delphi system microsoft windows delphi still used developing windows applications also ability crosscompile code android another crossplatform version called free pascal lazarus popular linux users since also offers write compile anywhere development codetyphon lazarus distribution preinstalled packages crosscompilers
brief descriptionedit
wirths intention create efficient language regarding compilation speed generated code based structured programming recently popularized concept promoted book algorithms data structures programs pascal roots algol language also introduced concepts mechanisms algols scalars arrays enabled programmers define complex structured datatypes also made easier build dynamic recursive data structures lists trees graphs important features included records enumerations subranges dynamically allocated variables associated pointers sets make possible meaningful pascal strong typing objects means type data cannot converted interpreted another without explicit conversions similar mechanisms standard many programming languages today languages influenced pascals development simula wirths algol
pascal like many programming languages today unlike languages family allows nested procedure definitions level depth also allows kinds definitions declarations inside subroutines procedures functions enables simple coherent syntax complete program syntactically nearly identical single procedure function except heading three keywords
implementationsedit
early pascal compilersedit
first pascal compiler designed zürich 6000 series mainframe computer family niklaus wirth reports first attempt implement fortran 1969 unsuccessful fortrans inadequacy express complex data structures second attempt implemented clike language scallop engeli translated hand schild pascal bootstrapping7 operational mid1970 many pascal compilers since similarly selfhosting compiler written pascal compiler usually capable recompiling features added language compiler ported environment pascal compiler notable exception written
first successful port pascal compiler another mainframe completed welsh quinn queens university belfast 1972 target 1900 series compiler turn parent pascal compiler information computer systems multum minicomputer multum port developed view using pascal systems programming language findlay cupples cavouras davis working department computing science glasgow university thought multum pascal completed summer 1973 first 16bit implementation
completely compiler completed welsh 1977 offered sourcelanguage diagnostic feature incorporating profiling tracing typeaware formatted postmortem dumps implemented findlay watt glasgow university implementation ported 1980 2900 series team based southampton university glasgow university standard pascal model implementation also based compiler adapted welsh manchester university 1984 check rigorously conformity 6192iso 7185 standard generate code portable abstract machine
first pascal compiler written north america constructed university illinois donald gillies pdp11 generated native machine code
pascalp systemedit
propagate language rapidly compiler porting created zurich included compiler generated code virtual stack machine code lends reasonably efficient interpretation along interpreter code pascalp system psystem compilers termed pascalp1 pascalp2 pascalp3 pascalp4 pascalp1 first version pascalp4 last come zurich version termed pascalp1 coined fact many different sources pascalp existed compiler redesigned enhance portability issued pascalp2 code later enhanced become pascalp3 intermediate code backward compatible pascalp2 pascalp4 backward compatible
pascalp4 compilerinterpreter still compiled systems compatible original pascal however accepts subset pascal language
pascalp5 created outside zurich group accepts full pascal language includes 7185 compatibility
ucsd pascal branched pascalp2 kenneth bowles utilized create interpretive ucsd psystem ucsd psystem three operating systems available launch original personal computer8 ucsd pascal used intermediate code based byte values thus earliest byte code compilers pascalp1 pascalp4 rather based 6600 word length
compiler based pascalp4 compiler created native binaries released system370 mainframe computer australian atomic energy commission called aaec pascal compiler abbreviation name commission9
early 1980s watcom pascal developed also system
1990s pascal still running terminals george mason university teach computer programming
object pascal turbo pascaledit
apple computer created lisa pascal lisa workshop 1982 ported compiler apple macintosh 1985 1985 larry tesler consultation niklaus wirth defined object pascal extensions incorporated lisa pascal pascal compilers
1980s anders hejlsberg wrote blue label pascal compiler nascom2 reimplementation compiler marketed names compas pascal polypascal acquired borland renamed turbo pascal
turbo pascal became hugely popular thanks aggressive pricing strategy first fullscreen integrated development environments fast turnaround time seconds compile link written highly optimized entirely assembly language making smaller faster much competition
1986 anders ported turbo pascal macintosh incorporated apples object pascal extensions turbo pascal extensions added back version turbo pascal version time microsoft also implemented object pascal compiler1011 turbo pascal large influence pascal community began concentrating mainly late 1980s many hobbyists search structured replacement basic used product also began adopted professional developers around time number concepts imported pascal programmers cbased microsoft windows directly extensions included nullterminated strings pointer arithmetic function pointers addressof operator unsafe typecasts
turbo pascal derivatives units module concepts modular languages however provide nested module concept qualified import export specific symbols
variantsedit
super pascal variant added nonnumeric labels return statement expressions names types
universities wisconsinmadison zürich karlsruhe wuppertal developed pascalsc1213 pascalxsc141516 extensions scientific computation compilers aimed programming numerical computations pascal first borlandcompatible compiler 32bit protected mode win32 operating systems also pascal language first allowed function operator overloading development pascalsc started 1978 supporting 7185 pascal level level support added later stage17 pascalsc originally targeted processor later rewritten 68000 pascalxsc various times ported unix linux sunos hpux microsoftibm windows operating systems operates generating intermediate source code compiled native executable pascalsc language extensions adopted pascal
pascal designed around 1983 french team implement unixlike systems named standard pascal level1 parametrized array bounds definition allowed alternative keywords predefined identifiers french language included extensions ease system programming equivalent lseek18 team later moved chorusos project design distributed operating system19
pascal implementation pascal programming language using micropolis moved rapidly cpm80 running moved 80386 machine types 1994 exists today windowsxp linux implementations 2008 system brought level resulting language termed pascaline pascals calculator includes objects namespace controls dynamic arrays along many extensions generally features functionality type protection implementation also compatible original pascal implementation standardized 7185
smart mobile studio20 created aasenden compiles dialect object pascal html5javascript
smart mobile studio includes visual component language unusual incorporates extensions javascript language
language constructsedit
pascal original form purely procedural language includes traditional array algollike control structures reserved words else case ranging single statement beginend statements block pascal also data structuring constructs included original algol types like records variants pointers enumerations sets procedurepointers constructs part inherited inspired simula algol niklaus wirths algol suggestions hoare
pascal programs start program keyword list external file descriptors parameters21 required turbo pascal follows main block bracketed begin keywords semicolons separate statements full stop period ends whole program unit letter case ignored pascal source
example source code simple hello world program


program helloworldoutput
begin
writehello world
required last statement block
adding adds null statement program


data typesedit
type pascal several popular programming languages defines variable defines range values variable capable storing also defines operations permissible performed variables type predefined types


data type
type values variable capable storing


integer
integer whole numbers


real
floatingpoint numbers


boolean
value true false


char
single character ordered character


string
group string characters


range values allowed except boolean implementation defined functions provided data conversions conversion real integer following functions available round rounds integer using bankers rounding trunc rounds towards zero
programmer freedom define commonly used data types byte string terms predefined types using pascals type declaration facility example


type
byte 0255
signedbyte 128127
string packed array1255 char

oftenused types like byte string already defined many implementations
subrange typesedit
subranges ordinal data type simple type except real also made






typesedit
contrast programming languages time pascal supports type



set1
set2

fundamental concept modern mathematics used many algorithms feature useful faster equivalent construct language support sets example many pascal compilers




executes faster




sets noncontiguous values particularly useful terms performance readability


1215

examples involve sets small domains improved performance usually achieved compiler representing variables vectors operators implemented efficiently bitwise machine code operations
type declarationsedit
types defined types using type declarations


type
integer



complex types constructed simple types


type
array110 integer
record
integer
char

file

file typeedit
shown example pascal files sequences components every file buffer variable denoted procedures reading writing move buffer variable next element read introduced readf getf write introduced writef putf type text predefined file char buffer variable could used inspecting next character used check digit reading integer leads serious problems interactive programs early implementations solved later lazy concept
jensen wirth pascal strings represented packed arrays chars therefore fixed length usually spacepadded
pointer typesedit
pascal supports pointers


type
pnode node
node record
integer
char
pnode extra semicolon strictly required


nodeptr pnode
intptr integer

variable nodeptr pointer data type node record pointers used declared forward declaration exception rule things must declared used
create record assign value character fields record initialise pointer commands would


newnodeptr

nodeptra
nodeptrb
nodeptrc


could also done using statement follows


newnodeptr

nodeptr
begin






inside scope statement refer subfields record pointer nodeptr record node pointer type pnode
linked lists stacks queues created including pointer type field record also
unlike many languages feature pointers pascal allows pointers reference dynamically created variables anonymous allow reference standard static local variables pointers also must associated type pointer type compatible pointer another type pointer char compatible pointer integer helps eliminate type security issues inherent pointer implementations particularly used also removes risks caused dangling pointers ability dynamically deallocate referenced space using dispose function effect free library function found means risk dangling pointers entirely eliminated22 languages java provide automatic garbage collection entirely eliminate related problem memory leaks
restrictions lifted newer dialects
control structuresedit
pascal structured programming language meaning flow control structured standard statements usually without goto commands


writelnwaiting

writelncondition semicolon allowed
else writelncondition

semicolon single statements allowed
writelniteration

repeat



case
writezero
writeone
writetwo
345678910 write


procedures functionsedit
pascal structures programs procedures functions


program printing

integer

procedure printj integer
begin



begin main program

printi


procedures functions nest depth program construct logical outermost block
procedure function declarations goto labels constants types variables procedures functions must order ordering requirement originally intended allow efficient singlepass compilation however dialects embarcadero delphi strict ordering requirement declaration sections relaxed
semicolons statement separatorsedit
pascal adopted many language syntax features algol language including semicolon statement separator contrast languages semicolon statement terminator illustrated examples semicolon needed keyword record type declaration block case statement keyword repeat statement else keyword statement
presence extra semicolon permitted early versions pascal however addition algollike empty statements 1973 revised report later changes language 71851983 allow optional semicolons cases semicolon still permitted immediately else keyword statement else follows single statement statement sequence case nested semicolon cannot used avoid dangling else problem inner else outer putatively terminating nested semicolon instead terminates clauses instead explicit beginend block must used23
programmers usually include extra semicolons habit avoid changing last line statement sequence code appended
resourcesedit
compilers interpretersedit
several pascal compilers interpreters available general

delphi embarcaderos formerly borlandcodegear flagship rapid application development product uses object pascal language termed delphi borland descended pascal create applications windows macos android support existed d2005 d2006 d2007 terminated replaced language prism rebranded oxygene fully backward compatible recent years unicode support generics added d2009 d2010 delphi
free pascal multiplatform compiler written object pascal selfhosting aimed providing convenient powerful compiler able compile legacy applications means developing ones distributed packages runtime library come modified lgpl apart compatibility modes turbo pascal delphi pascal also procedural objectoriented syntax modes support extended features operator overloading supports many platforms operating systems current versions also feature mode
modern pascal multiplatform interpreter pcode compiler written free pascal aimed providing alternative solutions nodejs using either standard pascal dialect hybrid supporting javascriptc operators useful free pascal interpreter
turbo51 free pascal compiler 8051 family microcontrollers turbo pascal syntax
oxygene formerly known chrome object pascal compiler mono platforms created sold remobjects software sold embarcadero backend compiler prism
kylix descendant delphi support linux operating system improved object library longer supported compiler available noncommercial
pascal compiler pascal compiler compiler collection compiler written runtime library mostly pascal distributed general public license runs many platforms operating systems supports ansiiso standard languages partial turbo pascal dialect support painful omissions absence turbo pascalcompatible shortstring type support borland delphi language variations quite limited support macpascal however
dwscript delphiwebscript interpreter created matthias ackermann hannes hernler 2000 current version runs dialect object pascal largely compatible delphi also supports language constructs elements introduced prism dwscript code embedded delphi applications similar pascalscript compiled standalone application using simplemobilestudio compiled javascript code placed page24
pascal interpreter runs standard pascal notable visible execution mode shows running program variables extensive runtime error checking runs programs emit separate executable binary runs windows window macintosh
pascals extended pascal compiler tested windows
virtual pascal created vitaly miryanov 1995 native compiler compatible borland pascal syntax commercially developed fprint adding win32 support 2000 became freeware today compile win32 linux mostly compatible borland pascal delphi development canceled april 2005
compiler basis many subsequent pascalimplementedinpascal compilers implements subset full pascal
compiler 7185 full pascal adaption
smart mobile studio pascal html5javascript compiler
turbo pascal dominant pascal compiler 1980s early 1990s popular powerful extensions extremely short compilation times turbo pascal compactly written could compile debug memory without accessing disk slow floppy disk drives common programmers time magnifying turbo pascals speed advantage currently older versions turbo pascal available free download borlands site
pascal implements language pascaline named pascals calculator highly extended pascal compatible original pascal according 7185 features modules namespace control including parallel tasking modules semaphores objects dynamic arrays dimensions allocated runtime overloads overrides many extensions pascal builtin portability library custom tailored pascal language example standard text output application 1970s original pascal recompiled work window even graphical constructs added
pascalxt created siemens mainframe operating systems bs2000 sinix
pocketstudio pascal subset compiler tool palm mc68xxx processors extensions assist interfacing palm resembles delphi lazarus visual form designer object inspector source code editor
midletpascal pascal compiler generates small fast java bytecode specifically designed create software mobiles
vector pascal vector pascal language simd instruction sets supporting intel processors sonys playstation emotion engine
morfik pascal allows development applications entirely written object pascal server browser side
wdsibyl visual development environment pascal compiler win32
compiler compiler palm runs directly handheld computer
6000 pascal compiler source code first 6000 pascal compiler
pascals25
amigapascal free pascal compiler amiga computer

extensive list found pascaland site french basically list urls compilers little barrier nonfrancophones site pascal central centric pascal info advocacy site rich collection article archives plus links many compilers tutorials also interest
idesedit

devpascal pascal designed borland delphi supports free pascal pascal backends
lazarus free delphilike visual crossplatform rapid application development based free pascal lazarus available numerous platforms including linux freebsd macos microsoft windows

librariesedit

library creating applications free pascal compiler

standardsedit
isoiec 71851990 pascaledit
1983 language standardized international standard ieciso 718526 several local country specific standards including american ansiieee770x3971983 71851983 standards differed standard included level extension conformant arrays array boundaries array known time ansi allow extension original wirth version language 1989 7185 revised 71851990 correct various errors ambiguities found original document
7185 stated clarification wirths 1974 language detailed user manual report jensen wirth also notable adding conformant array parameters level standard level pascal without conformant arrays addition made request hoare approval niklaus wirth precipitating cause hoare wanted create pascal version numerical algorithms library originally written fortran found possible without extension would allow array parameters varying size similar considerations motivated inclusion 7185 facility specify parameter types procedural functional parameters
note niklaus wirth referred 1974 language standard example differentiate machine specific features 6000 compiler language documented pascal report27 second part pascal users manual report
large machines mainframes minicomputers pascal originated standards generally followed borland standards turbo pascal delphi greatest number users thus typically important understand whether particular implementation corresponds original pascal language borland dialect
versions language began differ advent ucsd pascal interpreted implementation featured several extensions language along several omissions changes many ucsd language features survive today including borlands dialect
isoiec 102061990 extended pascaledit
1990 extended pascal standard created isoiec 1020628 identical technical content29 ieeeansi 770x3160198930
variationsedit
niklaus wirths zurich version pascal issued outside basic forms 6000 compiler source porting called pascalp system pascalp compiler left several features full language example procedures functions used parameters undiscriminated variant records packing dispose interprocedural gotos features full compiler omitted
ucsd pascal professor kenneth bowles based pascalp2 consequently shared several pascalp language restrictions ucsd pascal later adopted apple pascal continued several versions although ucsd pascal actually expanded subset pascal pascalp adding back standard pascal constructs still complete standard installation pascal
early 1990s alan burns geoff davies developed pascalfc extension niklaus book algorithmsdata structuresprograms several constructs added pascalfc teaching tool concurrent programming semaphores monitors channels remoteinvocation resources able demonstrate concurrency compiler output kind pcode could executed virtual machine virtual machine simulated normal fair environment could also simulate extreme conditions unfair mode
borlandlike pascal compilersedit
borlands turbo pascal written anders hejlsberg written assembly language independent ucsd zurich compilers however adopted much subset extensions ucsd compiler probably ucsd system common pascal system suitable developing applications resourcelimited microprocessor systems available time
shrinkwrapped turbo pascal version later incarnations including borlands object pascal delphi nonborland nearcompatibles became popular programmers including shareware authors swag library pascal code features large amount code written versions delphi mind
software products compilers interactiverapid development environments compilers category

turbo pascal turboexe version turbo pascal windows turbo pascal macintosh
borland pascal essentially turbo pascal windows
object pascal extension pascal language developed apple computer team larry tesler consultation niklaus wirth inventor pascal features added borlands turbo pascal macintosh 1989 turbo pascal
delphi object pascal essentially underlying language
free pascal free pascal adopted facto standard dialect pascal programmers borland pascal later delphi
pascalabcnet generation pascal programming language including compiler integrated development environment
borland kylix compiler integrated development environment formerly sold borland later discontinued linux version borland delphi software development environment cbuilder
lazarus similar kylix function free crossplatform visual integrated development environment rapid application development using free pascal compiler supports dialects object pascal varying degrees
virtual pascal vp21 fully borland pascal borland delphi compatible 32bit pascal compiler linux version way31
sybil open source delphilike compiler implementations include wdsibyl microsoft windows commercial borland pascal compatible environment released company called speedsoft later developed delphi like environment called sybil open sourced company closed open sybil ongoing project open source pascal rapid application development tool originally based speedsofts wdsybl spcc sibyl portable component classes svde sibyl visual development tool sources core opendoc32

list related standardsedit

865121988 information processing systems computer graphics graphical kernel system language bindings part pascal

receptionedit
pascal generated wide variety responses computing community critical complimentary
early criticismedit
popular 1980s early 1990s implementations pascal closely followed wirths initial definition language widely criticized unsuitable outside teaching brian kernighan popularized language outlined notable criticisms pascal early 1981 paper pascal favorite programming language33 serious problem described article array sizes string lengths part type possible write function would accept variable length arrays even strings parameters made unfeasible write example sorting library author also criticized unpredictable order evaluation boolean expressions poor library support lack static variables raised number smaller issues also stated language provide simple constructs escape knowingly forcibly ignore restrictions limitations general complaints sources2234 noted scope declarations clearly defined original language definition sometimes serious consequences using forward declarations define pointer types record declarations mutual recursion identifier used enumeration list another difficulty like algol language allow procedures functions passed parameters predefine expected type parameters
kernighans criticisms directly addressed paper pascal programming language35 specifically myth pascal serious programmers36
despite initial criticisms pascal continued evolve kernighans points apply versions language enhanced suitable commercial product development borlands turbo pascal kernighan predicted article extensions issues incompatible compiler compiler since early 1990s however varieties seem condensed categories borlandlike
extended pascal addresses many early criticisms supports variablelength strings variable initialization separate compilation shortcircuit boolean operators default otherwise clauses case statements37
alsoedit

concurrent pascal
comparison pascal borland delphi
comparison pascal
modula2
oberon programming language
object pascal
real programmers dont pascal

referencesedit


looked carefully delphi object pascal built working prototype bound method references order understand interaction java programming language apis conclusion bound method references unnecessary detrimental language decision made consultation borland international previous experience bound method references delphi object pascal microsofts delegates archived 20120627 wayback machine javasuncom
techmetrix research 1999 history java java application servers report archived original 20101229 project went ahead name green language based model ucsd pascal makes possible generate interpretive code
conversation james gosling queue archived original july 2015 retrieved august 2015
essential pascal archived 20170418 wayback machine marco cantù
hertzfeld andy hungarian folkloreorg archived 20151118 wayback machine macintosh stories retrieved 20120306
tiobecom archived 20120315 wayback machine programming community index january 2011
computers computing personal perspective archived 20170510 wayback machine niklaus wirth
interview john brackett doug ross charles babbage institute 2004
australian atomic energy commission research establishment lucas heights nuclear science technology branch report 1977 divisional research international atomic energy agency ieae
udell crash objectoriented pascals byte july 1989
mitrofimov pascal byte march 1990
introduction scientific computing language pascalsc computers 53–69 doi1010160898122187901817
19860829 cadmus jetzt kulischarithmetik karlsruhe gibt pascalcompiler nach münchen cadmus comes kulisch arithmetic university karlsruhe delivers pascal compiler munich computerwoche german munich karlsruhe germany business media gmbh archived original 20160530 retrieved 20160530
pascalxsc pascal extended scientific computing archived original 20140105
software archived original november 2015 retrieved august 2015
universitaet wuppertal wissenschaftliches rechnen softwaretechnologie archived original november 2015 retrieved august 2015
bamberger lothar davenport james fischer hanschristoph schumacher günter ullrich christian wallis peter winter wolff gudenberg jürgen 1990 wallis peter improving floatingpoint programming bath united kingdom john wiley sons isbn 0471924377
michel gien operating system usenix summer conference toronto july 1983 7578
csberkeleyedu archived 20150207 wayback machine
httpsmartmobilestudiocom archived 20140209 wayback machine
pascal 71851990 archived 20120617 wayback machine
welsh sneeringer hoare ambiguities insecurities pascal software practice experience 685–696 1977
pascal nell dale chip weems dangling else 160–161 archived 20170318 wayback machine
flockjscodegendemo7z dwscript flock dwscript javascript codegen demo delphi script general purpose scripting engine google project hosting archived original september 2015 retrieved august 2015
pascals subset implementation wirth pascal language implementation barron wiley 1979
isoiec 71851990 pascal archived original january 2016 retrieved september 2014
wirth niklaus july 1973 programming language pascal revised report zürich archived original march 2015 retrieved september 2014
extended pascal isoiec 102061990 archived original march 2016 retrieved september 2014
language standards pascal extended pascal fortan archived original 20140714 retrieved september 2014
770x31601989 ieeeansi standard programming language extended pascal retrieved september 2014
virtual pascal archived original august 2011 retrieved april 2016
netlabsorg project open sibyl archived original march 2016 retrieved april 2016
brian kernighan 1981 pascal favorite programming language archived 20090428 wayback machine
lecarme desjardins comments programming language pascal acta informatica 231–243 1975
pascal programming language archived 20080228 wayback machine
pascal myths archived 20150917 wayback machine
extended pascal archived 20151018 wayback machine


readingedit

niklaus wirth programming language pascal 35–63 acta informatica volume 1971
hoare notes data structuring dahl dijkstra hoare editors structured programming pages 83–174 academic press 1972
hoare niklaus wirth axiomatic definition programming language pascal 335–355 acta informatica volume 1973
kathleen jensen niklaus wirth pascal user manual report springerverlag 1974 1985 1991 isbn 0387976493 isbn 3540976493
niklaus wirth algorithms data structures programs prenticehall 1975 isbn 0130224189
niklaus wirth assessment programming language pascal 23–30 sigplan notices volume issue june 1975
wirth wasserman programming language design ieee computer society press 1980
barron pascal language implementation john wiley 1981 isbn 0471278351
peter grogono programming pascal revised edition addisonwesley 1980
richard forsyth pascal work play chapman hall 1982
wirth broy denert pascal successors software pioneers contributions software engineering springerverlag 2002 isbn 3540430814
wirth recollections development pascal sigplan notices volume march 1993

external linksedit



wikimedia commons media related pascal programming language





wikibooks book topic pascal



pascal programming language
standard pascal resources history original standard pascal
free pascal scitech portal applications lazarus free pascal science medicine technology
pascalp pascalp compiler versions
pascalp5 pascalp5 page
pascalp5 source code sourceforge project
online vintage pascal8000 compiler small experiments












programming languages






comparison
timeline
history








assembly
basic



cobol
fortran

groovy
haskell
java
javascript
kotlin
lisp

objectivec
pascal
perl

python
rexx
ruby
shell
smalltalk
swift
visual basic vbnet
vbscript









category
lists

alphabetical
categorical
generational
nonenglishbased



















pascal programming language family



dialects



pascal
object pascal
pascal script
oxygene
clascal
concurrent pascal
superpascal








compilers




current



delphi
oxygene
pocketstudio
pascal
pascal
free pascal lazarus
pascalabcnet
pascal
turbo51
midletpascal
micro pascal






historic



virtual pascal
apple pascal
turbo pascal
microsoft pascal
ucsd pascal

pascalmt














firemonkey

object windows library
openwire

turbo vision
visual component library








comparison pascal
comparison pascal delphi


related
algol 1958
modula2 1977
1983
oberon 1986
modula3 1988
oberon2 1991
component pascal 1991

















standards standard number




list standards romanizations standards



1–9999



























































1000
1004
1007
10731
1413
1538
1745
1989
2014
2015
2022
2047
2108
2145
2146
2240
2281
2709
2711
2788
2848
2852
3029
3103
3166






3297
3307
3602
3864
3901
3977
4031
4157
4217
4909
5218
5428
5775
5776
5800
5964
6166
6344
6346
6385
6425
6429
6438
6523
6709
7001
7002
7098
7185
7200
7498
7736
7810
7811
7812
7813
7816
8000
8178
8217
8571
8583
8601
8632
8652
8691
8807
88205
8859




















8879
90009001
9075
9126
9293
9241
9362
9407
9506
9529
9564
9594
9660
9897
9899
9945
9984
9985
9995





10000–19999



10005
10006
10007
10116
101183
10160
10161
10165
10179
10206
10218
10303








10383
10487
10585
10589
10646
10664
10746
10861
10957
10962
10967
11073
11170
11179
11404
11544
11783
11784
11785
11801
11898
11940
11941
11941
11992
12006
12182
12207
122342
13211





13216
13250
13399
134062
13450
13485
13490
13567
13568
13584
13616
14000
14031
14224
14289
14396
14443
14496












14644
14649
14651
14698
14750
14764
14882
14971
15022
15189
15288
15291
15292
15398
15408
15444




15445
15438
15504
15511
15686
15693
15706




15707
15897
15919
15924
15926
15926
15930
16023
16262
166122
16750
16949
17024
17025
17100
17203
17369
17442
17799
18000
18004
18014
18245
18629
18916
19005
19011
19092

19114
19115
19125
19136
19439
19500
19501
19502
19503
19505
19506
19507
19508
19509
19510
196002014
19752
19757
19770
197751
197945
19831





20000



20000
20022
20121
20400
21000
21047
21500
218272002
22000
23270
23271
23360
24517
24613
24617
24707
25178
25964
26000
26300
26324
27000 series
27000
270012005
270012013
27002
27006
27729
28000
29110
29148
291992
29500
30170
31000
32000
38500
40500
42010
55000
80000














category









authority control



lccn sh85098423
cb11941547z data











retrieved httpsenwikipediaorgwindexphptitlepascalprogramminglanguageoldid818144597 categories academic programming languageseducational programming languagespascal programming languageprogramming languagesprogramming languages created 1970programming languages standardhidden categories webarchive template wayback linkscs1 germanlanguage sources dewikipedia articles lccn identifierswikipedia articles identifiersarticles example pascal code
