



pipelined implementation mips architecture pipelining concept computer architecture


computer engineering computer architecture rules methods describe functionality organization implementation computer systems definitions architecture define describing capabilities programming model computer particular implementation1 definitions computer architecture involves instruction architecture design microarchitecture design logic design implementation2



contents


history
subcategories
roles

definition
instruction architecture
computer organization
implementation


design goals

performance
power efficiency
shifts market demand


also
references
sources
external links



historyedit
first documented computer architecture correspondence charles babbage lovelace describing analytical engine building computer 1936 konrad zuse described patent applications future projects machine instructions could stored storage used data storedprogram concept34 early important examples

john neumanns 1945 paper first draft report edvac described organization logical elements5
alan turings detailed proposed electronic calculator automatic computing engine also 1945 cited john neumanns paper6

term “architecture” computer literature traced work lyle johnson frederick brooks mohammad usman khan members machine organization department ibm’s main research center 1959 johnson opportunity write proprietary research communication stretch ibmdeveloped supercomputer alamos national laboratory time known alamos scientific laboratory describe level detail discussing luxuriously embellished computer noted description formats instruction types hardware parameters speed enhancements level “system architecture” term seemed useful “machine organization”7
subsequently brooks stretch designer started chapter book planning computer system project stretch buchholz 1962 writing8

computer architecture like architecture determining needs user structure designing meet needs effectively possible within economic technological constraints

brooks went help develop system360 called zseries line computers “architecture” became noun defining “what user needs know”9 later computer users came term many lessexplicit ways10
earliest computer architectures designed paper directly built final hardware form11 later computer architecture prototypes physically built form transistor–transistor logic computer—such prototypes 6800 parisc—tested tweaked committing final hardware form 1990s computer architectures typically built tested tweaked—inside computer architecture computer architecture simulator inside fpga soft microprocessor both—before committing final hardware form12
subcategoriesedit
discipline computer architecture three main subcategories13

instruction architecture defines machine code processor reads acts upon well word size memory address modes processor registers data type
microarchitecture computer organization describes particular processor implement isa14 size computers cache instance issue generally nothing
system design includes hardware components within computing system include

data processing direct memory access
issues virtualization multiprocessing software features



types computer architecture following types used bigger companies like intel count computer architecture

macroarchitecture architectural layers abstract microarchitecture
assembly instruction architecture smart assembler convert abstract assembly language common group machines slightly different machine language different implementations
programmer visible macroarchitecture higher level language tools compilers define consistent interface contract programmers using abstracting differences underlying uisa microarchitectures java standards define different programmer visible macroarchitecture
uisa microcode instruction architecture—a group machines different hardware level microarchitectures share common microcode architecture hence uisacitation needed
architecture hardware functions microprocessor provide hardware platform pins a20m ferrignne flush also messages processor emit external caches invalidated emptied architecture functions flexible functions external hardware adapt encodings change message term architecture fits functions must provided compatible systems even detailed method changes

rolesedit
definitionedit
purpose design computer maximizes performance keeping power consumption check costs relative amount expected performance also reliable many aspects considered includes instruction design functional organization logic design implementation implementation involves integrated circuit design packaging power cooling optimization design requires familiarity compilers operating systems logic design packaging15
instruction architectureedit
main article instruction architecture
instruction architecture interface computers software hardware also viewed programmers view machine computers understand high level languages java programming languages used processor understands instructions encoded numerical fashion usually binary numbers software tools compilers translate high level languages instructions processor understand
besides instructions defines items computer available program—eg data types registers addressing modes memory instructions locate available items register indexes names memory addressing modes
computer usually described small instruction manual describes instructions encoded also define short vaguely mnemonic names instructions names recognized software development tool called assembler assembler computer program translates humanreadable form computerreadable form disassemblers also widely available usually debuggers software programs isolate correct malfunctions binary computer programs
isas vary quality completeness good compromises programmer convenience easy code understand size code much code required specific action cost computer interpret instructions complexity means space needed disassemble instructions speed computer larger disassemblers comes longer disassemble time example singleinstruction isas like subtracts value value zero value returns higher value inexpensive fast however isas like convenient helpful looking size memory organization defines instructions interact memory memory interacts
design emulation software emulators programs written proposed instruction modern emulators measure size cost speed determine particular meeting goals
computer organizationedit
main article microarchitecture
computer organization helps optimize performancebased products example software engineers need know processing power processors need optimize software order gain performance lowest price require quite detailed analysis computers organization example card designers might need arrange card data processed fastest possible
computer organization also helps plan selection processor particular project multimedia projects need rapid data access virtual machines need fast interrupts sometimes certain tasks need additional components well example computer capable running virtual machine needs virtual memory hardware memory different virtual computers kept separated computer organization features also affect power consumption processor cost
implementationedit
main article implementation
instruction microarchitecture designed practical machine must developed design process called implementation implementation usually considered architectural design rather hardware design engineering implementation broken several steps

logic implementation designs circuits required logic gate level
circuit implementation transistorlevel designs basic elements gates multiplexers latches well larger blocks alus caches implemented gate level even physical level design calls
physical implementation draws physical circuits different circuit components placed chip floorplan board wires connecting created
design validation tests computer whole works situations timings design validation process starts design logic level tested using logic emulators however usually slow realistic test making corrections based first test prototypes constructed using fieldprogrammable gatearrays fpgas hobby projects stop stage final step test prototype integrated circuits integrated circuits require several redesigns problems

cpus entire implementation process organized differently often referred design
design goalsedit
exact form computer system depends constraints goals computer architectures usually trade standards power versus performance cost memory capacity latency latency amount time takes information node travel source throughput sometimes considerations features size weight reliability expandability also factors
common scheme depth power analysis figures keep power consumption maintaining adequate performance
performanceedit
modern computer performance often described instructions cycle measures efficiency architecture clock frequency since faster rate make faster computer useful measurement older computers counts instructions cycle simple modern processors easily reach near superscalar processors reach three five executing several instructions clock cycle
counting machine language instructions would misleading varying amounts work different isas instruction standard measurements count isas actual machine language instructions unit measurement usually based speed computer architecture
many people used measure computers speed clock rate usually refers cycles second main clock however metric somewhat misleading machine higher clock rate necessarily greater performance result manufacturers moved away clock speed measure performance
factors influence speed functional units speeds available memory type order instructions programs
main types speed latency throughput latency time start process completion throughput amount work done unit time interrupt latency guaranteed maximum response time system electronic event like disk drive finishes moving data
performance affected wide range design choices example pipelining processor usually makes latency worse makes throughput better computers control machinery usually need interrupt latencies computers operate realtime environment fail operation completed specified amount time example computercontrolled antilock brakes must begin braking within predictable short time brake pedal sensed else failure brake occur
benchmarking takes factors account measuring time computer takes series test programs although benchmarking shows strengths shouldnt choose computer often measured machines split different measures example system might handle scientific applications quickly another might render video games smoothly furthermore designers target special features products hardware software permit specific benchmark execute quickly dont offer similar advantages general tasks
power efficiencyedit
main article lowpower electronics
power efficiency another important measurement modern computers higher power efficiency often traded lower speed higher cost typical measurement referring power consumption computer architecture mipsw millions instructions second watt
modern circuits less power required transistor number transistors chip grows16 transistor chip requires power supply requires pathways built power however number transistors chip starting increase slower rate therefore power efficiency starting become important important fitting transistors single chip recent processor designs shown emphasis focus power efficiency rather cramming many transistors single chip possible17 world embedded computers power efficiency long important goal next throughput latency
shifts market demandedit
increases publicly released refresh rates grown slowly past years respect vast leaps power consumption reduction miniaturization demand demand longer battery life reductions size mobile technology produced greater rate change focus greater refresh rates power consumption miniaturization shown significant reductions power consumption much reported intel release haswell microarchitecture dropped power consumption benchmark 3040 watts 1020 watts18 comparing processing speed increase 2002 200619 seen focus research development shifting away refresh rates moving towards consuming less power taking less space
alsoedit


computer science portal
electronics portal
computing portal



comparison architectures
computer hardware
design
floating point
neumann
harvard modified
dataflow

reconfigurable computing
influence personal computer market
orthogonal instruction
software architecture
neumann architecture
flynns taxonomy

referencesedit



clements alan principles computer hardware fourth architecture describes internal organization computer abstract defines capabilities computer programming model computers constructed different ways different technologies architecture
hennessy john patterson david computer architecture quantitative approach fifth task many aspects including instruction design functional organization logic design implementation
electronic digital computers nature september 1948 doi101038162487a0 retrieved 20090410
susanne faber konrad zuses bemuehungen patentanmeldung 2000
neumann john 1945 first draft report edvac
reproduced copeland alan turings automatic computing engine 2005 369454
johnson lyle 1960 description stretch retrieved october 2017
buchholz werner 1962 planning computer system
system computers computer systems ibm100 retrieved 2017
hellige hans dieter 2004 genese wissenschaftskonzeptionen computerarchitektur system organs schichtmodell designraums geschichten informatik visionen paradigmen leitmotive 411–472
underwent seven paper designs year prototype initiated 1948 copeland alan turings automatic computing engine 2005
schmalz organization computer systems cise retrieved 2017
john hennessy david patterson computer architecture quantitative approach third morgan kaufmann publishers
laplante phillip 2001 dictionary computer science engineering technology press 94–95 isbn 0849326915
martin milo computer architecture upenn retrieved 2017
integrated circuits fabrication retrieved 2017
exynos series 8895 samsung retrieved 2017
measuring processor power intel april 2011 retrieved 2017
history processor performance cscolumbiaedu april 2012 retrieved 2017



sourcesedit

john hennessy david patterson 2006 computer architecture quantitative approach fourth morgan kaufmann isbn 9780123704900
barton robert functional design computers communications 1961
barton robert approach functional design digital computer proceedings western joint computer conference 1961 393–396 design burroughs b5000 computer
bell gordon newell allen 1971 computer structures readings examples mcgrawhill
blaauw brooks structure system360 part ioutline logical structure systems journal 119–135 1964
tanenbaum andrew 1979 structured computer organization englewood cliffs jersey prenticehall isbn 0131485210

external linksedit



wikimedia commons media related computer architecture



isca proceedings international symposium computer architecture
micro ieeeacm international symposium microarchitecture
hpca international symposium high performance computer architecture
asplos international conference architectural support programming languages operating systems
transactions architecture code optimization
ieee transactions computers
neumann architecture computer systems












major fields computer science




note template roughly follows 2012 computing classification system



hardware



printed circuit board
peripheral
integrated circuit
verylargescale integration
energy consumption
electronic design automation





computer systems
organization



computer architecture
embedded system
realtime computing
dependability





networks



network architecture
network protocol
network components
network scheduler
network performance evaluation
network service





software organization



interpreter
middleware
virtual machine
operating system
software quality





software notations
tools



programming paradigm
programming language
compiler
domainspecific language
modeling language
software framework
integrated development environment
software configuration management
software library
software repository





software development



software development process
requirements analysis
software design
software construction
software deployment
software maintenance
programming team
opensource model





theory computation



model computation
formal language
automata theory
computational complexity theory
logic
semantics





algorithms



algorithm design
analysis algorithms
randomized algorithm
computational geometry





mathematics
computing



discrete mathematics
probability
statistics
mathematical software
information theory
mathematical analysis
numerical analysis





information
systems



database management system
information storage systems
enterprise information system
social information systems
geographic information system
decision support system
process control system
multimedia information system
data mining
digital library
computing platform
digital marketing
world wide
information retrieval





security



cryptography
formal methods
security services
intrusion detection system
hardware security
network security
information security
application security





human–computer
interaction



interaction design
social computing
ubiquitous computing
visualization
accessibility





concurrency



concurrent computing
parallel computing
distributed computing
multithreading
multiprocessing





artificial
intelligence



natural language processing
knowledge representation reasoning
computer vision
automated planning scheduling
search methodology
control method
philosophy artificial intelligence
distributed artificial intelligence





machine learning



supervised learning
unsupervised learning
reinforcement learning
multitask learning
crossvalidation





graphics



animation
rendering
image manipulation
graphics processing unit
mixed reality
virtual reality
image compression
solid modeling





applied
computing



ecommerce
enterprise software
computational mathematics
computational physics
computational chemistry
computational biology
computational social science
computational engineering
computational healthcare
digital
electronic publishing
cyberwarfare
electronic voting
video game
word processing
operations research
educational technology
document management








book
category
portal
wikiproject
commons









authority control



40487179











retrieved httpsenwikipediaorgwindexphptitlecomputerarchitectureoldid818082197 categories computer architecturecentral processing unithidden categories articles unsourced statementsarticles unsourced statements 2017wikipedia articles identifiers
