article programming language uses algol disambiguation

algol

paradigm
procedural imperative structured


designed
backus bauer green katz mccarthy naur perlis rutishauser samelson wijngaarden vauquois wegstein woodger


first appeared
1960


influenced


algol


influenced


subsequent imperative languages socalled algollike languages simula pascal


algol short algorithmic language 1960 member algol family computer programming languages followed algol introduced code blocks begin pairs delimiting algol first language implementing nested function definitions lexical scope gave rise many programming languages including simula bcpl pascal
niklaus wirth based algol algol moving develop pascal algolw intended next generation algol algol committee decided design complex advanced rather cleaned simplified algol official algol versions named year first published algol substantially different algol criticised partially general algol refers dialects algol



contents


standardization
history

algol implementations timeline


properties

algol reserved words restricted identifiers

standard operators




examples portability issues

code sample comparisons

algol
algol family




also
references
reading
external links



standardizationedit
algol cobol first languages seek standardization

15381984 programming languages algol stabilized
isotr 16721977 hardware representation algol basic symbols withdrawn

historyedit
algol used mostly research computer scientists united states europe commercial applications hindered absence standard inputoutput facilities description lack interest language large computer vendors algol however become standard publication algorithms profound effect future language development
john backus developed backus normal form method describing programming languages specifically algol revised expanded peter naur algol donald knuths suggestion renamed backus–naur form1
peter naur editor algol bulletin drawn international discussions language selected member european language design group november 1959 capacity editor algol report produced result algol meeting paris january 19602
following people attended meeting paris january

friedrich bauer peter naur heinz rutishauser klaus samelson bernard vauquois adriaan wijngaarden michael woodger europe
john backus julien green charles katz john mccarthy alan perlis joseph henry wegstein

alan perlis gave vivid description meeting meetings exhausting interminable exhilarating became aggravated ones good ideas discarded along ones others nevertheless diligence persisted entire period chemistry excellent
language originally include recursion inserted specification last minute wishes committee3
algol inspired many languages followed tony hoare remarked language ahead time improvement predecessors also nearly successors4 scheme programming language variant lisp adopted block structure lexical scope algol also adopted wording revised report algorithmic language scheme standards documents homage algol5
algol implementations timelineedit
date least augmentations extensions derivations sublanguages algol


name
year
author
state
description
target


algol
august 19607
edsger dijkstra jaap zonneveld
netherlands
first implementation algol
electrologica


algol
19609
edgar irons

algol
1604


burroughs algol
several variants
1961
burroughs corporation participation hoare dijkstra others

basis burroughs unisys based computers
burroughs large systems
midrange well


case algol
1961


simula originally contracted simulation extension case algol
univac 1107


gogol
1961
william mckeeman

odin timesharing system
pdp1


dask algol
1961
peter naur jørn jensen
denmark
algol
dask regnecentralen


smil algol
1962
torgil ekman carlerik fröberg
sweden
algol
smil lund university


gier algol
1962
peter naur jørn jensen
denmark
algol
gier regnecentralen


dartmouth algol
1962
thomas eugene kurtz


lgp30


algol
1962
petrone
italy



elliott algol
1962
hoare

discussed 1980 turing award lecture
elliott elliott


algol translator
1962
poel
netherlands
staatsbedrijf posterijen telegrafie telefonie
zebra


kidsgrove algol
1963
duncan


english electric company kdf9


valgol
1963
schorre

test meta compiler compiler


fp6000 algol
1963
roger moore
canada
written saskatchewan power corp
fp6000


whetstone
1964
brian randell lawford john russell

atomic power division english electric company precursor ferranti pegasus national physical laboratories english electric deuce implementations
english electric company kdf9


algol
1965

norway

univac


algek
1965

ussr
minsk22
алгэк based algol60 cobol support economical tasks


malgol
1966
publ viil kotli rakhendi
estonian
minsk22


algams
1967
gams group гамс группа автоматизации программирования машин среднего класса cooperation comecon academies science
comecon
minsk22 later besm


algolzam
1967

poland

polish computer


chinese algol
1972

china
chinese characters expressed symbol system



1972



eclipse family computers


nase
1990
erik schoenfelder
germany
interpreter
linux windows


marst
2000
andrew makhorin
russia
algol60 translator
cpus supported compiler collection marst part project


burroughs dialects included special system programming dialects espol newp
propertiesedit
algol officially defined facilities implementations defined ways rarely compatible contrast algol offered extensive library transput algol parlance inputoutput facilities
algol allowed evaluation strategies parameter passing common callbyvalue callbyname callbyname certain effects contrast callbyreference example without specifying parameters value reference impossible develop procedure swap values parameters actual parameters passed integer variable array indexed integer variable10 think passing pointer swapi function every time swap referenced reevaluated every time swap referenced itll return combination values similar situation occurs random function passed actual argument
callbyname known many compiler designers interesting thunks used implement donald knuth devised test separate compilers correctly implemented recursion nonlocal references test contains example callbyname
algol reserved words restricted identifiersedit
reserved words standard burroughs large systems sublanguage




alpha
array
begin
boolean
comment
continue
direct





double
else

event
false
file





format


integer
label
list




long

pointer
procedure
real
step
switch




task

true

value






restricted identifiers standard burroughs large systems sublanguage




accept

attach

call
case
cause
close
deallocate
define
detach
disable
display

dump




enable


exchange
external
fill
forward




interrupt







liberate
line
lock

merge

monitor





open






picture
process
procure
programdump

read
release
replace
reset
resize
rewind





scan
seek

skip
sort
space
swap
thru
times

wait


write




also names intrinsic functions
standard operatorsedit


priority
operator


first
arithmetic
first
power


second
real integer


third



second



third



fourth



fifth



sixth
implication


seventh
equivalence


examples portability issuesedit
code sample comparisonsedit
algol 60edit

procedure absmaxa sizen resulty subscriptsi
value array integer real
comment absolute greatest element matrix size
transferred subscripts element
begin
integer

step
step
absap
begin absap


absmax

implementations differ text bold must written word integer including quotation marks must used implementations place integer thereby designating special keyword
following example produce table using elliott algol11

floating point algol test
begin real abcd

read

step
begin
print punch3££l
sina
cosa
print punch3samelinealigned16abc



algol familyedit
since algol facilities portable hello world program algol following program could still compile algol implementation unisys aseries mainframe straightforward simplification code taken language guide university michigandearborn computer information science department hello world algol example program page

begin
file fkindremote
ebcdic array e011
replace hello world
writef


simpler program using inline format

begin
file fkindremote
writef hello world


even simpler program using display statement

begin displayhello world

alternative example using elliott algol follows elliott algol used different characters openstringquote closestringquote represented

program hifolks
begin
print ‘hello world’


heres version elliott algol a104 standard elliott used hole paper tape thus upper case code lacked quote characters pound sign used open quote question mark close quote special sequences placed double quotes produced line teleprinter

hifolks
begin
print £hello world£l


1900 series algol version allowed input paper tape punched card paper tape full mode allowed lower case output line printer note

program hello
begin
comment open quote close printable space
written spaces ignored
write texthelloworld

finish

alsoedit





algol
algol
algol
algol
algol
algol




algol
atlas autocode
coral
edinburgh
jensens device
iswim




jovial
neliac
simula
salgol
scheme programming language





referencesedit


knuth donald december 1964 backus normal form backus naur form comm 735–6 doi101145355588365140
award citation peter naur 2005
httpsvanemdenwordpresscom20140618howrecursiongotintoprogrammingacomedyoferrors3
hoare december 1973 hints programming language design statement sometimes erroneously attributed edsger dijkstra also involved implementing first algol compiler
abelson dybvig rees jonathan clinger william revised3 report algorithmic language scheme dedicated memory algol retrieved 20091020
encyclopedia computer languages archived september 2011 wayback machine
daylight 2011 dijkstras rallying generalization advent recursive procedure late 1950s early 1960s computer journal doi101093comjnlbxr002
kruseman aretz june 2003 dijkstrazonneveld algol compiler electrologica software engineering history computer science kruislaan 1098 amsterdam centrum wiskunde informatica
irons edgar syntax directed compiler algol communications 1961
alfred ravi sethi jeffrey ullman 1986 compilers principles techniques tools addisonwesley isbn 0201101947 section references therein
algol manual elliott algol
1900 series algol language technical publication 3340 1965


readingedit

dijkstra edsger 1961 algol translation algol translator making translator algol technical report amsterdam mathematisch centrum
randell brian russell lawford john 1964 algol implementation translation algol programs computer academic press oclc 526731 design whetstone compiler early published descriptions implementing compiler related papers whetstone algol revisited whetstone kdf9 algol translator brian randell

external linksedit

revised report algorithmic language algol peter naur algol definition
syntax summary algol
emperors clothes hoares 1980 turing award speech discusses algol history involvement
marst free algoltoc translator
implementation algol fp6000 discussion implementation issues
naur peter august 1978 european side last phase development algol sigplan notices 15–44 doi101145960118808370
edinburgh university wrote compilers algol60 later updated algol60m based atlas autocode compilers initially bootstrapped atlas kdf9 edinburgh compilers generated code icl1900 icl475 ibm360 clone icl2900 algol60 icl2900 compiler source library documentation considerable test suite including brian wichmanns tests also rather superficial algol60 atlas autocode sourcelevel translator
eric raymonds retrocomputing museum among others link nase algol60 interpreter written
nase interpreter
stories b5000 people dedicated algol computer
hermann bottenbruch structure algol doi1021724020495
numal library numerical procedures algol developed stichting centrum wiskunde informatica legal successor stichting mathematisch centrum legal owner
algol resources translators documentation programs












standards standard number




list standards romanizations standards



1–9999



























































1000
1004
1007
10731
1413
1538
1745
1989
2014
2015
2022
2047
2108
2145
2146
2240
2281
2709
2711
2788
2848
2852
3029
3103
3166






3297
3307
3602
3864
3901
3977
4031
4157
4217
4909
5218
5428
5775
5776
5800
5964
6166
6344
6346
6385
6425
6429
6438
6523
6709
7001
7002
7098
7185
7200
7498
7736
7810
7811
7812
7813
7816
8000
8178
8217
8571
8583
8601
8632
8652
8691
8807
88205
8859




















8879
90009001
9075
9126
9293
9241
9362
9407
9506
9529
9564
9594
9660
9897
9899
9945
9984
9985
9995





10000–19999



10005
10006
10007
10116
101183
10160
10161
10165
10179
10206
10218
10303








10383
10487
10585
10589
10646
10664
10746
10861
10957
10962
10967
11073
11170
11179
11404
11544
11783
11784
11785
11801
11898
11940
11941
11941
11992
12006
12182
12207
122342
13211





13216
13250
13399
134062
13450
13485
13490
13567
13568
13584
13616
14000
14031
14224
14289
14396
14443
14496












14644
14649
14651
14698
14750
14764
14882
14971
15022
15189
15288
15291
15292
15398
15408
15444




15445
15438
15504
15511
15686
15693
15706




15707
15897
15919
15924
15926
15926
15930
16023
16262
166122
16750
16949
17024
17025
17100
17203
17369
17442
17799
18000
18004
18014
18245
18629
18916
19005
19011
19092

19114
19115
19125
19136
19439
19500
19501
19502
19503
19505
19506
19507
19508
19509
19510
196002014
19752
19757
19770
197751
197945
19831





20000



20000
20022
20121
20400
21000
21047
21500
218272002
22000
23270
23271
23360
24517
24613
24617
24707
25178
25964
26000
26300
26324
27000 series
27000
270012005
270012013
27002
27006
27729
28000
29110
29148
291992
29500
30170
31000
32000
38500
40500
42010
55000
80000














category









authority control



41418700











retrieved httpsenwikipediaorgwindexphptitlealgol60oldid815523360 categories algol 60algol programming language familyacademic programming languagesprocedural programming languagesstructured programming languagessystems programming languagesprogramming languages created 1960programming languages standardhidden categories webarchive template wayback linkswikipedia articles identifiersarticles example algol code
