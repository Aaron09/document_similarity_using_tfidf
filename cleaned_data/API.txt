redirects uses disambiguation
computer programming application programming interface subroutine definitions protocols tools building application software general terms clearly defined methods communication various software components good makes easier develop computer program providing building blocks together programmer webbased system operating system database system computer hardware software library specification take many forms often includes specifications routines data structures object classes variables remote calls posix microsoft windows standard template library java apis examples different forms apis documentation usually provided facilitate usage



contents


purpose
uses

libraries frameworks
operating systems
remote apis
apis


design
release policies

public implications


documentation
copyright controversy
examples
also
references
reading



purposeedit
graphical user interface makes easier people programs application programming interfaces make easier developers certain technologies building applications abstracting underlying implementation exposing objects actions developer needs simplifies programming graphical interface email client might provide user button performs steps fetching highlighting emails file inputoutput might give developer function copies file location another without requiring developer understand file system operations occurring behind scenes1
usesedit
libraries frameworksedit
usually related software library describes prescribes expected behavior specification library actual implementation rules single multiple implementations none abstract form different libraries share programming interface separation implementation allow programs written language library written another example scala java compile compatible bytecode scala developers take advantage java api2
vary depending type programming language involved procedural language could primarily consist basic routines execute code manipulate data handle errors objectoriented language java would provide specification classes class methods34
language bindings also apis mapping features capabilities language interface implemented another language language binding allows library service written language used developing another language56 tools swig f2py fortrantopython interface generator facilitate creation interfaces7
also related software framework framework based several libraries implementing several apis unlike normal access behavior built framework mediated extending content classes plugged framework moreover overall program flow control control caller hands framework inversion control similar mechanism89
operating systemsedit
specify interface application operating system10 posix example specifies common apis enable application written posix conformant operating system compiled another posix conformant operating system linux berkeley software distribution examples operating systems implement posix apis11
microsoft shown strong commitment backwardcompatible particularly within windows win32 library older applications newer versions windows using executablespecific setting called compatibility mode12
differs application binary interface source code based binary based instance posix provides apis linux standard base provides abi1314
remote apisedit
remote apis allow developers manipulate remote resources protocols specific standards communication allow different technologies work together regardless language platform example java database connectivity allows developers query many different types databases functions java remote method invocation uses java remote method protocol allow invocation functions operate remotely appear local developer1516 therefore remote apis useful maintaining object abstraction objectoriented programming method call executed locally proxy object invokes corresponding method remote object using remoting protocol acquires result used locally return value modification proxy object also result corresponding modification remote object17
apisedit
main article
apis defined interfaces interactions happen enterprise applications assets approach architectural approach revolves around providing programmable interfaces services different applications serving different types consumers18 used context development typically defined hypertext transfer protocol http request messages along definition structure response messages usually extensible markup language javascript object notation json format example might shipping company added ecommercefocused site facilitate ordering shipping services automatically include current shipping rates without site developer enter shippers rate table database historically virtually synonymous service recent trend socalled moving away simple object access protocol soap based services serviceoriented architecture towards direct representational state transfer rest style resources resourceoriented architecture roa19 part trend related semantic movement toward resource description framework concept promote webbased ontology engineering technologies apis allow combination multiple apis applications known mashups20 social media space apis allowed communities facilitate sharing content data communities applications content created place dynamically posted updated multiple locations web21
designedit
design significant impact usability1 principle information hiding describes role programming interfaces enabling modular programming hiding implementation details modules users modules need understand complexities inside modules22 thus design attempts provide tools user would expect1 design programming interfaces represents important part software architecture organization complex piece software23
several authors created recommendations design apis joshua bloch24 lane25 michi henning26
release policiesedit
apis common ways technology companies integrate provide apis considered members business ecosystem27
main policies releasing are28

private internal company
partner specific business partners example service companies uber lyft allow approved third party developers directly order rides within apps allows companies exercise quality control curating apps access provides additional revenue stream29
public available public example microsoft makes microsoft windows public apple releases apis carbon cocoa software written platforms

public implicationsedit
important factor becomes public interface stability changes developer part it—for example adding parameters function call—could break compatibility clients depend api30
parts publicly presented subject change thus stable parts particular explicitly documented unstable example google guava library parts considered unstable might change near future marked java annotation beta31
public sometimes declare parts deprecated usually means part considered candidates removed modified backward incompatible therefore deprecation allows developers transition away parts removed unsupported future32
documentationedit
documentation describes services offers services aiming cover everything client would need know documentation crucial development maintenance applications api33 documentation traditionally found documentation files also found social media blogs forums websites34 traditional documentation files often presented documentation system javadoc pydoc consistent appearance structure however types content included documentation differs api35 facilitate understanding documentation include description classes methods well typical usage scenarios code snippets design rationales performance discussions contracts implementation details services usually omitted restrictions limitations used also covered documentation example documentation function could note parameters cannot null function thread safe36 documentation comprehensive difficult writers keep documentation updated users read carefully potentially resulting bugs37
documentation enriched metadata information like java annotations metadata used compiler tools runtime environment implement custom behaviors custom handling38
copyright controversyedit
main article oracle america google
2010 oracle corporation sued google distributed implementation java embedded android operating system39 google acquired permission reproduce java although permission given similar openjdk project judge william alsup ruled oracle google case apis cannot copyrighted victory oracle would widely expanded copyright protection allowed copyrighting simple software commands

accept oracles claim would allow anyone copyright version code carry system commands thereby others writing different versions carry part commands4041

2014 however alsups ruling overturned appeal though question whether apis constitutes fair left unresolved42
2016 following twoweek trial jury determined googles reimplementation java constituted fair oracle vowed appeal decision43
examplesedit
also categoryapplication programming interfaces


aspi scsi device interfacing
cocoa carbon macintosh
directx microsoft windows
ehllapi
java apis
odbc microsoft windows
openal crossplatform sound
opencl crossplatform generalpurpose computing cpus gpus
opengl crossplatform graphics
openmp supports multiplatform shared memory multiprocessing programming fortran many architectures including unix microsoft windows platforms
server application programming interface sapi
simple directmedia layer


alsoedit


testing
writer
calling convention
comparison application virtual machines
common object request broker architecture corba
document object model
doublechance function
foreign function interface
interface computing
interface control document
list graphics apis
name mangling
open
open service interface definitions
platformenabled website
plugin
raml software
software development

xpcom


referencesedit


clarke steven 2004 measuring usability dobbs retrieved july 2016
odersky martin spoon venners bill december 2008 combining scala java wwwartimacom retrieved july 2016
figueiredo luiz henrique ierusalimschy roberto filho waldemar celes design implementation language extending applications tecgraf grupo tecnologia computacao grafica retrieved july 2016
sintes tony java anyway javaworld retrieved july 2016
emery david standards apis interfaces bindings acmorg retrieved 20160808
appendix creating language binding cairo cairographicsorg retrieved 20160808
f2pyorg f2pyorg retrieved 20111218
fowler martin inversion control
fayad mohamed objectoriented application frameworks
lewine donald 1991 posix programmers guide oreilly associates retrieved august 2016
west joel dedrick jason 2001 open source standardization rise linux network knowledge technology policy springer 88–112 retrieved august 2016
microsogt october 2001 support windows microsoft archived original 20090926
introduction linux foundation june 2012 retrieved 20150327
stoughton nick april 2005 update standards usenix retrieved 20090604
bierhoff kevin april 2009 protocol compliance objectoriented software institute software research retrieved july 2016
wilson jeff smart proxies javaworld retrieved july 2016
henning michi vinoski steve 1999 advanced corba programming addisonwesley isbn 9780201379273 retrieved june 2015
apification download wwwhcltechcom august 2014
benslimane djamal schahram dustdar amit sheth 2008 services mashups generation applications ieee internet computing institute electrical electronics engineers 13–15
niccolai james 20080423 enterprise mashup anyway world
parr evolution social media mashable retrieved july 2016
parnas 1972 criteria used decomposing systems modules association computing machinery retrieved august 2016
garlan david shaw mary january 1994 introduction software architecture advances software engineering knowledge engineering retrieved august 2016
bloch josh design good matters
lane 20160314 industry guide design lane 3scale retrieved 20160314
henning michi design matters
ternay guerric 2015 business ecosystem creating economic moat boostcompanies retrieved 20160201
boyd mark private partner public strategy best business programmableweb retrieved august 2016
weissbrot alison july 2016 service apis everywhere whats partner apps adexchanger exchanger retrieved august 2016
zhong mingshu 2011 empirical study evolution documentation international conference fundamental approaches software engineering springer berlin heidelberg retrieved july 2016
guavalibraries guava google core libraries java google project hosting codegooglecom 20140204 retrieved 20140211
oracle deprecate apis java documentation retrieved august 2016
dekel herbsleb james 2009 improving documentation usability knowledge pushing institute software research school computer science carnegie mellon university retrieved july 2016
parnin chris treude cristoph 2011 measuring documentation web2se retrieved july 2016 permanent dead link
maalej waleed robillard martin april 2012 patterns knowledge reference documentation ieee transactions software engineering retrieved july 2016
monperrus martin eichberg michael tekes elif mezini mira december 2011 developers aware empirical study directives documentation empirical software engineering 703–737 doi101007s1066401191864 retrieved july 2016
zhong mingshu 2011 empirical study evolution documentation international conference fundamental approaches software engineering springer berlin heidelberg retrieved july 2016
annotations microsystems retrieved 20110930
oracle programming know drdobbs 20120501 retrieved 20120509
apis cant copyrighted says judge oracle case tgdaily 20120601 retrieved 20121206
oracle america google wired 20120531 retrieved 20130922
rosenblatt seth 2014 court sides oracle android java patent appeal cnet retrieved 20140510
google beats oracle—android makes fair java apis technica retrieved 20160728


readingedit

taina bucher 2013 objects intense feeling case twitter computational culture issn 20472390 argues apis neutral tools form part contemporary programming understood fundamental part culture












operating systems



general



advocacy
comparison
forensic engineering
history
hobbyist development
list
timeline
usage share





kernel




architectures



exokernel
hybrid
microkernel
monolithic
rump kernel
unikernel





components



device driver
loadable kernel module
microkernel
user space








process management




concepts



context switch
interrupt

process
process control block
realtime
thread
timesharing





scheduling
algorithms



computer multitasking
fixedpriority preemptive
multilevel feedback queue
preemptive
roundrobin
shortest next








memory management
resource protection



error
general protection fault
memory protection
paging
protection ring
segmentation fault
virtual memory





storage access
file systems



boot loader
defragmentation
device file
file attribute
inode
journal
partition
virtual file system
virtual tape library





list



amigaos
android
beos

chrome



haiku
illumos
includeos

linux
macintosh

classic
macos


minix
morphos
musicsp
nemesis

openvms
orvyl


pick

reactos
risc
rstse
rsx11
rt11
solaris
tops10tops20

unix
visi
vmcms

windows
xinu






miscellaneous concepts




computer network

live
live
shell

















authority control



44302435











retrieved httpsenwikipediaorgwindexphptitleapplicationprogramminginterfaceoldid815540302 categories technical communicationapplication programming interfaceshidden categories articles dead external linksarticles dead external links july 2017articles permanently dead external linkswikipedia articles identifiers
