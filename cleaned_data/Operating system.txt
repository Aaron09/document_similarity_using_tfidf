

operating systems

















common features




process management
interrupts
memory management
file system
device drivers
networking
security
















operating system system software manages computer hardware software resources provides common services computer programs
timesharing operating systems schedule tasks efficient system also include accounting software cost allocation processor time mass storage printing resources
hardware functions input output memory allocation operating system acts intermediary programs computer hardware12 although application code usually executed directly hardware frequently makes system calls function interrupted operating systems found many devices contain computer cellular phones video game consoles servers supercomputers
dominant desktop operating system microsoft windows market share around 8274 macos apple second place 1323 varieties linux collectively third place 1573 mobile smartphone tablet combined sector 2017 googles android4 according third quarter 2016 data android smartphones dominant percent growth rate percent year followed apples percent year decrease market share percent operating systems amount percent5 linux distributions dominant server supercomputing sectors specialized classes operating systems embedded realtime systems exist many applications



contents


types operating systems

single multitasking
single multiuser
distributed
templated
embedded
realtime
library


history

mainframes
microcomputers


examples operating systems

unix unixlike operating systems

descendants

3111 macos


linux


microsoft windows



components

kernel

program execution
interrupts
modes
memory management
virtual memory
multitasking
disk access file systems
device drivers


networking
security
user interface

graphical user interfaces




realtime operating systems
operating system development hobby
diversity operating systems portability
market share
also
references
reading
external links



types operating systems
single multitasking
singletasking system program time multitasking operating system allows program running concurrency achieved timesharing dividing available processor time multiple processes interrupted repeatedly time slices taskscheduling subsystem operating system multitasking characterized preemptive cooperative types preemptive multitasking operating system slices time dedicates slot programs unixlike operating systems solaris linux well amigaos support preemptive multitasking cooperative multitasking achieved relying process provide time processes defined manner 16bit versions microsoft windows used cooperative multitasking 32bit versions windows win9x used preemptive multitasking
single multiuser
singleuser operating systems facilities distinguish users allow multiple programs tandem6 multiuser operating system extends basic concept multitasking facilities identify processes resources disk space belonging multiple users system permits multiple users interact system time timesharing operating systems schedule tasks efficient system also include accounting software cost allocation processor time mass storage printing resources multiple users
distributed
distributed operating system manages group distinct computers makes appear single computer development networked computers could linked communicate gave rise distributed computing distributed computations carried machine computers group work cooperation form distributed system7
templated
distributed cloud computing context templating refers creating single virtual machine image guest operating system saving tool multiple running virtual machines technique used virtualization cloud computing management common large server warehouses8
embedded
embedded operating systems designed used embedded computer systems designed operate small machines like pdas less autonomy able operate limited number resources compact extremely efficient design windows minix examples embedded operating systems
realtime
realtime operating system operating system guarantees process events data specific moment time realtime operating system single multitasking multitasking uses specialized scheduling algorithms deterministic nature behavior achieved eventdriven system switches tasks based priorities external events timesharing operating systems switch tasks based clock interrupts
library
library operating system services typical operating system provides networking provided form libraries composed application configuration code construct unikernel specialized single address space machine image deployed cloud embedded environments
history
main article history operating systems
also resident monitor
early computers built perform series single tasks like calculator basic operating system features developed 1950s resident monitor functions could automatically different programs succession speed processing operating systems exist modern complex forms early 1960s9 hardware features added enabled runtime libraries interrupts parallel processing personal computers became popular 1980s operating systems made similar concept used larger computers
1940s earliest electronic digital systems operating systems electronic systems time programmed rows mechanical switches jumper wires plug boards specialpurpose systems example generated ballistics tables military controlled printing payroll checks data punched paper cards programmable general purpose computers invented machine languages consisting strings binary digits punched paper tape introduced sped programming process stern 1981full citation needed




os360 used mainframe computers beginning 1966 including computers used apollo program


early 1950s computer could execute program time user sole computer limited period time would arrive scheduled time program data punched paper cards punched tape program would loaded machine machine would work program completed crashed programs could generally debugged front panel using toggle switches panel lights said alan turing master early manchester mark machine already deriving primitive conception operating system principles universal turing machine9
later machines came libraries programs would linked users program assist operations input output generating computer code humanreadable symbolic code genesis modernday operating system however machines still single time cambridge university england queue time washing line clothes line tapes hung different colored clothespegs indicate jobprioritycitation needed
improvement atlas supervisor introduced manchester atlas commissioned 1962 considered many first recognisable modern operating system10 brinch hansen described significant breakthrough history operating systems11
mainframes
main article history mainframe operating systems
1950s many major features pioneered field operating systems mainframe computers including batch processing inputoutput interrupt buffering multitasking spooling runtime libraries linkloading programs sorting records files features included included application software option application programmers rather separate operating system used applications 1959 share operating system released integrated utility later 7090 mainframes although quickly supplanted ibsysibjob 7090 7094
1960s ibms os360 introduced concept single spanning entire product line crucial success system360 machines ibms current mainframe operating systems distant descendants original system applications written os360 still modern machinescitation needed
os360 also pioneered concept operating system keeps track system resources used including program data space allocation main memory file space secondary storage file locking update process terminated reason resources reclaimed operating system
alternative cp67 system s36067 started whole line operating systems focused concept virtual machines operating systems used s360 series mainframes included systems developed cos360 compatibility operating system dos360 disk operating system tss360 time sharing system tos360 tape operating system bos360 basic operating system airline control program well nonibm systems michigan terminal system music multiuser system interactive computing orvyl stanford timesharing system
control data corporation developed scope operating system 1960s batch processing cooperation university minnesota kronos later operating systems developed 1970s supported simultaneous batch timesharing like many commercial timesharing systems interface extension dartmouth basic operating systems pioneering efforts timesharing programming languages late 1970s control data university illinois developed plato operating system used plasma panel displays longdistance time sharing networks plato remarkably innovative time featuring realtime chat multiuser graphical games
1961 burroughs corporation introduced b5000 master control program operating system b5000 stack machine designed exclusively support highlevel languages machine language assembler indeed first written exclusively highlevel language espol dialect algol also introduced many groundbreaking innovations first commercial implementation virtual memory development as400 made approach burroughs license as400 hardware proposal declined burroughs management protect existing hardware production still today unisys clearpathmcp line computers
univac first commercial computer manufacturer produced series exec operating systemscitation needed like early mainframe systems batchoriented system managed magnetic drums disks card readers line printers 1970s univac produced realtime basic system support largescale time sharing also patterned dartmouth system
general electric developed general electric comprehensive operating supervisor gecos introduced concept ringed security privilege levels acquisition honeywell renamed general comprehensive operating system gcos
digital equipment corporation developed many operating systems various computer lines including tops10 tops20 time sharing systems 36bit pdp10 class systems widespread unix tops10 particularly popular system universities early arpanet community
late 1960s late 1970s several hardware capabilities evolved allowed similar ported software system early systems utilized microprogramming implement features systems order permit different underlying computer architectures appear others series fact 360s 36040 except 360165 360168 microprogrammed implementations
enormous investment software systems made since 1960s caused original computer manufacturers continue develop compatible operating systems along hardware notable supported mainframe operating systems include

burroughs b5000 1961 unisys clearpathmcp present
os360 system360 1966 present
cp67 system360 1967
univac exec univac 1108 1967 2200 unisys clearpath dorado present

microcomputers




early personal computer featured command line interface






apple computer became first widespread feature graphical user interface many features windows icons would later become commonplace guis


first microcomputers capacity need elaborate operating systems developed mainframes minis minimalistic operating systems developed often loaded known monitors notable early disk operating system supported many early microcomputers closely imitated microsofts msdos became widely popular operating system chosen ibms version called 1980s apple computer apple abandoned popular apple series microcomputers introduce apple macintosh computer innovative graphical user interface
introduction intel 80386 chip october 198512 32bit architecture paging capabilities provided personal computers ability multitasking operating systems like earlier minicomputers mainframes microsoft responded progress hiring dave cutler developed operating system digital equipment corporation would lead development windows operating system continues serve basis microsofts operating systems line steve jobs cofounder apple started next computer developed nextstep operating system nextstep would later acquired apple used along code freebsd core macos latest name change
project started activist programmer richard stallman goal creating complete free software replacement proprietary unix operating system project highly successful duplicating functionality various parts unix development hurd kernel proved unproductive 1991 finnish computer science student linus torvalds cooperation volunteers collaborating internet released first version linux kernel soon merged user space components system software form complete operating system since combination major components usually referred simply linux software industry naming convention stallman free software foundation remain opposed preferring name gnulinux berkeley software distribution known unix derivative distributed university california berkeley starting 1970s freely distributed ported many minicomputers eventually also gained following mainly freebsd netbsd openbsd
examples operating systems
unix unixlike operating systems
main article unix





evolution unix systems


unix originally written assembly language13 thompson wrote mainly based bcpl based experience multics project replaced unix rewritten developed large complex family interrelated operating systems influential every modern operating system history
unixlike family diverse group operating systems several major subcategories including system linux name unix trademark open group licenses operating system shown conform definitions unixlike commonly used refer large operating systems resemble original unix
unixlike systems wide variety computer architectures used heavily servers business well workstations academic engineering environments free unix variants linux popular areas
four operating systems certified open group holder unix trademark unix hpux ibms descendants original system unix designed respective vendors hardware contrast microsystemss solaris multiple types hardware including sparc servers apples macos replacement apples earlier nonunix hybrid kernelbased variant derived nextstep mach freebsd
unix interoperability sought establishing posix standard posix standard applied operating system although originally created various unix variants
descendants
main article berkeley software distribution




first server world wide nextstep based


subgroup unix family berkeley software distribution family includes freebsd netbsd openbsd operating systems commonly found webservers although also function personal computer internet owes much existence many protocols commonly used computers connect send receive data network widely implemented refined world wide also first demonstrated number computers running based called nextstep
1974 university california berkeley installed first unix system time students staff computer science department began adding programs make things easier text editors berkeley received computers 1978 unix installed schools undergraduates modified unix even order take advantage computers hardware possibilities defense advanced research projects agency department defense took interest decided fund project many schools corporations government organizations took notice started berkeleys version unix instead official distributed
steve jobs upon leaving apple 1985 formed next company manufactured highend computers running variation called nextstep computers used bernerslee first webserver create world wide
developers like keith bostic encouraged project replace nonfree code originated bell labs done however sued years legal disputes project spawned number free derivatives netbsd freebsd 1993 openbsd netbsd 1995
macos
main article macos
macos formerly later line open core graphical operating systems developed marketed sold apple latest preloaded currently shipping macintosh computers macos successor original classic apples primary operating system since 1984 unlike predecessor macos unix operating system built technology developed next second half 1980s apple purchased company early 1997 operating system first released 1999 server followed march 2001 client version v100 cheetah since distinct client server editions macos released merged lion
prior merging macos server edition macos server architecturally identical desktop counterpart usually apples line macintosh server hardware macos server included work group management administration software tools provide simplified access network services including mail transfer agent samba server ldap server domain name server others v107 lion server aspects server integrated client version product rebranded dropping name server tools offered application14
linux
main articles linux linux kernel




ubuntu desktop linux distribution


linux kernel originated 1991 project linus torvalds university student finland posted information project newsgroup computer students programmers received support assistance volunteers succeeded creating complete functional kernel
linux unixlike developed without unix code unlike variants open license model linux kernel code available study modification resulted wide range computing machinery supercomputers smartwatches although estimates suggest linux used desktop laptop pcs15 widely adopted servers16 embedded systems17 cell phones linux superseded unix many platforms used supercomputers including 38518 many computers also green500 different order linux runs linux also commonly used small energyefficient computers smartphones smartwatches linux kernel used popular distributions debian ubuntu linux mint googles android chrome chromium
microsoft windows
main article microsoft windows
microsoft windows family proprietary operating systems designed microsoft corporation primarily targeted intel architecture based computers estimated percent total usage share connected computers15192021 latest version windows
2011 windows overtook windows common version use222324
microsoft windows first released 1985 operating environment running msdos standard operating system shipped intel architecture personal computers time 1995 windows released used msdos bootstrap backwards compatibility win9x could realmode msdos2526 16bit windows 3x27 drivers windows released 2000 last version win9x family later versions based windows kernel current client versions windows ia32 x8664 32bit microprocessors28 addition itanium still supported older server version windows server 2008 past windows supported additional architectures
server editions windows widely used recent years microsoft expended significant capital effort promote windows server operating system however windows usage servers widespread personal computers windows competes linux server market share2930
reactos windowsalternative operating system developed principles windows without using microsofts code

many operating systems significant longer amigaos microsoft classic nonunix precursor apples macos beos xts300 risc morphos haiku baremetal freemint still used niche markets continue developed minority platforms enthusiast communities specialist applications openvms formerly still active development hewlettpackard operating systems used almost exclusively academia operating systems education research operating system concepts typical example system fulfills roles minix example singularity used purely research
operating systems failed significant market share introduced innovations influenced mainstream operating systems least bell labs plan
components
components operating system exist order make different parts computer work together user software needs operating system order hardware whether simple mouse keyboard complex internet component
kernel
main article kernel computing




kernel connects application software hardware computer


firmware device drivers kernel provides basic level control computers hardware devices manages memory access programs determines programs access hardware resources sets resets cpus operating states optimal operation times organizes data longterm nonvolatile storage file systems media disks tapes flash memory
program execution
main article process computing
operating system provides interface application program computer hardware application program interact hardware obeying rules procedures programmed operating system operating system also services simplify development execution application programs executing application program involves creation process operating system kernel assigns memory space resources establishes priority process multitasking systems loads program binary code memory initiates execution application program interacts user hardware devices
interrupts
main article interrupt
interrupts central operating systems provide efficient operating system interact react environment alternative operating system watch various sources input events polling require action found older systems small stacks bytes unusual modern systems large stacks interruptbased programming directly supported modern cpus interrupts provide computer automatically saving local register contexts running specific code response events even basic computers support hardware interrupts allow programmer specify code event takes place
interrupt received computers hardware automatically suspends whatever program currently running saves status runs computer code previously associated interrupt analogous placing bookmark book response phone call modern operating systems interrupts handled operating systems kernel interrupts come either computers hardware running program
hardware device triggers interrupt operating systems kernel decides deal event generally running processing code amount code depends priority interrupt example person usually responds smoke detector alarm answering phone processing hardware interrupts task usually delegated software called device driver part operating systems kernel part another program device drivers relay information running program various means
program also trigger interrupt operating system program wishes access hardware example interrupt operating systems kernel causes control passed back kernel kernel processes request program wishes additional resources wishes shed resources memory triggers interrupt kernels attention
modes
main articles user mode supervisor mode




privilege rings microprocessor architecture available protected mode operating systems determine processes mode


modern microprocessors support multiple modes operation cpus capability offer least modes user mode supervisor mode general terms supervisor mode operation allows unrestricted access machine resources including instructions user mode operation sets limits instruction typically disallows direct access machine resources cpus might modes similar user mode well virtual modes order emulate older processor types 16bit processors 32bit 32bit processors 64bit
poweron reset system begins supervisor mode operating system kernel loaded started boundary user mode supervisor mode also known kernel mode established
supervisor mode used kernel level tasks need unrestricted access hardware controlling memory accessed communicating devices disk drives video display devices user mode contrast used almost everything else application programs word processors database managers operate within user mode access machine resources turning control kernel process causes switch supervisor mode typically transfer control kernel achieved executing software interrupt instruction motorola 68000 trap instruction software interrupt causes microprocessor switch user mode supervisor mode begin executing code allows kernel take control
user mode programs usually access restricted microprocessor instructions generally cannot execute instructions could potentially cause disruption systems operation supervisor mode instruction execution restrictions typically removed allowing kernel unrestricted access machine resources
term user mode resource generally refers registers contain information running program isnt allowed alter attempts alter resources generally causes switch supervisor mode operating system deal illegal operation program attempting example forceably terminating killing program
memory management
main article memory management
among things multiprogramming operating system kernel must responsible managing system memory currently programs ensures program interfere memory already another program since programs time share program must independent access memory
cooperative memory management used many early operating systems assumes programs make voluntary kernels memory manager exceed allocated memory system memory management almost never seen since programs often contain bugs cause exceed allocated memory program fails cause memory used programs affected overwritten malicious programs viruses purposefully alter another programs memory affect operation operating system cooperative memory management takes misbehaved program crash system
memory protection enables kernel limit process access computers memory various methods memory protection exist including memory segmentation paging methods require level hardware support 80286 doesnt exist computers
segmentation paging certain protected mode registers specify memory address allow running program access attempts access addresses trigger interrupt cause reenter supervisor mode placing kernel charge called segmentation violation segv short since difficult assign meaningful result operation usually sign misbehaving program kernel generally resorts terminating offending program reports error
windows versions level memory protection programs could easily circumvent need general protection fault would produced indicating segmentation violation occurred however system would often crash anyway
virtual memory
main article virtual memory
information page fault




many operating systems trick programs using memory scattered around hard disk continuous chunk memory called virtual memory


virtual memory addressing paging segmentation means kernel choose memory program given time allowing operating system memory locations multiple tasks
program tries access memory isnt current range accessible memory nonetheless allocated kernel interrupted would program exceed allocated memory section memory management unix kind interrupt referred page fault
kernel detects page fault generally adjusts virtual memory range program triggered granting access memory requested gives kernel discretionary power particular applications memory stored even whether actually allocated
modern operating systems memory accessed less frequently temporarily stored disk media make space available programs called swapping area memory used multiple programs memory area contains swapped exchanged demand
virtual memory provides programmer user perception much larger amount computer really there31
multitasking
main articles computer multitasking process management computing
information context switch preemptive multitasking cooperative multitasking
multitasking refers running multiple independent computer programs computer giving appearance performing tasks time since computers things time generally done timesharing means program uses share computers time execute
operating system kernel contains scheduling program determines much time process spends executing order execution control passed programs control passed process kernel allows program access memory later control returned kernel mechanism another program allowed socalled passing control kernel applications called context switch
early model governed allocation time programs called cooperative multitasking model control passed program kernel execute long wants explicitly returning control kernel means malicious malfunctioning program prevent programs using hang entire system enters infinite loop
modern operating systems extend concepts application preemption device drivers kernel code operating system preemptive control internal runtimes well
philosophy governing preemptive multitasking ensuring programs given regular time implies programs must limited much time allowed spend without interrupted accomplish modern operating system kernels make timed interrupt protected mode timer kernel triggers return supervisor mode specified time elapsed sections interrupts dual mode operation
many single user operating systems cooperative multitasking perfectly adequate home computers generally small number well tested programs amigaos exception preemptive multitasking first version windows first version microsoft windows enforced preemptive multitasking didnt reach home user market windows since windows targeted professionals
disk access file systems
main article virtual file system




file systems allow users programs organize sort files computer often directories folders


access data stored disks central feature operating systems computers store data disks using files structured specific ways order allow faster access higher reliability make better drives available space specific files stored disk called file system enables files names attributes also allows stored hierarchy directories folders arranged directory tree
early operating systems generally supported single type disk drive kind file system early file systems limited capacity speed kinds file names directory structures could limitations often reflected limitations operating systems designed making difficult operating system support file system
many simpler operating systems support limited range options accessing storage systems operating systems like unix linux support technology known virtual file system operating system unix supports wide array storage devices regardless design file systems allowing accessed common application programming interface makes unnecessary programs knowledge device accessing allows operating system provide programs access unlimited number devices infinite variety file systems installed specific device drivers file system drivers
connected storage device hard drive accessed device driver device driver understands specific language drive able translate language standard language used operating system access disk drives unix language block devices
kernel appropriate device driver place access contents disk drive format contain file systems file system driver used translate commands used access specific file system standard commands operating system talk file systems programs deal file systems basis filenames directoriesfolders contained within hierarchical structure create delete open close files well gather various information including access permissions size free space creation modification dates
various differences file systems make supporting file systems difficult allowed characters file names case sensitivity presence various kinds file attributes makes implementation single interface every file system daunting task operating systems tend recommend using support natively file systems specifically designed example ntfs windows ext3 reiserfs linux however practice third party drivers usually available give support widely used file systems generalpurpose operating systems example ntfs available linux ntfs3g ext23 reiserfs available windows thirdparty software
support file systems highly varied among modern operating systems although several common file systems almost operating systems include support drivers operating systems vary file system support disk formats installed windows file system usually limited application certain media example must 9660 windows vista ntfs file system operating system installed possible install linux onto many types file systems unlike operating systems linux unix allow file system used regardless media stored whether hard drive disc flash drive even contained within file located another file system
device drivers
main article device driver
device driver specific type computer software developed allow interaction hardware devices typically constitutes interface communicating device specific computer communications subsystem hardware connected providing commands andor receiving data device requisite interfaces operating system software applications specialized hardwaredependent computer program also operating system specific enables another program typically operating system applications software package computer program running operating system kernel interact transparently hardware device usually provides requisite interrupt handling necessary necessary asynchronous timedependent hardware interfacing needs
design goal device drivers abstraction every model hardware even within class device different newer models also released manufacturers provide reliable better performance newer models often controlled differently computers operating systems cannot expected know control every device future solve problem operating systems essentially dictate every type device controlled function device driver translate operating system mandated function calls device specific calls theory device controlled manner function correctly suitable driver available driver ensures device appears operate usual operating systems point view
versions windows vista versions linux driver execution cooperative meaning driver entered infinite loop would freeze system recent revisions operating systems incorporate kernel preemption kernel interrupts driver give tasks separates process receives response device driver gives tasks
networking
main article computer network
currently operating systems support variety networking protocols hardware applications using means computers running dissimilar operating systems participate common network sharing resources computing files printers scanners using either wired wireless connections networks essentially allow computers operating system access resources remote computer support functions could resources connected directly local computer includes everything simple communication using networked file systems even sharing another computers graphics sound hardware network services allow resources computer accessed transparently allows networked users direct access computers command line interface
clientserver networking allows program computer called client connect network another computer called server servers offer host various services network computers users services usually provided ports numbered access points beyond servers address port number usually associated maximum running program responsible handling requests port daemon user program turn access local hardware resources computer passing requests operating system kernel
many operating systems support vendorspecific open networking protocols well example systems decnet systems digital equipment corporation microsoftspecific protocols windows specific protocols specific tasks also supported file access protocols like esound easily extended network provide sound local applications remote systems sound hardware
security
main article computer security
computer secure depends number technologies working properly modern operating system provides access number resources available software running system external devices like networks kernel
operating system must capable distinguishing requests allowed processed others processed systems simply distinguish privileged nonprivileged systems commonly form requester identity user name establish identity process authentication often username must quoted username password methods authentication magnetic cards biometric data might used instead cases especially connections network resources accessed authentication reading files network share also covered concept requester identity authorization particular services resources accessible requester logged system tied either requesters user account variously configured groups users requester belongs
addition allow disallow model security system high level security also offers auditing options would allow tracking requests access resources reading file internal security security already running program possible possibly harmful requests must carried interrupts operating system kernel programs directly access hardware resources cannot secured
external security involves request outside computer login connected console kind network connection external requests often passed device drivers operating systems kernel passed onto applications carried directly security operating systems long concern highly sensitive data held computers commercial military nature united states government department defense created trusted computer system evaluation criteria tcsec standard sets basic requirements assessing effectiveness security became vital importance operating system makers tcsec used evaluate classify select trusted operating systems considered processing storage retrieval sensitive classified information
network services include offerings file sharing print services email sites file transfer protocols compromised security front line security hardware devices known firewalls intrusion detectionprevention systems operating system level number software firewalls available well intrusion detectionprevention systems modern operating systems include software firewall enabled default software firewall configured allow deny network traffic service application running operating system therefore install running insecure service telnet threatened security breach firewall would deny traffic trying connect service port
alternative strategy sandbox strategy available systems meet popek goldberg virtualization requirements operating system running user programs native code instead either emulates processor provides host pcode based system java
internal security especially relevant multiuser systems allows user system private files users cannot tamper read internal security also vital auditing since program potentially bypass operating system inclusive bypassing auditing
user interface
main article operating system user interface




screenshot bash command line command typed prompt output appears working screen current command prompt bottom


every computer operated individual requires user interface user interface usually referred shell essential human interaction supported user interface views directory structure requests services operating system acquire data input hardware devices keyboard mouse credit card reader requests operating system services display prompts status messages output hardware devices video monitor printer common forms user interface historically commandline interface computer commands typed linebyline graphical user interface visual environment commonly wimp present
graphical user interfaces




screenshot plasma graphical user interface programs take form images screen files folders directories applications take form icons symbols mouse used navigate computer


modern computer systems support graphical user interfaces often include computer systems original implementation classic integrated kernel
technically graphical user interface operating system service incorporating support operating system kernel allow responsive reducing number context switches required perform output functions operating systems modular separating graphics subsystem kernel operating system 1980s unix many others operating systems built linux macos also built modern releases microsoft windows windows vista implement graphics subsystem mostly userspace however graphics drawing routines versions windows windows server 2003 exist mostly kernel space windows little distinction interface kernel
many computer operating systems allow user install create user interface desire window system conjunction gnome plasma commonly found setup unix unixlike linux solaris systems number windows shell replacements released microsoft windows offer alternatives included windows shell shell cannot separated windows
numerous unixbased guis existed time derived competition among various vendors unix much fragmentation though effort standardize 1990s cose failed various reasons eventually eclipsed widespread adoption gnome desktop environment prior free softwarebased toolkits desktop environments motif prevalent toolkitdesktop combination basis upon developed
graphical user interfaces evolve time example windows modified user interface almost every time major version windows released changed dramatically introduction 199932
realtime operating systems
main article realtime operating system
realtime operating system rtos operating system intended applications fixed deadlines realtime computing applications include small embedded systems automobile engine controllers industrial robots spacecraft industrial control largescale computing systems
early example largescale realtime operating system transaction processing facility developed american airlines sabre airline reservations system
embedded systems fixed deadlines realtime operating system vxworks pikeos ecos montavista linux rtlinux windows realtime operating system shares similar apis desktop windows shares none desktop windows codebasecitation needed symbian also rtos kernel eka2 starting version
embedded systems operating systems palm linux although operating systems support realtime computing
operating system development hobby
also hobbyist operating system development
operating system development complicated activities computing hobbyist engagecitation needed hobby operating system classified whose code directly derived existing operating system users active developers33
cases hobby development support homebrew computing device example simple singleboard computer powered 6502 microprocessor development architecture already widespread operating system development come entirely concepts commence modeling existing operating system either case hobbyist hisher developer interact small sometimes unstructured group individuals like interests
examples hobby operating system include syllable
diversity operating systems portability
application software generally written specific operating system sometimes even specific hardwarecitation needed porting application another functionality required application implemented differently names functions meaning arguments requiring application adapted changed otherwise maintained
unix first operating system written assembly language making portable systems different native pdp1134
cost supporting operating systems diversity avoided instead writing applications software platforms like java abstractions already borne cost adaptation specific operating systems system libraries
another approach operating system vendors adopt standards example posix abstraction layers provide commonalities reduce porting costs
market share
main article usage share operating systems

october 2017 worldwide webbrowsing share3536

place
mobile system
desktop system



android
windows








nokia
linux



windows
chrome


2014 android first currently replicated others single year operating system ever ship billion devices becoming popular operating system installed base
also


computer science portal
information technology portal
computer networking portal




antivirus software
comparison operating systems
hypervisor
interruptible operating system
list important publications operating systems
list operating systems
list pioneers computer science
live
glossary operating systems terms
microcontroller
mobile device
mobile operating system
network operating system
objectoriented operating system
operating system projects
system commander
system image
timeline operating systems
usage share operating systems


references


stallings 2005 operating systems internals design principles pearson prentice hall
dhotre 2009 operating systems technical publications
desktop operating system market share worldwide statcounter global stats statcounter global stats retrieved 20171218
mobile tablet operating system market share worldwide statcounter global stats statcounter global stats retrieved 20171218
strategy analytics android captures record percent share global smartphone shipments 2016 november 2016 archived original november 2016
lorch jacob alan smith reducing processor power consumption improving processor time management singleuser operating system proceedings annual international conference mobile computing networking 1996
mishra singh singh 2014 masterslave group based model coordinator selection improvement bully algorithm international conference parallel distributed grid computing pdgc 457–460 doi101109pdgc20147030789 isbn 9781479976829
gagne silberschatz galvin 2012 operating systems concepts york wiley isbn 9781118063330
hansen brinch 2001 classic operating systems springer isbn 038795113x
lavington simon 1998 history manchester computers swindon british computer society 50–52 isbn 9781902505015
brinch hansen 2000 classic operating systems batch processing distributed systems springerverlag
intel® microprocessor quick reference guide year wwwintelcom archived original april 2016 retrieved april 2016
ritchie dennis unix manual first edition lucent technologies archived original 2008 retrieved november 2012
mountain lion move even ahead apple archived original 2011 retrieved august 2012
operating systems january april 2011 statcounter october 2009 archived original 2012 retrieved november 2009
report server market share idccom archived original september 2012 retrieved august 2012
linuxdevices staff april 2008 linux still embedded linuxgizmoscom archived original april 2016 retrieved april 2016
sublist generator top500org retrieved february 2017
global stats market share applications 2011 archived original january 2010 retrieved 2011
global stats w3counter awio services september 2009 archived original june 2012 retrieved october 2009
operating system market share applications october 2009 archived original january 2010 retrieved november 2009
w3schoolscom platform statistics archived original august 2011 retrieved october 2011
stats count global stats five operating systems archived original 2012 retrieved october 2011
global statistics w3countercom archived original june 2012 retrieved january 2012
troubleshooting msdos compatibility mode hard disks supportmicrosoftcom archived original august 2012 retrieved august 2012
using ndis pcmcia network card drivers windows supportmicrosoftcom archived original february 2013 retrieved august 2012
info windows multimedia wave device drivers must supportmicrosoftcom archived original february 2013 retrieved august 2012
arthur charles windows chips thirdparty apps need rewrite guardian archived original october 2016
operating system share groups sites locations january 2009 archived original july 2009
behind data windows still server operating systems zdnet february 2010 archived original march 2010
stallings william 2008 computer organization architecture delhi prenticehall india private limited isbn 9788120329621
poisson chronology personal computer software archived 2008 wayback machine retrieved 20080507 last checked 20090330
less hobby osnews december 2009 archived original december 2009 retrieved december 2009
history unix byte august 1983 retrieved january 2015
httpgsstatcountercomosmarketsharemobileworldwidemonthly201710201710bar archived october 2017 wayback machine
httpgsstatcountercomosmarketsharedesktopworldwidemonthly201710201710bar archived september 2017 wayback machine


reading


auslander marc larkin david scherr allan 1981 evolution operating system research development
deitel harvey deitel paul choffnes david operating systems pearsonprentice hall isbn 9780130926418
lubomur shaw alan 2003 operating systems pearson prentice hall
silberschatz galvin peter gagne greg 2008 operating systems concepts john wiley sons isbn 0470128720
obrien marakas gm2011 management information systems mcgrawhill irwin
leva alberto maggio martina papadopoulos alessandro vittorio terraneo federico 2013 controlbased operating system design isbn 9781849196093
arpacidusseau remzi arpacidusseau andrea 2015 operating systems three easy pieces


external links



look operating system wiktionary free dictionary





wikimedia commons media related screenshots operating systems





wikiversity learning resources operating systems



operating systems curlie based dmoz
multics history history operating systems












operating systems



general



advocacy
comparison
forensic engineering
history
hobbyist development
list
timeline
usage share





kernel




architectures



exokernel
hybrid
microkernel
monolithic
rump kernel
unikernel





components



device driver
loadable kernel module
microkernel
user space








process management




concepts



context switch
interrupt

process
process control block
realtime
thread
timesharing





scheduling
algorithms



computer multitasking
fixedpriority preemptive
multilevel feedback queue
preemptive
roundrobin
shortest next








memory management
resource protection



error
general protection fault
memory protection
paging
protection ring
segmentation fault
virtual memory





storage access
file systems



boot loader
defragmentation
device file
file attribute
inode
journal
partition
virtual file system
virtual tape library





list



amigaos
android
beos

chrome



haiku
illumos
includeos

linux
macintosh

classic
macos


minix
morphos
musicsp
nemesis

openvms
orvyl


pick

reactos
risc
rstse
rsx11
rt11
solaris
tops10tops20

unix
visi
vmcms

windows
xinu






miscellaneous concepts




computer network

live
live
shell

























systems science



systems
types



anatomical

biological
complex
complex adaptive
conceptual
coupled human–environment
database
dynamical
ecological
economic
energy
formal
holarchic
information
legal
measurement
metric
multiagent
nervous
nonlinear
operating
physical
planetary
political
sensory
social
star
writing





theoretical
fields







chaos theory
complex systems
control theory
cybernetics
earth system science
living systems
sociotechnical system
systemics
urban metabolism
worldsystems theory








analysis
biology
dynamics
ecology
engineering
neuroscience
pharmacology
psychology
theory
thinking








systems
scientists



alexander bogdanov
russell ackoff
william ross ashby
ruzena bajcsy
béla bánáthy
gregory bateson
anthony stafford beer
richard bellman
ludwig bertalanffy
margaret boden
kenneth boulding
murray bowen
kathleen carley
mary cartwright
west churchman
manfred clynes
george dantzig
edsger dijkstra
heinz foerster
stephanie forrest
wright forrester
barbara grosz
charles hall
lydia kavraki
james
faina kirillova
george klir
allenna leonard
edward norton lorenz
niklas luhmann
humberto maturana
margaret mead
donella meadows
mihajlo mesarovic
james grier miller
radhika nagpal
howard odum
talcott parsons
ilya prigogine
qian xuesen
anatol rapoport
peter senge
claude shannon
katia sycara
francisco varela
manuela veloso
kevin warwick
norbert wiener
jennifer wilby
anthony wilden





applications



systems theory anthropology
systems theory archaeology
systems theory political science





organizations



list
principia cybernetica








systems science portal

















major fields computer science




note template roughly follows 2012 computing classification system



hardware



printed circuit board
peripheral
integrated circuit
verylargescale integration
energy consumption
electronic design automation





computer systems
organization



computer architecture
embedded system
realtime computing
dependability





networks



network architecture
network protocol
network components
network scheduler
network performance evaluation
network service





software organization



interpreter
middleware
virtual machine
operating system
software quality





software notations
tools



programming paradigm
programming language
compiler
domainspecific language
modeling language
software framework
integrated development environment
software configuration management
software library
software repository





software development



software development process
requirements analysis
software design
software construction
software deployment
software maintenance
programming team
opensource model





theory computation



model computation
formal language
automata theory
computational complexity theory
logic
semantics





algorithms



algorithm design
analysis algorithms
randomized algorithm
computational geometry





mathematics
computing



discrete mathematics
probability
statistics
mathematical software
information theory
mathematical analysis
numerical analysis





information
systems



database management system
information storage systems
enterprise information system
social information systems
geographic information system
decision support system
process control system
multimedia information system
data mining
digital library
computing platform
digital marketing
world wide
information retrieval





security



cryptography
formal methods
security services
intrusion detection system
hardware security
network security
information security
application security





human–computer
interaction



interaction design
social computing
ubiquitous computing
visualization
accessibility





concurrency



concurrent computing
parallel computing
distributed computing
multithreading
multiprocessing





artificial
intelligence



natural language processing
knowledge representation reasoning
computer vision
automated planning scheduling
search methodology
control method
philosophy artificial intelligence
distributed artificial intelligence





machine learning



supervised learning
unsupervised learning
reinforcement learning
multitask learning
crossvalidation





graphics



animation
rendering
image manipulation
graphics processing unit
mixed reality
virtual reality
image compression
solid modeling





applied
computing



ecommerce
enterprise software
computational mathematics
computational physics
computational chemistry
computational biology
computational social science
computational engineering
computational healthcare
digital
electronic publishing
cyberwarfare
electronic voting
video game
word processing
operations research
educational technology
document management








book
category
portal
wikiproject
commons









authority control



lccn sh85094982
40062168
cb119333481 data
00865121











retrieved httpsenwikipediaorgwindexphptitleoperatingsystemoldid816240418 categories operating systemshidden categories webarchive template wayback linkswikipedia pages semiprotected vandalismwikipedia indefinitely moveprotected pagesuse dates july 2015articles needing detailed referencesall articles unsourced statementsarticles unsourced statements september 2010articles unsourced statements june 2010articles unsourced statements february 2015articles unsourced statements march 2009articles unsourced statements april 2015commons category local link different wikidataarticles dmoz linkswikipedia articles lccn identifierswikipedia articles identifierswikipedia articles identifiers
